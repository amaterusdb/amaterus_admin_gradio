# Generated by ariadne-codegen on 2023-09-24 20:09
# Source: schema.graphql

from enum import Enum


class amongus_maps_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    is_vanilla = "is_vanilla"
    mod_id = "mod_id"
    name = "name"
    updated_at = "updated_at"


class amongus_maps_select_column_amongus_maps_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    is_vanilla = "is_vanilla"


class amongus_maps_select_column_amongus_maps_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    is_vanilla = "is_vanilla"


class amongus_match_mods_select_column(str, Enum):
    amongus_match_id = "amongus_match_id"
    amongus_mod_id = "amongus_mod_id"
    amongus_mod_version_id = "amongus_mod_version_id"
    created_at = "created_at"
    id = "id"
    updated_at = "updated_at"


class amongus_match_player_result_roles_select_column(str, Enum):
    amongus_match_id = "amongus_match_id"
    amongus_role_id = "amongus_role_id"
    amongus_role_index = "amongus_role_index"
    created_at = "created_at"
    id = "id"
    person_id = "person_id"
    updated_at = "updated_at"


class amongus_match_players_select_column(str, Enum):
    amongus_match_id = "amongus_match_id"
    created_at = "created_at"
    id = "id"
    nickname = "nickname"
    person_id = "person_id"
    updated_at = "updated_at"


class amongus_matches_select_column(str, Enum):
    amongus_map_id = "amongus_map_id"
    amongus_vanilla_version_id = "amongus_vanilla_version_id"
    created_at = "created_at"
    end_time = "end_time"
    id = "id"
    index = "index"
    is_aborted = "is_aborted"
    is_vanilla = "is_vanilla"
    program_id = "program_id"
    start_time = "start_time"
    updated_at = "updated_at"


class amongus_matches_select_column_amongus_matches_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"
    is_vanilla = "is_vanilla"


class amongus_matches_select_column_amongus_matches_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"
    is_vanilla = "is_vanilla"


class amongus_mod_versions_select_column(str, Enum):
    created_at = "created_at"
    github_url = "github_url"
    id = "id"
    mod_id = "mod_id"
    release_time = "release_time"
    updated_at = "updated_at"
    version = "version"


class amongus_mods_select_column(str, Enum):
    created_at = "created_at"
    github_url = "github_url"
    id = "id"
    name = "name"
    updated_at = "updated_at"


class amongus_roles_select_column(str, Enum):
    color_rgb = "color_rgb"
    created_at = "created_at"
    document_url = "document_url"
    id = "id"
    is_vanilla = "is_vanilla"
    mod_id = "mod_id"
    name = "name"
    updated_at = "updated_at"


class amongus_roles_select_column_amongus_roles_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    is_vanilla = "is_vanilla"


class amongus_roles_select_column_amongus_roles_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    is_vanilla = "is_vanilla"


class amongusvr_maps_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    updated_at = "updated_at"


class amongusvr_match_players_select_column(str, Enum):
    amongusvr_match_id = "amongusvr_match_id"
    created_at = "created_at"
    id = "id"
    nickname = "nickname"
    person_id = "person_id"
    updated_at = "updated_at"


class amongusvr_matches_select_column(str, Enum):
    amongusvr_map_id = "amongusvr_map_id"
    created_at = "created_at"
    end_time = "end_time"
    id = "id"
    index = "index"
    is_aborted = "is_aborted"
    program_id = "program_id"
    start_time = "start_time"
    updated_at = "updated_at"


class amongusvr_matches_select_column_amongusvr_matches_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"


class amongusvr_matches_select_column_amongusvr_matches_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"


class cursor_ordering(str, Enum):
    ASC = "ASC"
    DESC = "DESC"


class fallguys_custom_round_twitter_announcements_select_column(str, Enum):
    created_at = "created_at"
    fallguys_custom_round_id = "fallguys_custom_round_id"
    id = "id"
    is_agent_tweet = "is_agent_tweet"
    twitter_tweet_id = "twitter_tweet_id"
    updated_at = "updated_at"


class fallguys_custom_round_twitter_announcements_select_column_fallguys_custom_round_twitter_announcements_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    is_agent_tweet = "is_agent_tweet"


class fallguys_custom_round_twitter_announcements_select_column_fallguys_custom_round_twitter_announcements_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    is_agent_tweet = "is_agent_tweet"


class fallguys_custom_rounds_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    in_game_creator_name = "in_game_creator_name"
    name = "name"
    person_id = "person_id"
    share_code = "share_code"
    updated_at = "updated_at"


class fallguys_match_rounds_select_column(str, Enum):
    created_at = "created_at"
    end_time = "end_time"
    fallguys_custom_round_id = "fallguys_custom_round_id"
    fallguys_match_id = "fallguys_match_id"
    fallguys_round_id = "fallguys_round_id"
    id = "id"
    index = "index"
    is_aborted = "is_aborted"
    start_time = "start_time"
    updated_at = "updated_at"


class fallguys_match_rounds_select_column_fallguys_match_rounds_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"


class fallguys_match_rounds_select_column_fallguys_match_rounds_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"


class fallguys_matches_select_column(str, Enum):
    created_at = "created_at"
    end_time = "end_time"
    id = "id"
    index = "index"
    is_aborted = "is_aborted"
    program_id = "program_id"
    start_time = "start_time"
    updated_at = "updated_at"


class fallguys_matches_select_column_fallguys_matches_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"


class fallguys_matches_select_column_fallguys_matches_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"


class fallguys_rounds_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    updated_at = "updated_at"


class fediverse_accounts_select_column(str, Enum):
    created_at = "created_at"
    fediverse_acct = "fediverse_acct"
    id = "id"
    name = "name"
    updated_at = "updated_at"


class games_select_column(str, Enum):
    apple_app_store_url = "apple_app_store_url"
    created_at = "created_at"
    epic_games_url = "epic_games_url"
    google_play_store_url = "google_play_store_url"
    id = "id"
    name = "name"
    nintendo_switch_url = "nintendo_switch_url"
    playstation_url = "playstation_url"
    steam_url = "steam_url"
    updated_at = "updated_at"
    website_url = "website_url"


class mariokart8deluxe_battle_courses_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    index = "index"
    mariokart8deluxe_console_id = "mariokart8deluxe_console_id"
    name = "name"
    updated_at = "updated_at"


class mariokart8deluxe_battle_match_players_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    mariokart8deluxe_battle_match_id = "mariokart8deluxe_battle_match_id"
    nickname = "nickname"
    person_id = "person_id"
    updated_at = "updated_at"


class mariokart8deluxe_battle_matches_select_column(str, Enum):
    created_at = "created_at"
    end_time = "end_time"
    id = "id"
    index = "index"
    is_aborted = "is_aborted"
    mariokart8deluxe_battle_course_id = "mariokart8deluxe_battle_course_id"
    mariokart8deluxe_battle_rule_id = "mariokart8deluxe_battle_rule_id"
    program_id = "program_id"
    start_time = "start_time"
    updated_at = "updated_at"


class mariokart8deluxe_battle_matches_select_column_mariokart8deluxe_battle_matches_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"


class mariokart8deluxe_battle_matches_select_column_mariokart8deluxe_battle_matches_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"


class mariokart8deluxe_battle_rules_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    index = "index"
    name = "name"
    updated_at = "updated_at"


class mariokart8deluxe_consoles_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    updated_at = "updated_at"


class mariokart8deluxe_courses_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    in_cup_index = "in_cup_index"
    mariokart8deluxe_console_id = "mariokart8deluxe_console_id"
    mariokart8deluxe_cup_id = "mariokart8deluxe_cup_id"
    name = "name"
    updated_at = "updated_at"


class mariokart8deluxe_cups_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    index = "index"
    name = "name"
    updated_at = "updated_at"


class mariokart8deluxe_race_players_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    mariokart8deluxe_race_id = "mariokart8deluxe_race_id"
    nickname = "nickname"
    person_id = "person_id"
    updated_at = "updated_at"


class mariokart8deluxe_race_rules_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    index = "index"
    name = "name"
    updated_at = "updated_at"


class mariokart8deluxe_races_select_column(str, Enum):
    created_at = "created_at"
    end_time = "end_time"
    id = "id"
    index = "index"
    is_aborted = "is_aborted"
    mariokart8deluxe_course_id = "mariokart8deluxe_course_id"
    mariokart8deluxe_race_rule_id = "mariokart8deluxe_race_rule_id"
    program_id = "program_id"
    start_time = "start_time"
    updated_at = "updated_at"


class mariokart8deluxe_races_select_column_mariokart8deluxe_races_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"


class mariokart8deluxe_races_select_column_mariokart8deluxe_races_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"


class niconico_accounts_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    remote_niconico_account_id = "remote_niconico_account_id"
    updated_at = "updated_at"


class niconico_channels_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    remote_niconico_channel_id = "remote_niconico_channel_id"
    screen_name = "screen_name"
    updated_at = "updated_at"


class niconico_communities_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    remote_niconico_community_id = "remote_niconico_community_id"
    updated_at = "updated_at"


class niconico_plus_channels_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    remote_niconico_plus_channel_id = "remote_niconico_plus_channel_id"
    screen_name = "screen_name"
    updated_at = "updated_at"


class niconico_videos_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    niconico_account_id = "niconico_account_id"
    remote_niconico_content_id = "remote_niconico_content_id"
    start_time = "start_time"
    thumbnail_url = "thumbnail_url"
    title = "title"
    updated_at = "updated_at"


class order_by(str, Enum):
    asc = "asc"
    asc_nulls_first = "asc_nulls_first"
    asc_nulls_last = "asc_nulls_last"
    desc = "desc"
    desc_nulls_first = "desc_nulls_first"
    desc_nulls_last = "desc_nulls_last"


class person_fediverse_accounts_select_column(str, Enum):
    created_at = "created_at"
    fediverse_account_id = "fediverse_account_id"
    id = "id"
    person_id = "person_id"
    updated_at = "updated_at"


class person_niconico_accounts_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    niconico_account_id = "niconico_account_id"
    person_id = "person_id"
    updated_at = "updated_at"


class person_niconico_channels_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    niconico_channel_id = "niconico_channel_id"
    person_id = "person_id"
    updated_at = "updated_at"


class person_niconico_communities_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    niconico_community_id = "niconico_community_id"
    person_id = "person_id"
    updated_at = "updated_at"


class person_niconico_plus_channels_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    niconico_plus_channel_id = "niconico_plus_channel_id"
    person_id = "person_id"
    updated_at = "updated_at"


class person_twitter_accounts_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    person_id = "person_id"
    twitter_account_id = "twitter_account_id"
    updated_at = "updated_at"


class person_youtube_channels_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    person_id = "person_id"
    updated_at = "updated_at"
    youtube_channel_id = "youtube_channel_id"


class persons_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    updated_at = "updated_at"


class program_amongus_maps_select_column(str, Enum):
    amongus_map_id = "amongus_map_id"
    created_at = "created_at"
    id = "id"
    program_id = "program_id"
    updated_at = "updated_at"


class program_amongus_mods_select_column(str, Enum):
    amongus_mod_id = "amongus_mod_id"
    amongus_mod_version_id = "amongus_mod_version_id"
    created_at = "created_at"
    id = "id"
    program_id = "program_id"
    updated_at = "updated_at"


class program_amongus_vanilla_versions_select_column(str, Enum):
    amongus_vanilla_version_id = "amongus_vanilla_version_id"
    created_at = "created_at"
    id = "id"
    program_id = "program_id"
    updated_at = "updated_at"


class program_live_archives_select_column(str, Enum):
    created_at = "created_at"
    end_time = "end_time"
    id = "id"
    person_id = "person_id"
    program_id = "program_id"
    start_time = "start_time"
    updated_at = "updated_at"
    youtube_live_id = "youtube_live_id"
    youtube_video_id = "youtube_video_id"


class program_niconico_videos_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    niconico_video_id = "niconico_video_id"
    person_id = "person_id"
    program_id = "program_id"
    updated_at = "updated_at"


class program_persons_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    is_absent = "is_absent"
    person_id = "person_id"
    program_id = "program_id"
    updated_at = "updated_at"


class program_persons_select_column_program_persons_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    is_absent = "is_absent"


class program_persons_select_column_program_persons_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    is_absent = "is_absent"


class program_projects_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    program_id = "program_id"
    project_id = "project_id"
    updated_at = "updated_at"


class program_twitter_announcements_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    person_id = "person_id"
    program_id = "program_id"
    twitter_tweet_id = "twitter_tweet_id"
    twitter_tweet_image_id = "twitter_tweet_image_id"
    updated_at = "updated_at"


class programs_select_column(str, Enum):
    created_at = "created_at"
    end_time = "end_time"
    game_id = "game_id"
    id = "id"
    start_time = "start_time"
    title = "title"
    updated_at = "updated_at"


class project_niconico_videos_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    niconico_video_id = "niconico_video_id"
    project_id = "project_id"
    updated_at = "updated_at"


class projects_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    start_time = "start_time"
    updated_at = "updated_at"


class twitter_accounts_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    remote_twitter_user_id = "remote_twitter_user_id"
    twitter_screen_name = "twitter_screen_name"
    updated_at = "updated_at"


class twitter_tweet_images_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    index = "index"
    twitter_tweet_id = "twitter_tweet_id"
    updated_at = "updated_at"
    url = "url"


class twitter_tweets_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    remote_tweet_id = "remote_tweet_id"
    tweet_embed_html = "tweet_embed_html"
    tweet_time = "tweet_time"
    twitter_account_id = "twitter_account_id"
    updated_at = "updated_at"


class youtube_channels_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    remote_youtube_channel_id = "remote_youtube_channel_id"
    updated_at = "updated_at"
    youtube_channel_handle = "youtube_channel_handle"


class youtube_lives_select_column(str, Enum):
    created_at = "created_at"
    end_time = "end_time"
    id = "id"
    remote_youtube_video_id = "remote_youtube_video_id"
    start_time = "start_time"
    title = "title"
    updated_at = "updated_at"
    youtube_channel_id = "youtube_channel_id"


class youtube_videos_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    is_premiere = "is_premiere"
    post_time = "post_time"
    remote_youtube_video_id = "remote_youtube_video_id"
    title = "title"
    updated_at = "updated_at"
    youtube_channel_id = "youtube_channel_id"

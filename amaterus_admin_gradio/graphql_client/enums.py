# Generated by ariadne-codegen
# Source: schema.graphql

from enum import Enum


class amongus_maps_constraint(str, Enum):
    maps_pkey = "maps_pkey"


class amongus_maps_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    is_vanilla = "is_vanilla"
    mod_id = "mod_id"
    name = "name"
    updated_at = "updated_at"


class amongus_maps_select_column_amongus_maps_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    is_vanilla = "is_vanilla"


class amongus_maps_select_column_amongus_maps_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    is_vanilla = "is_vanilla"


class amongus_maps_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    is_vanilla = "is_vanilla"
    mod_id = "mod_id"
    name = "name"
    updated_at = "updated_at"


class amongus_match_mods_constraint(str, Enum):
    amongus_match_mods_amongus_match_id_amongus_mod_id_key = (
        "amongus_match_mods_amongus_match_id_amongus_mod_id_key"
    )
    amongus_match_mods_pkey = "amongus_match_mods_pkey"


class amongus_match_mods_select_column(str, Enum):
    amongus_match_id = "amongus_match_id"
    amongus_mod_id = "amongus_mod_id"
    amongus_mod_version_id = "amongus_mod_version_id"
    created_at = "created_at"
    id = "id"
    updated_at = "updated_at"


class amongus_match_mods_update_column(str, Enum):
    amongus_match_id = "amongus_match_id"
    amongus_mod_id = "amongus_mod_id"
    amongus_mod_version_id = "amongus_mod_version_id"
    created_at = "created_at"
    id = "id"
    updated_at = "updated_at"


class amongus_match_player_result_roles_constraint(str, Enum):
    match_result_player_roles_match_id_person_id_player_role_id_key = (
        "match_result_player_roles_match_id_person_id_player_role_id_key"
    )
    match_result_player_roles_match_id_person_id_player_role_or_key = (
        "match_result_player_roles_match_id_person_id_player_role_or_key"
    )
    match_result_player_roles_pkey = "match_result_player_roles_pkey"


class amongus_match_player_result_roles_select_column(str, Enum):
    amongus_match_id = "amongus_match_id"
    amongus_role_id = "amongus_role_id"
    amongus_role_index = "amongus_role_index"
    created_at = "created_at"
    id = "id"
    person_id = "person_id"
    updated_at = "updated_at"


class amongus_match_player_result_roles_update_column(str, Enum):
    amongus_match_id = "amongus_match_id"
    amongus_role_id = "amongus_role_id"
    amongus_role_index = "amongus_role_index"
    created_at = "created_at"
    id = "id"
    person_id = "person_id"
    updated_at = "updated_at"


class amongus_match_players_constraint(str, Enum):
    amongus_match_players_match_id_nickname_key = (
        "amongus_match_players_match_id_nickname_key"
    )
    amongus_match_players_match_id_person_id_key = (
        "amongus_match_players_match_id_person_id_key"
    )
    amongus_match_players_pkey = "amongus_match_players_pkey"


class amongus_match_players_select_column(str, Enum):
    amongus_match_id = "amongus_match_id"
    created_at = "created_at"
    id = "id"
    nickname = "nickname"
    person_id = "person_id"
    updated_at = "updated_at"


class amongus_match_players_update_column(str, Enum):
    amongus_match_id = "amongus_match_id"
    created_at = "created_at"
    id = "id"
    nickname = "nickname"
    person_id = "person_id"
    updated_at = "updated_at"


class amongus_matches_constraint(str, Enum):
    room_amongus_matches_pkey = "room_amongus_matches_pkey"
    room_amongus_matches_room_id_index_key = "room_amongus_matches_room_id_index_key"


class amongus_matches_select_column(str, Enum):
    amongus_map_id = "amongus_map_id"
    amongus_vanilla_version_id = "amongus_vanilla_version_id"
    created_at = "created_at"
    end_time = "end_time"
    id = "id"
    index = "index"
    is_aborted = "is_aborted"
    is_vanilla = "is_vanilla"
    program_id = "program_id"
    start_time = "start_time"
    updated_at = "updated_at"


class amongus_matches_select_column_amongus_matches_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"
    is_vanilla = "is_vanilla"


class amongus_matches_select_column_amongus_matches_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"
    is_vanilla = "is_vanilla"


class amongus_matches_update_column(str, Enum):
    amongus_map_id = "amongus_map_id"
    amongus_vanilla_version_id = "amongus_vanilla_version_id"
    created_at = "created_at"
    end_time = "end_time"
    id = "id"
    index = "index"
    is_aborted = "is_aborted"
    is_vanilla = "is_vanilla"
    program_id = "program_id"
    start_time = "start_time"
    updated_at = "updated_at"


class amongus_mod_versions_constraint(str, Enum):
    mod_versions_mod_id_version_key = "mod_versions_mod_id_version_key"
    mod_versions_pkey = "mod_versions_pkey"


class amongus_mod_versions_select_column(str, Enum):
    created_at = "created_at"
    github_url = "github_url"
    id = "id"
    mod_id = "mod_id"
    release_time = "release_time"
    updated_at = "updated_at"
    version = "version"


class amongus_mod_versions_update_column(str, Enum):
    created_at = "created_at"
    github_url = "github_url"
    id = "id"
    mod_id = "mod_id"
    release_time = "release_time"
    updated_at = "updated_at"
    version = "version"


class amongus_mods_constraint(str, Enum):
    mods_pkey = "mods_pkey"


class amongus_mods_select_column(str, Enum):
    created_at = "created_at"
    github_url = "github_url"
    id = "id"
    name = "name"
    updated_at = "updated_at"


class amongus_mods_update_column(str, Enum):
    created_at = "created_at"
    github_url = "github_url"
    id = "id"
    name = "name"
    updated_at = "updated_at"


class amongus_roles_constraint(str, Enum):
    player_roles_pkey = "player_roles_pkey"


class amongus_roles_select_column(str, Enum):
    color_rgb = "color_rgb"
    created_at = "created_at"
    document_url = "document_url"
    id = "id"
    is_vanilla = "is_vanilla"
    mod_id = "mod_id"
    name = "name"
    updated_at = "updated_at"


class amongus_roles_select_column_amongus_roles_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    is_vanilla = "is_vanilla"


class amongus_roles_select_column_amongus_roles_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    is_vanilla = "is_vanilla"


class amongus_roles_update_column(str, Enum):
    color_rgb = "color_rgb"
    created_at = "created_at"
    document_url = "document_url"
    id = "id"
    is_vanilla = "is_vanilla"
    mod_id = "mod_id"
    name = "name"
    updated_at = "updated_at"


class amongus_vanilla_versions_constraint(str, Enum):
    vanilla_versions_pkey = "vanilla_versions_pkey"
    vanilla_versions_version_key = "vanilla_versions_version_key"


class amongus_vanilla_versions_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    updated_at = "updated_at"
    version = "version"


class amongus_vanilla_versions_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    updated_at = "updated_at"
    version = "version"


class amongusvr_maps_constraint(str, Enum):
    amongusvr_maps_pkey = "amongusvr_maps_pkey"


class amongusvr_maps_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    updated_at = "updated_at"


class amongusvr_maps_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    updated_at = "updated_at"


class amongusvr_match_players_constraint(str, Enum):
    amongusvr_match_players_amongusvr_match_id_nickname_key = (
        "amongusvr_match_players_amongusvr_match_id_nickname_key"
    )
    amongusvr_match_players_amongusvr_match_id_person_id_key = (
        "amongusvr_match_players_amongusvr_match_id_person_id_key"
    )
    amongusvr_match_players_pkey = "amongusvr_match_players_pkey"


class amongusvr_match_players_select_column(str, Enum):
    amongusvr_match_id = "amongusvr_match_id"
    created_at = "created_at"
    id = "id"
    nickname = "nickname"
    person_id = "person_id"
    updated_at = "updated_at"


class amongusvr_match_players_update_column(str, Enum):
    amongusvr_match_id = "amongusvr_match_id"
    created_at = "created_at"
    id = "id"
    nickname = "nickname"
    person_id = "person_id"
    updated_at = "updated_at"


class amongusvr_matches_constraint(str, Enum):
    amongusvr_matches_pkey = "amongusvr_matches_pkey"
    amongusvr_matches_program_id_index_key = "amongusvr_matches_program_id_index_key"


class amongusvr_matches_select_column(str, Enum):
    amongusvr_map_id = "amongusvr_map_id"
    created_at = "created_at"
    end_time = "end_time"
    id = "id"
    index = "index"
    is_aborted = "is_aborted"
    program_id = "program_id"
    start_time = "start_time"
    updated_at = "updated_at"


class amongusvr_matches_select_column_amongusvr_matches_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"


class amongusvr_matches_select_column_amongusvr_matches_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"


class amongusvr_matches_update_column(str, Enum):
    amongusvr_map_id = "amongusvr_map_id"
    created_at = "created_at"
    end_time = "end_time"
    id = "id"
    index = "index"
    is_aborted = "is_aborted"
    program_id = "program_id"
    start_time = "start_time"
    updated_at = "updated_at"


class cursor_ordering(str, Enum):
    ASC = "ASC"
    DESC = "DESC"


class fallguys_custom_round_twitter_announcements_constraint(str, Enum):
    fallguys_custom_round_twitter_announcements_pkey = (
        "fallguys_custom_round_twitter_announcements_pkey"
    )
    fallguys_custom_round_twitter_fallguys_custom_round_id_twit_key = (
        "fallguys_custom_round_twitter_fallguys_custom_round_id_twit_key"
    )


class fallguys_custom_round_twitter_announcements_select_column(str, Enum):
    created_at = "created_at"
    fallguys_custom_round_id = "fallguys_custom_round_id"
    id = "id"
    is_agent_tweet = "is_agent_tweet"
    twitter_tweet_id = "twitter_tweet_id"
    updated_at = "updated_at"


class fallguys_custom_round_twitter_announcements_select_column_fallguys_custom_round_twitter_announcements_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    is_agent_tweet = "is_agent_tweet"


class fallguys_custom_round_twitter_announcements_select_column_fallguys_custom_round_twitter_announcements_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    is_agent_tweet = "is_agent_tweet"


class fallguys_custom_round_twitter_announcements_update_column(str, Enum):
    created_at = "created_at"
    fallguys_custom_round_id = "fallguys_custom_round_id"
    id = "id"
    is_agent_tweet = "is_agent_tweet"
    twitter_tweet_id = "twitter_tweet_id"
    updated_at = "updated_at"


class fallguys_custom_rounds_constraint(str, Enum):
    fallguys_custom_rounds_pkey = "fallguys_custom_rounds_pkey"
    fallguys_custom_rounds_share_code_key = "fallguys_custom_rounds_share_code_key"


class fallguys_custom_rounds_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    in_game_creator_name = "in_game_creator_name"
    name = "name"
    person_id = "person_id"
    share_code = "share_code"
    updated_at = "updated_at"


class fallguys_custom_rounds_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    in_game_creator_name = "in_game_creator_name"
    name = "name"
    person_id = "person_id"
    share_code = "share_code"
    updated_at = "updated_at"


class fallguys_match_rounds_constraint(str, Enum):
    fallguys_match_rounds_fallguys_match_id_index_key = (
        "fallguys_match_rounds_fallguys_match_id_index_key"
    )
    fallguys_match_rounds_pkey = "fallguys_match_rounds_pkey"


class fallguys_match_rounds_select_column(str, Enum):
    created_at = "created_at"
    end_time = "end_time"
    fallguys_custom_round_id = "fallguys_custom_round_id"
    fallguys_match_id = "fallguys_match_id"
    fallguys_round_id = "fallguys_round_id"
    id = "id"
    index = "index"
    is_aborted = "is_aborted"
    start_time = "start_time"
    updated_at = "updated_at"


class fallguys_match_rounds_select_column_fallguys_match_rounds_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"


class fallguys_match_rounds_select_column_fallguys_match_rounds_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"


class fallguys_match_rounds_update_column(str, Enum):
    created_at = "created_at"
    end_time = "end_time"
    fallguys_custom_round_id = "fallguys_custom_round_id"
    fallguys_match_id = "fallguys_match_id"
    fallguys_round_id = "fallguys_round_id"
    id = "id"
    index = "index"
    is_aborted = "is_aborted"
    start_time = "start_time"
    updated_at = "updated_at"


class fallguys_matches_constraint(str, Enum):
    fallguys_matches_pkey = "fallguys_matches_pkey"
    fallguys_matches_program_id_index_key = "fallguys_matches_program_id_index_key"


class fallguys_matches_select_column(str, Enum):
    created_at = "created_at"
    end_time = "end_time"
    id = "id"
    index = "index"
    is_aborted = "is_aborted"
    program_id = "program_id"
    start_time = "start_time"
    updated_at = "updated_at"


class fallguys_matches_select_column_fallguys_matches_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"


class fallguys_matches_select_column_fallguys_matches_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"


class fallguys_matches_update_column(str, Enum):
    created_at = "created_at"
    end_time = "end_time"
    id = "id"
    index = "index"
    is_aborted = "is_aborted"
    program_id = "program_id"
    start_time = "start_time"
    updated_at = "updated_at"


class fallguys_rounds_constraint(str, Enum):
    fallguys_rounds_pkey = "fallguys_rounds_pkey"


class fallguys_rounds_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    updated_at = "updated_at"


class fallguys_rounds_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    updated_at = "updated_at"


class fediverse_accounts_constraint(str, Enum):
    fediverse_accounts_fediverse_acct_key = "fediverse_accounts_fediverse_acct_key"
    fediverse_accounts_pkey = "fediverse_accounts_pkey"


class fediverse_accounts_select_column(str, Enum):
    created_at = "created_at"
    fediverse_acct = "fediverse_acct"
    id = "id"
    name = "name"
    updated_at = "updated_at"


class fediverse_accounts_update_column(str, Enum):
    created_at = "created_at"
    fediverse_acct = "fediverse_acct"
    id = "id"
    name = "name"
    updated_at = "updated_at"


class games_constraint(str, Enum):
    games_pkey = "games_pkey"


class games_select_column(str, Enum):
    apple_app_store_url = "apple_app_store_url"
    created_at = "created_at"
    epic_games_url = "epic_games_url"
    google_play_store_url = "google_play_store_url"
    id = "id"
    name = "name"
    nintendo_switch_url = "nintendo_switch_url"
    playstation_url = "playstation_url"
    steam_url = "steam_url"
    updated_at = "updated_at"
    website_url = "website_url"


class games_update_column(str, Enum):
    apple_app_store_url = "apple_app_store_url"
    created_at = "created_at"
    epic_games_url = "epic_games_url"
    google_play_store_url = "google_play_store_url"
    id = "id"
    name = "name"
    nintendo_switch_url = "nintendo_switch_url"
    playstation_url = "playstation_url"
    steam_url = "steam_url"
    updated_at = "updated_at"
    website_url = "website_url"


class mariokart8deluxe_battle_courses_constraint(str, Enum):
    mariokart8deluxe_battle_courses_index_key = (
        "mariokart8deluxe_battle_courses_index_key"
    )
    mariokart8deluxe_battle_courses_name_key = (
        "mariokart8deluxe_battle_courses_name_key"
    )
    mariokart8deluxe_battle_courses_pkey = "mariokart8deluxe_battle_courses_pkey"


class mariokart8deluxe_battle_courses_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    index = "index"
    mariokart8deluxe_console_id = "mariokart8deluxe_console_id"
    name = "name"
    updated_at = "updated_at"


class mariokart8deluxe_battle_courses_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    index = "index"
    mariokart8deluxe_console_id = "mariokart8deluxe_console_id"
    name = "name"
    updated_at = "updated_at"


class mariokart8deluxe_battle_match_players_constraint(str, Enum):
    mariokart8deluxe_battle_match_mariokart8deluxe_battle_matc_key1 = (
        "mariokart8deluxe_battle_match_mariokart8deluxe_battle_matc_key1"
    )
    mariokart8deluxe_battle_match_mariokart8deluxe_battle_match_key = (
        "mariokart8deluxe_battle_match_mariokart8deluxe_battle_match_key"
    )
    mariokart8deluxe_battle_match_players_pkey = (
        "mariokart8deluxe_battle_match_players_pkey"
    )


class mariokart8deluxe_battle_match_players_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    mariokart8deluxe_battle_match_id = "mariokart8deluxe_battle_match_id"
    nickname = "nickname"
    person_id = "person_id"
    updated_at = "updated_at"


class mariokart8deluxe_battle_match_players_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    mariokart8deluxe_battle_match_id = "mariokart8deluxe_battle_match_id"
    nickname = "nickname"
    person_id = "person_id"
    updated_at = "updated_at"


class mariokart8deluxe_battle_matches_constraint(str, Enum):
    mariokart8deluxe_battle_matches_pkey = "mariokart8deluxe_battle_matches_pkey"
    mariokart8deluxe_battle_matches_program_id_index_key = (
        "mariokart8deluxe_battle_matches_program_id_index_key"
    )


class mariokart8deluxe_battle_matches_select_column(str, Enum):
    created_at = "created_at"
    end_time = "end_time"
    id = "id"
    index = "index"
    is_aborted = "is_aborted"
    mariokart8deluxe_battle_course_id = "mariokart8deluxe_battle_course_id"
    mariokart8deluxe_battle_rule_id = "mariokart8deluxe_battle_rule_id"
    program_id = "program_id"
    start_time = "start_time"
    updated_at = "updated_at"


class mariokart8deluxe_battle_matches_select_column_mariokart8deluxe_battle_matches_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"


class mariokart8deluxe_battle_matches_select_column_mariokart8deluxe_battle_matches_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"


class mariokart8deluxe_battle_matches_update_column(str, Enum):
    created_at = "created_at"
    end_time = "end_time"
    id = "id"
    index = "index"
    is_aborted = "is_aborted"
    mariokart8deluxe_battle_course_id = "mariokart8deluxe_battle_course_id"
    mariokart8deluxe_battle_rule_id = "mariokart8deluxe_battle_rule_id"
    program_id = "program_id"
    start_time = "start_time"
    updated_at = "updated_at"


class mariokart8deluxe_battle_rules_constraint(str, Enum):
    mariokart8deluxe_battle_rules_index_key = "mariokart8deluxe_battle_rules_index_key"
    mariokart8deluxe_battle_rules_name_key = "mariokart8deluxe_battle_rules_name_key"
    mariokart8deluxe_battle_rules_pkey = "mariokart8deluxe_battle_rules_pkey"


class mariokart8deluxe_battle_rules_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    index = "index"
    name = "name"
    updated_at = "updated_at"


class mariokart8deluxe_battle_rules_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    index = "index"
    name = "name"
    updated_at = "updated_at"


class mariokart8deluxe_consoles_constraint(str, Enum):
    mariokart8deluxe_consoles_name_key = "mariokart8deluxe_consoles_name_key"
    mariokart8deluxe_consoles_pkey = "mariokart8deluxe_consoles_pkey"


class mariokart8deluxe_consoles_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    updated_at = "updated_at"


class mariokart8deluxe_consoles_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    updated_at = "updated_at"


class mariokart8deluxe_courses_constraint(str, Enum):
    mariokart8deluxe_courses_mariokart8deluxe_console_id_name_key = (
        "mariokart8deluxe_courses_mariokart8deluxe_console_id_name_key"
    )
    mariokart8deluxe_courses_mariokart8deluxe_cup_id_in_cup_index_k = (
        "mariokart8deluxe_courses_mariokart8deluxe_cup_id_in_cup_index_k"
    )
    mariokart8deluxe_courses_pkey = "mariokart8deluxe_courses_pkey"


class mariokart8deluxe_courses_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    in_cup_index = "in_cup_index"
    mariokart8deluxe_console_id = "mariokart8deluxe_console_id"
    mariokart8deluxe_cup_id = "mariokart8deluxe_cup_id"
    name = "name"
    updated_at = "updated_at"


class mariokart8deluxe_courses_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    in_cup_index = "in_cup_index"
    mariokart8deluxe_console_id = "mariokart8deluxe_console_id"
    mariokart8deluxe_cup_id = "mariokart8deluxe_cup_id"
    name = "name"
    updated_at = "updated_at"


class mariokart8deluxe_cups_constraint(str, Enum):
    mariokart8deluxe_cups_index_key = "mariokart8deluxe_cups_index_key"
    mariokart8deluxe_cups_name_key = "mariokart8deluxe_cups_name_key"
    mariokart8deluxe_cups_pkey = "mariokart8deluxe_cups_pkey"


class mariokart8deluxe_cups_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    index = "index"
    name = "name"
    updated_at = "updated_at"


class mariokart8deluxe_cups_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    index = "index"
    name = "name"
    updated_at = "updated_at"


class mariokart8deluxe_race_players_constraint(str, Enum):
    mariokart8deluxe_race_players_mariokart8deluxe_race_id_nick_key = (
        "mariokart8deluxe_race_players_mariokart8deluxe_race_id_nick_key"
    )
    mariokart8deluxe_race_players_mariokart8deluxe_race_id_pers_key = (
        "mariokart8deluxe_race_players_mariokart8deluxe_race_id_pers_key"
    )
    mariokart8deluxe_race_players_pkey = "mariokart8deluxe_race_players_pkey"


class mariokart8deluxe_race_players_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    mariokart8deluxe_race_id = "mariokart8deluxe_race_id"
    nickname = "nickname"
    person_id = "person_id"
    updated_at = "updated_at"


class mariokart8deluxe_race_players_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    mariokart8deluxe_race_id = "mariokart8deluxe_race_id"
    nickname = "nickname"
    person_id = "person_id"
    updated_at = "updated_at"


class mariokart8deluxe_race_rules_constraint(str, Enum):
    mariokart8deluxe_race_rules_index_key = "mariokart8deluxe_race_rules_index_key"
    mariokart8deluxe_race_rules_name_key = "mariokart8deluxe_race_rules_name_key"
    mariokart8deluxe_race_rules_pkey = "mariokart8deluxe_race_rules_pkey"


class mariokart8deluxe_race_rules_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    index = "index"
    name = "name"
    updated_at = "updated_at"


class mariokart8deluxe_race_rules_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    index = "index"
    name = "name"
    updated_at = "updated_at"


class mariokart8deluxe_races_constraint(str, Enum):
    mariokart8deluxe_races_pkey = "mariokart8deluxe_races_pkey"
    mariokart8deluxe_races_program_id_index_key = (
        "mariokart8deluxe_races_program_id_index_key"
    )


class mariokart8deluxe_races_select_column(str, Enum):
    created_at = "created_at"
    end_time = "end_time"
    id = "id"
    index = "index"
    is_aborted = "is_aborted"
    mariokart8deluxe_course_id = "mariokart8deluxe_course_id"
    mariokart8deluxe_race_rule_id = "mariokart8deluxe_race_rule_id"
    program_id = "program_id"
    start_time = "start_time"
    updated_at = "updated_at"


class mariokart8deluxe_races_select_column_mariokart8deluxe_races_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"


class mariokart8deluxe_races_select_column_mariokart8deluxe_races_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    is_aborted = "is_aborted"


class mariokart8deluxe_races_update_column(str, Enum):
    created_at = "created_at"
    end_time = "end_time"
    id = "id"
    index = "index"
    is_aborted = "is_aborted"
    mariokart8deluxe_course_id = "mariokart8deluxe_course_id"
    mariokart8deluxe_race_rule_id = "mariokart8deluxe_race_rule_id"
    program_id = "program_id"
    start_time = "start_time"
    updated_at = "updated_at"


class niconico_accounts_constraint(str, Enum):
    niconico_accounts_pkey = "niconico_accounts_pkey"
    niconico_accounts_remote_niconico_account_id_key = (
        "niconico_accounts_remote_niconico_account_id_key"
    )


class niconico_accounts_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    remote_niconico_account_id = "remote_niconico_account_id"
    updated_at = "updated_at"


class niconico_accounts_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    remote_niconico_account_id = "remote_niconico_account_id"
    updated_at = "updated_at"


class niconico_channels_constraint(str, Enum):
    niconico_channels_pkey = "niconico_channels_pkey"
    niconico_channels_remote_niconico_channel_id_key = (
        "niconico_channels_remote_niconico_channel_id_key"
    )
    niconico_channels_screen_name_key = "niconico_channels_screen_name_key"


class niconico_channels_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    remote_niconico_channel_id = "remote_niconico_channel_id"
    screen_name = "screen_name"
    updated_at = "updated_at"


class niconico_channels_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    remote_niconico_channel_id = "remote_niconico_channel_id"
    screen_name = "screen_name"
    updated_at = "updated_at"


class niconico_communities_constraint(str, Enum):
    niconico_communities_pkey = "niconico_communities_pkey"
    niconico_communities_remote_niconico_community_id_key = (
        "niconico_communities_remote_niconico_community_id_key"
    )


class niconico_communities_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    remote_niconico_community_id = "remote_niconico_community_id"
    updated_at = "updated_at"


class niconico_communities_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    remote_niconico_community_id = "remote_niconico_community_id"
    updated_at = "updated_at"


class niconico_plus_channels_constraint(str, Enum):
    niconico_plus_channels_pkey = "niconico_plus_channels_pkey"
    niconico_plus_channels_remote_niconico_plus_channel_id_key = (
        "niconico_plus_channels_remote_niconico_plus_channel_id_key"
    )
    niconico_plus_channels_screen_name_key = "niconico_plus_channels_screen_name_key"


class niconico_plus_channels_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    remote_niconico_plus_channel_id = "remote_niconico_plus_channel_id"
    screen_name = "screen_name"
    updated_at = "updated_at"


class niconico_plus_channels_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    remote_niconico_plus_channel_id = "remote_niconico_plus_channel_id"
    screen_name = "screen_name"
    updated_at = "updated_at"


class niconico_videos_constraint(str, Enum):
    niconico_videos_pkey = "niconico_videos_pkey"
    niconico_videos_remote_niconico_content_id_key = (
        "niconico_videos_remote_niconico_content_id_key"
    )


class niconico_videos_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    niconico_account_id = "niconico_account_id"
    remote_niconico_content_id = "remote_niconico_content_id"
    start_time = "start_time"
    thumbnail_url = "thumbnail_url"
    title = "title"
    updated_at = "updated_at"


class niconico_videos_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    niconico_account_id = "niconico_account_id"
    remote_niconico_content_id = "remote_niconico_content_id"
    start_time = "start_time"
    thumbnail_url = "thumbnail_url"
    title = "title"
    updated_at = "updated_at"


class order_by(str, Enum):
    asc = "asc"
    asc_nulls_first = "asc_nulls_first"
    asc_nulls_last = "asc_nulls_last"
    desc = "desc"
    desc_nulls_first = "desc_nulls_first"
    desc_nulls_last = "desc_nulls_last"


class person_fediverse_accounts_constraint(str, Enum):
    v2_person_fediverse_accounts_person_id_fediverse_account_id_key = (
        "v2_person_fediverse_accounts_person_id_fediverse_account_id_key"
    )
    v2_person_fediverse_accounts_pkey = "v2_person_fediverse_accounts_pkey"


class person_fediverse_accounts_select_column(str, Enum):
    created_at = "created_at"
    fediverse_account_id = "fediverse_account_id"
    id = "id"
    person_id = "person_id"
    updated_at = "updated_at"


class person_fediverse_accounts_update_column(str, Enum):
    created_at = "created_at"
    fediverse_account_id = "fediverse_account_id"
    id = "id"
    person_id = "person_id"
    updated_at = "updated_at"


class person_niconico_accounts_constraint(str, Enum):
    v2_person_niconico_accounts_person_id_niconico_account_id_key = (
        "v2_person_niconico_accounts_person_id_niconico_account_id_key"
    )
    v2_person_niconico_accounts_pkey = "v2_person_niconico_accounts_pkey"


class person_niconico_accounts_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    niconico_account_id = "niconico_account_id"
    person_id = "person_id"
    updated_at = "updated_at"


class person_niconico_accounts_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    niconico_account_id = "niconico_account_id"
    person_id = "person_id"
    updated_at = "updated_at"


class person_niconico_channels_constraint(str, Enum):
    person_niconico_channels_person_id_niconico_channel_id_key = (
        "person_niconico_channels_person_id_niconico_channel_id_key"
    )
    person_niconico_channels_pkey = "person_niconico_channels_pkey"


class person_niconico_channels_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    niconico_channel_id = "niconico_channel_id"
    person_id = "person_id"
    updated_at = "updated_at"


class person_niconico_channels_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    niconico_channel_id = "niconico_channel_id"
    person_id = "person_id"
    updated_at = "updated_at"


class person_niconico_communities_constraint(str, Enum):
    v2_person_niconico_communitie_person_id_niconico_community__key = (
        "v2_person_niconico_communitie_person_id_niconico_community__key"
    )
    v2_person_niconico_communities_pkey = "v2_person_niconico_communities_pkey"


class person_niconico_communities_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    niconico_community_id = "niconico_community_id"
    person_id = "person_id"
    updated_at = "updated_at"


class person_niconico_communities_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    niconico_community_id = "niconico_community_id"
    person_id = "person_id"
    updated_at = "updated_at"


class person_niconico_plus_channels_constraint(str, Enum):
    person_niconico_plus_channels_person_id_niconico_plus_chann_key = (
        "person_niconico_plus_channels_person_id_niconico_plus_chann_key"
    )
    person_niconico_plus_channels_pkey = "person_niconico_plus_channels_pkey"


class person_niconico_plus_channels_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    niconico_plus_channel_id = "niconico_plus_channel_id"
    person_id = "person_id"
    updated_at = "updated_at"


class person_niconico_plus_channels_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    niconico_plus_channel_id = "niconico_plus_channel_id"
    person_id = "person_id"
    updated_at = "updated_at"


class person_twitter_accounts_constraint(str, Enum):
    v2_person_twitter_accounts_person_id_twitter_account_id_key = (
        "v2_person_twitter_accounts_person_id_twitter_account_id_key"
    )
    v2_person_twitter_accounts_pkey = "v2_person_twitter_accounts_pkey"


class person_twitter_accounts_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    person_id = "person_id"
    twitter_account_id = "twitter_account_id"
    updated_at = "updated_at"


class person_twitter_accounts_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    person_id = "person_id"
    twitter_account_id = "twitter_account_id"
    updated_at = "updated_at"


class person_youtube_channels_constraint(str, Enum):
    v2_person_youtube_channels_person_id_youtube_channel_id_key = (
        "v2_person_youtube_channels_person_id_youtube_channel_id_key"
    )
    v2_person_youtube_channels_pkey = "v2_person_youtube_channels_pkey"


class person_youtube_channels_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    person_id = "person_id"
    updated_at = "updated_at"
    youtube_channel_id = "youtube_channel_id"


class person_youtube_channels_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    person_id = "person_id"
    updated_at = "updated_at"
    youtube_channel_id = "youtube_channel_id"


class persons_constraint(str, Enum):
    members_pkey = "members_pkey"


class persons_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    updated_at = "updated_at"


class persons_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    updated_at = "updated_at"


class program_amongus_maps_constraint(str, Enum):
    program_amongus_maps_pkey = "program_amongus_maps_pkey"
    program_amongus_maps_program_id_amongus_map_id_key = (
        "program_amongus_maps_program_id_amongus_map_id_key"
    )


class program_amongus_maps_select_column(str, Enum):
    amongus_map_id = "amongus_map_id"
    created_at = "created_at"
    id = "id"
    program_id = "program_id"
    updated_at = "updated_at"


class program_amongus_maps_update_column(str, Enum):
    amongus_map_id = "amongus_map_id"
    created_at = "created_at"
    id = "id"
    program_id = "program_id"
    updated_at = "updated_at"


class program_amongus_mods_constraint(str, Enum):
    program_amongus_mods_pkey = "program_amongus_mods_pkey"
    program_amongus_mods_program_id_amongus_mod_id_amongus_mod__key = (
        "program_amongus_mods_program_id_amongus_mod_id_amongus_mod__key"
    )
    program_amongus_mods_program_id_amongus_mod_id_key = (
        "program_amongus_mods_program_id_amongus_mod_id_key"
    )


class program_amongus_mods_select_column(str, Enum):
    amongus_mod_id = "amongus_mod_id"
    amongus_mod_version_id = "amongus_mod_version_id"
    created_at = "created_at"
    id = "id"
    program_id = "program_id"
    updated_at = "updated_at"


class program_amongus_mods_update_column(str, Enum):
    amongus_mod_id = "amongus_mod_id"
    amongus_mod_version_id = "amongus_mod_version_id"
    created_at = "created_at"
    id = "id"
    program_id = "program_id"
    updated_at = "updated_at"


class program_amongus_vanilla_versions_constraint(str, Enum):
    program_amongus_vanilla_versi_program_id_amongus_vanilla_ve_key = (
        "program_amongus_vanilla_versi_program_id_amongus_vanilla_ve_key"
    )
    program_amongus_vanilla_versions_pkey = "program_amongus_vanilla_versions_pkey"


class program_amongus_vanilla_versions_select_column(str, Enum):
    amongus_vanilla_version_id = "amongus_vanilla_version_id"
    created_at = "created_at"
    id = "id"
    program_id = "program_id"
    updated_at = "updated_at"


class program_amongus_vanilla_versions_update_column(str, Enum):
    amongus_vanilla_version_id = "amongus_vanilla_version_id"
    created_at = "created_at"
    id = "id"
    program_id = "program_id"
    updated_at = "updated_at"


class program_live_archives_constraint(str, Enum):
    program_live_archives_pkey = "program_live_archives_pkey"
    program_live_archives_program_id_youtube_live_id_key = (
        "program_live_archives_program_id_youtube_live_id_key"
    )
    program_live_archives_program_id_youtube_video_id_key = (
        "program_live_archives_program_id_youtube_video_id_key"
    )


class program_live_archives_select_column(str, Enum):
    created_at = "created_at"
    end_time = "end_time"
    id = "id"
    person_id = "person_id"
    program_id = "program_id"
    start_time = "start_time"
    updated_at = "updated_at"
    youtube_live_id = "youtube_live_id"
    youtube_video_id = "youtube_video_id"


class program_live_archives_update_column(str, Enum):
    created_at = "created_at"
    end_time = "end_time"
    id = "id"
    person_id = "person_id"
    program_id = "program_id"
    start_time = "start_time"
    updated_at = "updated_at"
    youtube_live_id = "youtube_live_id"
    youtube_video_id = "youtube_video_id"


class program_niconico_videos_constraint(str, Enum):
    program_niconico_videos_pkey = "program_niconico_videos_pkey"
    program_niconico_videos_program_id_niconico_video_id_key = (
        "program_niconico_videos_program_id_niconico_video_id_key"
    )


class program_niconico_videos_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    niconico_video_id = "niconico_video_id"
    person_id = "person_id"
    program_id = "program_id"
    updated_at = "updated_at"


class program_niconico_videos_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    niconico_video_id = "niconico_video_id"
    person_id = "person_id"
    program_id = "program_id"
    updated_at = "updated_at"


class program_persons_constraint(str, Enum):
    program_persons_pkey = "program_persons_pkey"
    program_persons_program_id_person_id_key = (
        "program_persons_program_id_person_id_key"
    )


class program_persons_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    is_absent = "is_absent"
    person_id = "person_id"
    program_id = "program_id"
    updated_at = "updated_at"


class program_persons_select_column_program_persons_aggregate_bool_exp_bool_and_arguments_columns(
    str, Enum
):
    is_absent = "is_absent"


class program_persons_select_column_program_persons_aggregate_bool_exp_bool_or_arguments_columns(
    str, Enum
):
    is_absent = "is_absent"


class program_persons_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    is_absent = "is_absent"
    person_id = "person_id"
    program_id = "program_id"
    updated_at = "updated_at"


class program_projects_constraint(str, Enum):
    program_communities_pkey = "program_communities_pkey"
    program_communities_program_id_community_id_key = (
        "program_communities_program_id_community_id_key"
    )


class program_projects_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    program_id = "program_id"
    project_id = "project_id"
    updated_at = "updated_at"


class program_projects_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    program_id = "program_id"
    project_id = "project_id"
    updated_at = "updated_at"


class program_twitter_announcements_constraint(str, Enum):
    program_twitter_announcements_pkey = "program_twitter_announcements_pkey"
    program_twitter_announcements_program_id_twitter_tweet_id_twitt = (
        "program_twitter_announcements_program_id_twitter_tweet_id_twitt"
    )
    program_twitter_announcements_program_id_twitter_tweet_imag_key = (
        "program_twitter_announcements_program_id_twitter_tweet_imag_key"
    )


class program_twitter_announcements_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    person_id = "person_id"
    program_id = "program_id"
    twitter_tweet_id = "twitter_tweet_id"
    twitter_tweet_image_id = "twitter_tweet_image_id"
    updated_at = "updated_at"


class program_twitter_announcements_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    person_id = "person_id"
    program_id = "program_id"
    twitter_tweet_id = "twitter_tweet_id"
    twitter_tweet_image_id = "twitter_tweet_image_id"
    updated_at = "updated_at"


class programs_constraint(str, Enum):
    programs_pkey = "programs_pkey"


class programs_select_column(str, Enum):
    created_at = "created_at"
    end_time = "end_time"
    game_id = "game_id"
    id = "id"
    start_time = "start_time"
    title = "title"
    updated_at = "updated_at"


class programs_update_column(str, Enum):
    created_at = "created_at"
    end_time = "end_time"
    game_id = "game_id"
    id = "id"
    start_time = "start_time"
    title = "title"
    updated_at = "updated_at"


class project_niconico_videos_constraint(str, Enum):
    project_niconico_videos_pkey = "project_niconico_videos_pkey"
    project_niconico_videos_project_id_niconico_video_id_key = (
        "project_niconico_videos_project_id_niconico_video_id_key"
    )


class project_niconico_videos_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    niconico_video_id = "niconico_video_id"
    project_id = "project_id"
    updated_at = "updated_at"


class project_niconico_videos_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    niconico_video_id = "niconico_video_id"
    project_id = "project_id"
    updated_at = "updated_at"


class projects_constraint(str, Enum):
    communities_pkey = "communities_pkey"


class projects_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    start_time = "start_time"
    updated_at = "updated_at"


class projects_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    start_time = "start_time"
    updated_at = "updated_at"


class twitter_accounts_constraint(str, Enum):
    twitter_accounts_pkey = "twitter_accounts_pkey"
    twitter_accounts_remote_twitter_user_id_key = (
        "twitter_accounts_remote_twitter_user_id_key"
    )
    twitter_accounts_twitter_screen_name_key = (
        "twitter_accounts_twitter_screen_name_key"
    )


class twitter_accounts_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    remote_twitter_user_id = "remote_twitter_user_id"
    twitter_screen_name = "twitter_screen_name"
    updated_at = "updated_at"


class twitter_accounts_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    remote_twitter_user_id = "remote_twitter_user_id"
    twitter_screen_name = "twitter_screen_name"
    updated_at = "updated_at"


class twitter_tweet_images_constraint(str, Enum):
    twitter_tweet_images_pkey = "twitter_tweet_images_pkey"
    twitter_tweet_images_tweet_id_index_key = "twitter_tweet_images_tweet_id_index_key"


class twitter_tweet_images_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    index = "index"
    twitter_tweet_id = "twitter_tweet_id"
    updated_at = "updated_at"
    url = "url"


class twitter_tweet_images_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    index = "index"
    twitter_tweet_id = "twitter_tweet_id"
    updated_at = "updated_at"
    url = "url"


class twitter_tweets_constraint(str, Enum):
    twitter_tweets_pkey = "twitter_tweets_pkey"
    twitter_tweets_remote_tweet_id_key = "twitter_tweets_remote_tweet_id_key"


class twitter_tweets_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    remote_tweet_id = "remote_tweet_id"
    tweet_embed_html = "tweet_embed_html"
    tweet_time = "tweet_time"
    twitter_account_id = "twitter_account_id"
    updated_at = "updated_at"


class twitter_tweets_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    remote_tweet_id = "remote_tweet_id"
    tweet_embed_html = "tweet_embed_html"
    tweet_time = "tweet_time"
    twitter_account_id = "twitter_account_id"
    updated_at = "updated_at"


class youtube_channels_constraint(str, Enum):
    youtube_channels_pkey = "youtube_channels_pkey"
    youtube_channels_youtube_channel_handle_key = (
        "youtube_channels_youtube_channel_handle_key"
    )
    youtube_channels_youtube_channel_id_key = "youtube_channels_youtube_channel_id_key"


class youtube_channels_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    remote_youtube_channel_id = "remote_youtube_channel_id"
    updated_at = "updated_at"
    youtube_channel_handle = "youtube_channel_handle"


class youtube_channels_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    name = "name"
    remote_youtube_channel_id = "remote_youtube_channel_id"
    updated_at = "updated_at"
    youtube_channel_handle = "youtube_channel_handle"


class youtube_lives_constraint(str, Enum):
    youtube_lives_pkey = "youtube_lives_pkey"
    youtube_lives_remote_youtube_video_id_key = (
        "youtube_lives_remote_youtube_video_id_key"
    )


class youtube_lives_select_column(str, Enum):
    created_at = "created_at"
    end_time = "end_time"
    id = "id"
    remote_youtube_video_id = "remote_youtube_video_id"
    start_time = "start_time"
    title = "title"
    updated_at = "updated_at"
    youtube_channel_id = "youtube_channel_id"


class youtube_lives_update_column(str, Enum):
    created_at = "created_at"
    end_time = "end_time"
    id = "id"
    remote_youtube_video_id = "remote_youtube_video_id"
    start_time = "start_time"
    title = "title"
    updated_at = "updated_at"
    youtube_channel_id = "youtube_channel_id"


class youtube_videos_constraint(str, Enum):
    youtube_videos_pkey = "youtube_videos_pkey"
    youtube_videos_remote_youtube_video_id_key = (
        "youtube_videos_remote_youtube_video_id_key"
    )


class youtube_videos_select_column(str, Enum):
    created_at = "created_at"
    id = "id"
    is_premiere = "is_premiere"
    post_time = "post_time"
    remote_youtube_video_id = "remote_youtube_video_id"
    title = "title"
    updated_at = "updated_at"
    youtube_channel_id = "youtube_channel_id"


class youtube_videos_update_column(str, Enum):
    created_at = "created_at"
    id = "id"
    is_premiere = "is_premiere"
    post_time = "post_time"
    remote_youtube_video_id = "remote_youtube_video_id"
    title = "title"
    updated_at = "updated_at"
    youtube_channel_id = "youtube_channel_id"

# Generated by ariadne-codegen on 2023-09-24 20:09
# Source: schema.graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    amongus_maps_select_column,
    amongus_maps_select_column_amongus_maps_aggregate_bool_exp_bool_and_arguments_columns,
    amongus_maps_select_column_amongus_maps_aggregate_bool_exp_bool_or_arguments_columns,
    amongus_match_player_result_roles_select_column,
    amongus_match_players_select_column,
    amongus_matches_select_column,
    amongus_matches_select_column_amongus_matches_aggregate_bool_exp_bool_and_arguments_columns,
    amongus_matches_select_column_amongus_matches_aggregate_bool_exp_bool_or_arguments_columns,
    amongus_mod_versions_select_column,
    amongus_roles_select_column,
    amongus_roles_select_column_amongus_roles_aggregate_bool_exp_bool_and_arguments_columns,
    amongus_roles_select_column_amongus_roles_aggregate_bool_exp_bool_or_arguments_columns,
    amongusvr_match_players_select_column,
    amongusvr_matches_select_column,
    amongusvr_matches_select_column_amongusvr_matches_aggregate_bool_exp_bool_and_arguments_columns,
    amongusvr_matches_select_column_amongusvr_matches_aggregate_bool_exp_bool_or_arguments_columns,
    cursor_ordering,
    fallguys_custom_round_twitter_announcements_select_column,
    fallguys_custom_round_twitter_announcements_select_column_fallguys_custom_round_twitter_announcements_aggregate_bool_exp_bool_and_arguments_columns,
    fallguys_custom_round_twitter_announcements_select_column_fallguys_custom_round_twitter_announcements_aggregate_bool_exp_bool_or_arguments_columns,
    fallguys_custom_rounds_select_column,
    fallguys_match_rounds_select_column,
    fallguys_match_rounds_select_column_fallguys_match_rounds_aggregate_bool_exp_bool_and_arguments_columns,
    fallguys_match_rounds_select_column_fallguys_match_rounds_aggregate_bool_exp_bool_or_arguments_columns,
    fallguys_matches_select_column,
    fallguys_matches_select_column_fallguys_matches_aggregate_bool_exp_bool_and_arguments_columns,
    fallguys_matches_select_column_fallguys_matches_aggregate_bool_exp_bool_or_arguments_columns,
    mariokart8deluxe_battle_match_players_select_column,
    mariokart8deluxe_battle_matches_select_column,
    mariokart8deluxe_battle_matches_select_column_mariokart8deluxe_battle_matches_aggregate_bool_exp_bool_and_arguments_columns,
    mariokart8deluxe_battle_matches_select_column_mariokart8deluxe_battle_matches_aggregate_bool_exp_bool_or_arguments_columns,
    mariokart8deluxe_courses_select_column,
    mariokart8deluxe_race_players_select_column,
    mariokart8deluxe_races_select_column,
    mariokart8deluxe_races_select_column_mariokart8deluxe_races_aggregate_bool_exp_bool_and_arguments_columns,
    mariokart8deluxe_races_select_column_mariokart8deluxe_races_aggregate_bool_exp_bool_or_arguments_columns,
    order_by,
    person_fediverse_accounts_select_column,
    person_niconico_accounts_select_column,
    person_niconico_channels_select_column,
    person_niconico_communities_select_column,
    person_niconico_plus_channels_select_column,
    person_twitter_accounts_select_column,
    person_youtube_channels_select_column,
    program_amongus_maps_select_column,
    program_amongus_mods_select_column,
    program_amongus_vanilla_versions_select_column,
    program_live_archives_select_column,
    program_niconico_videos_select_column,
    program_persons_select_column,
    program_persons_select_column_program_persons_aggregate_bool_exp_bool_and_arguments_columns,
    program_persons_select_column_program_persons_aggregate_bool_exp_bool_or_arguments_columns,
    program_projects_select_column,
    program_twitter_announcements_select_column,
    project_niconico_videos_select_column,
    twitter_tweet_images_select_column,
    youtube_lives_select_column,
)


class Boolean_comparison_exp(BaseModel):
    eq: Optional[bool] = Field(alias="_eq", default=None)
    gt: Optional[bool] = Field(alias="_gt", default=None)
    gte: Optional[bool] = Field(alias="_gte", default=None)
    in_: Optional[List[bool]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[bool] = Field(alias="_lt", default=None)
    lte: Optional[bool] = Field(alias="_lte", default=None)
    neq: Optional[bool] = Field(alias="_neq", default=None)
    nin: Optional[List[bool]] = Field(alias="_nin", default=None)


class Int_comparison_exp(BaseModel):
    eq: Optional[int] = Field(alias="_eq", default=None)
    gt: Optional[int] = Field(alias="_gt", default=None)
    gte: Optional[int] = Field(alias="_gte", default=None)
    in_: Optional[List[int]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[int] = Field(alias="_lt", default=None)
    lte: Optional[int] = Field(alias="_lte", default=None)
    neq: Optional[int] = Field(alias="_neq", default=None)
    nin: Optional[List[int]] = Field(alias="_nin", default=None)


class String_comparison_exp(BaseModel):
    eq: Optional[str] = Field(alias="_eq", default=None)
    gt: Optional[str] = Field(alias="_gt", default=None)
    gte: Optional[str] = Field(alias="_gte", default=None)
    ilike: Optional[str] = Field(alias="_ilike", default=None)
    in_: Optional[List[str]] = Field(alias="_in", default=None)
    iregex: Optional[str] = Field(alias="_iregex", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    like: Optional[str] = Field(alias="_like", default=None)
    lt: Optional[str] = Field(alias="_lt", default=None)
    lte: Optional[str] = Field(alias="_lte", default=None)
    neq: Optional[str] = Field(alias="_neq", default=None)
    nilike: Optional[str] = Field(alias="_nilike", default=None)
    nin: Optional[List[str]] = Field(alias="_nin", default=None)
    niregex: Optional[str] = Field(alias="_niregex", default=None)
    nlike: Optional[str] = Field(alias="_nlike", default=None)
    nregex: Optional[str] = Field(alias="_nregex", default=None)
    nsimilar: Optional[str] = Field(alias="_nsimilar", default=None)
    regex: Optional[str] = Field(alias="_regex", default=None)
    similar: Optional[str] = Field(alias="_similar", default=None)


class amongus_maps_aggregate_bool_exp(BaseModel):
    bool_and: Optional["amongus_maps_aggregate_bool_exp_bool_and"] = None
    bool_or: Optional["amongus_maps_aggregate_bool_exp_bool_or"] = None
    count: Optional["amongus_maps_aggregate_bool_exp_count"] = None


class amongus_maps_aggregate_bool_exp_bool_and(BaseModel):
    arguments: amongus_maps_select_column_amongus_maps_aggregate_bool_exp_bool_and_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["amongus_maps_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class amongus_maps_aggregate_bool_exp_bool_or(BaseModel):
    arguments: amongus_maps_select_column_amongus_maps_aggregate_bool_exp_bool_or_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["amongus_maps_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class amongus_maps_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[amongus_maps_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["amongus_maps_bool_exp"] = None
    predicate: "Int_comparison_exp"


class amongus_maps_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["amongus_maps_max_order_by"] = None
    min: Optional["amongus_maps_min_order_by"] = None


class amongus_maps_bool_exp(BaseModel):
    and_: Optional[List["amongus_maps_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["amongus_maps_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["amongus_maps_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    is_vanilla: Optional["Boolean_comparison_exp"] = None
    mod: Optional["amongus_mods_bool_exp"] = None
    mod_id: Optional["uuid_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class amongus_maps_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    mod_id: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongus_maps_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    mod_id: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongus_maps_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    is_vanilla: Optional[order_by] = None
    mod: Optional["amongus_mods_order_by"] = None
    mod_id: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongus_maps_stream_cursor_input(BaseModel):
    initial_value: "amongus_maps_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class amongus_maps_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    is_vanilla: Optional[bool] = None
    mod_id: Optional[Any] = None
    name: Optional[str] = None
    updated_at: Optional[Any] = None


class amongus_match_mods_bool_exp(BaseModel):
    and_: Optional[List["amongus_match_mods_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["amongus_match_mods_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["amongus_match_mods_bool_exp"]] = Field(
        alias="_or", default=None
    )
    amongus_match_id: Optional["uuid_comparison_exp"] = None
    amongus_mod_id: Optional["uuid_comparison_exp"] = None
    amongus_mod_version_id: Optional["uuid_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class amongus_match_mods_order_by(BaseModel):
    amongus_match_id: Optional[order_by] = None
    amongus_mod_id: Optional[order_by] = None
    amongus_mod_version_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongus_match_mods_stream_cursor_input(BaseModel):
    initial_value: "amongus_match_mods_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class amongus_match_mods_stream_cursor_value_input(BaseModel):
    amongus_match_id: Optional[Any] = None
    amongus_mod_id: Optional[Any] = None
    amongus_mod_version_id: Optional[Any] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    updated_at: Optional[Any] = None


class amongus_match_player_result_roles_aggregate_bool_exp(BaseModel):
    count: Optional["amongus_match_player_result_roles_aggregate_bool_exp_count"] = None


class amongus_match_player_result_roles_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[amongus_match_player_result_roles_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["amongus_match_player_result_roles_bool_exp"] = None
    predicate: "Int_comparison_exp"


class amongus_match_player_result_roles_aggregate_order_by(BaseModel):
    avg: Optional["amongus_match_player_result_roles_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["amongus_match_player_result_roles_max_order_by"] = None
    min: Optional["amongus_match_player_result_roles_min_order_by"] = None
    stddev: Optional["amongus_match_player_result_roles_stddev_order_by"] = None
    stddev_pop: Optional["amongus_match_player_result_roles_stddev_pop_order_by"] = None
    stddev_samp: Optional[
        "amongus_match_player_result_roles_stddev_samp_order_by"
    ] = None
    sum: Optional["amongus_match_player_result_roles_sum_order_by"] = None
    var_pop: Optional["amongus_match_player_result_roles_var_pop_order_by"] = None
    var_samp: Optional["amongus_match_player_result_roles_var_samp_order_by"] = None
    variance: Optional["amongus_match_player_result_roles_variance_order_by"] = None


class amongus_match_player_result_roles_avg_order_by(BaseModel):
    amongus_role_index: Optional[order_by] = None


class amongus_match_player_result_roles_bool_exp(BaseModel):
    and_: Optional[List["amongus_match_player_result_roles_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["amongus_match_player_result_roles_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["amongus_match_player_result_roles_bool_exp"]] = Field(
        alias="_or", default=None
    )
    amongus_match_id: Optional["uuid_comparison_exp"] = None
    amongus_role_id: Optional["uuid_comparison_exp"] = None
    amongus_role_index: Optional["Int_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    person_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class amongus_match_player_result_roles_max_order_by(BaseModel):
    amongus_match_id: Optional[order_by] = None
    amongus_role_id: Optional[order_by] = None
    amongus_role_index: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongus_match_player_result_roles_min_order_by(BaseModel):
    amongus_match_id: Optional[order_by] = None
    amongus_role_id: Optional[order_by] = None
    amongus_role_index: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongus_match_player_result_roles_order_by(BaseModel):
    amongus_match_id: Optional[order_by] = None
    amongus_role_id: Optional[order_by] = None
    amongus_role_index: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongus_match_player_result_roles_stddev_order_by(BaseModel):
    amongus_role_index: Optional[order_by] = None


class amongus_match_player_result_roles_stddev_pop_order_by(BaseModel):
    amongus_role_index: Optional[order_by] = None


class amongus_match_player_result_roles_stddev_samp_order_by(BaseModel):
    amongus_role_index: Optional[order_by] = None


class amongus_match_player_result_roles_stream_cursor_input(BaseModel):
    initial_value: "amongus_match_player_result_roles_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class amongus_match_player_result_roles_stream_cursor_value_input(BaseModel):
    amongus_match_id: Optional[Any] = None
    amongus_role_id: Optional[Any] = None
    amongus_role_index: Optional[int] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    person_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class amongus_match_player_result_roles_sum_order_by(BaseModel):
    amongus_role_index: Optional[order_by] = None


class amongus_match_player_result_roles_var_pop_order_by(BaseModel):
    amongus_role_index: Optional[order_by] = None


class amongus_match_player_result_roles_var_samp_order_by(BaseModel):
    amongus_role_index: Optional[order_by] = None


class amongus_match_player_result_roles_variance_order_by(BaseModel):
    amongus_role_index: Optional[order_by] = None


class amongus_match_players_aggregate_bool_exp(BaseModel):
    count: Optional["amongus_match_players_aggregate_bool_exp_count"] = None


class amongus_match_players_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[amongus_match_players_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["amongus_match_players_bool_exp"] = None
    predicate: "Int_comparison_exp"


class amongus_match_players_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["amongus_match_players_max_order_by"] = None
    min: Optional["amongus_match_players_min_order_by"] = None


class amongus_match_players_bool_exp(BaseModel):
    and_: Optional[List["amongus_match_players_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["amongus_match_players_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["amongus_match_players_bool_exp"]] = Field(
        alias="_or", default=None
    )
    amongus_match: Optional["amongus_matches_bool_exp"] = None
    amongus_match_id: Optional["uuid_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    nickname: Optional["String_comparison_exp"] = None
    person: Optional["persons_bool_exp"] = None
    person_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class amongus_match_players_max_order_by(BaseModel):
    amongus_match_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    nickname: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongus_match_players_min_order_by(BaseModel):
    amongus_match_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    nickname: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongus_match_players_order_by(BaseModel):
    amongus_match: Optional["amongus_matches_order_by"] = None
    amongus_match_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    nickname: Optional[order_by] = None
    person: Optional["persons_order_by"] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongus_match_players_stream_cursor_input(BaseModel):
    initial_value: "amongus_match_players_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class amongus_match_players_stream_cursor_value_input(BaseModel):
    amongus_match_id: Optional[Any] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    nickname: Optional[str] = None
    person_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class amongus_matches_aggregate_bool_exp(BaseModel):
    bool_and: Optional["amongus_matches_aggregate_bool_exp_bool_and"] = None
    bool_or: Optional["amongus_matches_aggregate_bool_exp_bool_or"] = None
    count: Optional["amongus_matches_aggregate_bool_exp_count"] = None


class amongus_matches_aggregate_bool_exp_bool_and(BaseModel):
    arguments: amongus_matches_select_column_amongus_matches_aggregate_bool_exp_bool_and_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["amongus_matches_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class amongus_matches_aggregate_bool_exp_bool_or(BaseModel):
    arguments: amongus_matches_select_column_amongus_matches_aggregate_bool_exp_bool_or_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["amongus_matches_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class amongus_matches_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[amongus_matches_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["amongus_matches_bool_exp"] = None
    predicate: "Int_comparison_exp"


class amongus_matches_aggregate_order_by(BaseModel):
    avg: Optional["amongus_matches_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["amongus_matches_max_order_by"] = None
    min: Optional["amongus_matches_min_order_by"] = None
    stddev: Optional["amongus_matches_stddev_order_by"] = None
    stddev_pop: Optional["amongus_matches_stddev_pop_order_by"] = None
    stddev_samp: Optional["amongus_matches_stddev_samp_order_by"] = None
    sum: Optional["amongus_matches_sum_order_by"] = None
    var_pop: Optional["amongus_matches_var_pop_order_by"] = None
    var_samp: Optional["amongus_matches_var_samp_order_by"] = None
    variance: Optional["amongus_matches_variance_order_by"] = None


class amongus_matches_avg_order_by(BaseModel):
    index: Optional[order_by] = None


class amongus_matches_bool_exp(BaseModel):
    and_: Optional[List["amongus_matches_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["amongus_matches_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["amongus_matches_bool_exp"]] = Field(alias="_or", default=None)
    amongus_map: Optional["amongus_maps_bool_exp"] = None
    amongus_map_id: Optional["uuid_comparison_exp"] = None
    amongus_match_players: Optional["amongus_match_players_bool_exp"] = None
    amongus_match_players_aggregate: Optional[
        "amongus_match_players_aggregate_bool_exp"
    ] = None
    amongus_vanilla_version_id: Optional["uuid_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    end_time: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    index: Optional["Int_comparison_exp"] = None
    is_aborted: Optional["Boolean_comparison_exp"] = None
    is_vanilla: Optional["Boolean_comparison_exp"] = None
    program: Optional["programs_bool_exp"] = None
    program_id: Optional["uuid_comparison_exp"] = None
    start_time: Optional["timestamptz_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class amongus_matches_max_order_by(BaseModel):
    amongus_map_id: Optional[order_by] = None
    amongus_vanilla_version_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    program_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongus_matches_min_order_by(BaseModel):
    amongus_map_id: Optional[order_by] = None
    amongus_vanilla_version_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    program_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongus_matches_order_by(BaseModel):
    amongus_map: Optional["amongus_maps_order_by"] = None
    amongus_map_id: Optional[order_by] = None
    amongus_match_players_aggregate: Optional[
        "amongus_match_players_aggregate_order_by"
    ] = None
    amongus_vanilla_version_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    is_aborted: Optional[order_by] = None
    is_vanilla: Optional[order_by] = None
    program: Optional["programs_order_by"] = None
    program_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongus_matches_stddev_order_by(BaseModel):
    index: Optional[order_by] = None


class amongus_matches_stddev_pop_order_by(BaseModel):
    index: Optional[order_by] = None


class amongus_matches_stddev_samp_order_by(BaseModel):
    index: Optional[order_by] = None


class amongus_matches_stream_cursor_input(BaseModel):
    initial_value: "amongus_matches_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class amongus_matches_stream_cursor_value_input(BaseModel):
    amongus_map_id: Optional[Any] = None
    amongus_vanilla_version_id: Optional[Any] = None
    created_at: Optional[Any] = None
    end_time: Optional[Any] = None
    id: Optional[Any] = None
    index: Optional[int] = None
    is_aborted: Optional[bool] = None
    is_vanilla: Optional[bool] = None
    program_id: Optional[Any] = None
    start_time: Optional[Any] = None
    updated_at: Optional[Any] = None


class amongus_matches_sum_order_by(BaseModel):
    index: Optional[order_by] = None


class amongus_matches_var_pop_order_by(BaseModel):
    index: Optional[order_by] = None


class amongus_matches_var_samp_order_by(BaseModel):
    index: Optional[order_by] = None


class amongus_matches_variance_order_by(BaseModel):
    index: Optional[order_by] = None


class amongus_mod_versions_aggregate_bool_exp(BaseModel):
    count: Optional["amongus_mod_versions_aggregate_bool_exp_count"] = None


class amongus_mod_versions_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[amongus_mod_versions_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["amongus_mod_versions_bool_exp"] = None
    predicate: "Int_comparison_exp"


class amongus_mod_versions_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["amongus_mod_versions_max_order_by"] = None
    min: Optional["amongus_mod_versions_min_order_by"] = None


class amongus_mod_versions_bool_exp(BaseModel):
    and_: Optional[List["amongus_mod_versions_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["amongus_mod_versions_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["amongus_mod_versions_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    github_url: Optional["String_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    mod: Optional["amongus_mods_bool_exp"] = None
    mod_id: Optional["uuid_comparison_exp"] = None
    release_time: Optional["timestamptz_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    version: Optional["String_comparison_exp"] = None


class amongus_mod_versions_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    github_url: Optional[order_by] = None
    id: Optional[order_by] = None
    mod_id: Optional[order_by] = None
    release_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    version: Optional[order_by] = None


class amongus_mod_versions_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    github_url: Optional[order_by] = None
    id: Optional[order_by] = None
    mod_id: Optional[order_by] = None
    release_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    version: Optional[order_by] = None


class amongus_mod_versions_order_by(BaseModel):
    created_at: Optional[order_by] = None
    github_url: Optional[order_by] = None
    id: Optional[order_by] = None
    mod: Optional["amongus_mods_order_by"] = None
    mod_id: Optional[order_by] = None
    release_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    version: Optional[order_by] = None


class amongus_mod_versions_stream_cursor_input(BaseModel):
    initial_value: "amongus_mod_versions_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class amongus_mod_versions_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    github_url: Optional[str] = None
    id: Optional[Any] = None
    mod_id: Optional[Any] = None
    release_time: Optional[Any] = None
    updated_at: Optional[Any] = None
    version: Optional[str] = None


class amongus_mods_bool_exp(BaseModel):
    and_: Optional[List["amongus_mods_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["amongus_mods_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["amongus_mods_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    github_url: Optional["String_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    maps: Optional["amongus_maps_bool_exp"] = None
    maps_aggregate: Optional["amongus_maps_aggregate_bool_exp"] = None
    mod_versions: Optional["amongus_mod_versions_bool_exp"] = None
    mod_versions_aggregate: Optional["amongus_mod_versions_aggregate_bool_exp"] = None
    name: Optional["String_comparison_exp"] = None
    player_roles: Optional["amongus_roles_bool_exp"] = None
    player_roles_aggregate: Optional["amongus_roles_aggregate_bool_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class amongus_mods_order_by(BaseModel):
    created_at: Optional[order_by] = None
    github_url: Optional[order_by] = None
    id: Optional[order_by] = None
    maps_aggregate: Optional["amongus_maps_aggregate_order_by"] = None
    mod_versions_aggregate: Optional["amongus_mod_versions_aggregate_order_by"] = None
    name: Optional[order_by] = None
    player_roles_aggregate: Optional["amongus_roles_aggregate_order_by"] = None
    updated_at: Optional[order_by] = None


class amongus_mods_stream_cursor_input(BaseModel):
    initial_value: "amongus_mods_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class amongus_mods_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    github_url: Optional[str] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    updated_at: Optional[Any] = None


class amongus_roles_aggregate_bool_exp(BaseModel):
    bool_and: Optional["amongus_roles_aggregate_bool_exp_bool_and"] = None
    bool_or: Optional["amongus_roles_aggregate_bool_exp_bool_or"] = None
    count: Optional["amongus_roles_aggregate_bool_exp_count"] = None


class amongus_roles_aggregate_bool_exp_bool_and(BaseModel):
    arguments: amongus_roles_select_column_amongus_roles_aggregate_bool_exp_bool_and_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["amongus_roles_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class amongus_roles_aggregate_bool_exp_bool_or(BaseModel):
    arguments: amongus_roles_select_column_amongus_roles_aggregate_bool_exp_bool_or_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["amongus_roles_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class amongus_roles_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[amongus_roles_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["amongus_roles_bool_exp"] = None
    predicate: "Int_comparison_exp"


class amongus_roles_aggregate_order_by(BaseModel):
    avg: Optional["amongus_roles_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["amongus_roles_max_order_by"] = None
    min: Optional["amongus_roles_min_order_by"] = None
    stddev: Optional["amongus_roles_stddev_order_by"] = None
    stddev_pop: Optional["amongus_roles_stddev_pop_order_by"] = None
    stddev_samp: Optional["amongus_roles_stddev_samp_order_by"] = None
    sum: Optional["amongus_roles_sum_order_by"] = None
    var_pop: Optional["amongus_roles_var_pop_order_by"] = None
    var_samp: Optional["amongus_roles_var_samp_order_by"] = None
    variance: Optional["amongus_roles_variance_order_by"] = None


class amongus_roles_avg_order_by(BaseModel):
    color_rgb: Optional[order_by] = None


class amongus_roles_bool_exp(BaseModel):
    and_: Optional[List["amongus_roles_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["amongus_roles_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["amongus_roles_bool_exp"]] = Field(alias="_or", default=None)
    color_rgb: Optional["Int_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    document_url: Optional["String_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    is_vanilla: Optional["Boolean_comparison_exp"] = None
    match_result_player_roles: Optional[
        "amongus_match_player_result_roles_bool_exp"
    ] = None
    match_result_player_roles_aggregate: Optional[
        "amongus_match_player_result_roles_aggregate_bool_exp"
    ] = None
    mod: Optional["amongus_mods_bool_exp"] = None
    mod_id: Optional["uuid_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class amongus_roles_max_order_by(BaseModel):
    color_rgb: Optional[order_by] = None
    created_at: Optional[order_by] = None
    document_url: Optional[order_by] = None
    id: Optional[order_by] = None
    mod_id: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongus_roles_min_order_by(BaseModel):
    color_rgb: Optional[order_by] = None
    created_at: Optional[order_by] = None
    document_url: Optional[order_by] = None
    id: Optional[order_by] = None
    mod_id: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongus_roles_order_by(BaseModel):
    color_rgb: Optional[order_by] = None
    created_at: Optional[order_by] = None
    document_url: Optional[order_by] = None
    id: Optional[order_by] = None
    is_vanilla: Optional[order_by] = None
    match_result_player_roles_aggregate: Optional[
        "amongus_match_player_result_roles_aggregate_order_by"
    ] = None
    mod: Optional["amongus_mods_order_by"] = None
    mod_id: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongus_roles_stddev_order_by(BaseModel):
    color_rgb: Optional[order_by] = None


class amongus_roles_stddev_pop_order_by(BaseModel):
    color_rgb: Optional[order_by] = None


class amongus_roles_stddev_samp_order_by(BaseModel):
    color_rgb: Optional[order_by] = None


class amongus_roles_stream_cursor_input(BaseModel):
    initial_value: "amongus_roles_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class amongus_roles_stream_cursor_value_input(BaseModel):
    color_rgb: Optional[int] = None
    created_at: Optional[Any] = None
    document_url: Optional[str] = None
    id: Optional[Any] = None
    is_vanilla: Optional[bool] = None
    mod_id: Optional[Any] = None
    name: Optional[str] = None
    updated_at: Optional[Any] = None


class amongus_roles_sum_order_by(BaseModel):
    color_rgb: Optional[order_by] = None


class amongus_roles_var_pop_order_by(BaseModel):
    color_rgb: Optional[order_by] = None


class amongus_roles_var_samp_order_by(BaseModel):
    color_rgb: Optional[order_by] = None


class amongus_roles_variance_order_by(BaseModel):
    color_rgb: Optional[order_by] = None


class amongusvr_maps_bool_exp(BaseModel):
    and_: Optional[List["amongusvr_maps_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["amongusvr_maps_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["amongusvr_maps_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class amongusvr_maps_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongusvr_maps_stream_cursor_input(BaseModel):
    initial_value: "amongusvr_maps_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class amongusvr_maps_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    updated_at: Optional[Any] = None


class amongusvr_match_players_aggregate_bool_exp(BaseModel):
    count: Optional["amongusvr_match_players_aggregate_bool_exp_count"] = None


class amongusvr_match_players_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[amongusvr_match_players_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["amongusvr_match_players_bool_exp"] = None
    predicate: "Int_comparison_exp"


class amongusvr_match_players_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["amongusvr_match_players_max_order_by"] = None
    min: Optional["amongusvr_match_players_min_order_by"] = None


class amongusvr_match_players_bool_exp(BaseModel):
    and_: Optional[List["amongusvr_match_players_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["amongusvr_match_players_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["amongusvr_match_players_bool_exp"]] = Field(
        alias="_or", default=None
    )
    amongusvr_match: Optional["amongusvr_matches_bool_exp"] = None
    amongusvr_match_id: Optional["uuid_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    nickname: Optional["String_comparison_exp"] = None
    person: Optional["persons_bool_exp"] = None
    person_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class amongusvr_match_players_max_order_by(BaseModel):
    amongusvr_match_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    nickname: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongusvr_match_players_min_order_by(BaseModel):
    amongusvr_match_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    nickname: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongusvr_match_players_order_by(BaseModel):
    amongusvr_match: Optional["amongusvr_matches_order_by"] = None
    amongusvr_match_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    nickname: Optional[order_by] = None
    person: Optional["persons_order_by"] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongusvr_match_players_stream_cursor_input(BaseModel):
    initial_value: "amongusvr_match_players_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class amongusvr_match_players_stream_cursor_value_input(BaseModel):
    amongusvr_match_id: Optional[Any] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    nickname: Optional[str] = None
    person_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class amongusvr_matches_aggregate_bool_exp(BaseModel):
    bool_and: Optional["amongusvr_matches_aggregate_bool_exp_bool_and"] = None
    bool_or: Optional["amongusvr_matches_aggregate_bool_exp_bool_or"] = None
    count: Optional["amongusvr_matches_aggregate_bool_exp_count"] = None


class amongusvr_matches_aggregate_bool_exp_bool_and(BaseModel):
    arguments: amongusvr_matches_select_column_amongusvr_matches_aggregate_bool_exp_bool_and_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["amongusvr_matches_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class amongusvr_matches_aggregate_bool_exp_bool_or(BaseModel):
    arguments: amongusvr_matches_select_column_amongusvr_matches_aggregate_bool_exp_bool_or_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["amongusvr_matches_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class amongusvr_matches_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[amongusvr_matches_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["amongusvr_matches_bool_exp"] = None
    predicate: "Int_comparison_exp"


class amongusvr_matches_aggregate_order_by(BaseModel):
    avg: Optional["amongusvr_matches_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["amongusvr_matches_max_order_by"] = None
    min: Optional["amongusvr_matches_min_order_by"] = None
    stddev: Optional["amongusvr_matches_stddev_order_by"] = None
    stddev_pop: Optional["amongusvr_matches_stddev_pop_order_by"] = None
    stddev_samp: Optional["amongusvr_matches_stddev_samp_order_by"] = None
    sum: Optional["amongusvr_matches_sum_order_by"] = None
    var_pop: Optional["amongusvr_matches_var_pop_order_by"] = None
    var_samp: Optional["amongusvr_matches_var_samp_order_by"] = None
    variance: Optional["amongusvr_matches_variance_order_by"] = None


class amongusvr_matches_avg_order_by(BaseModel):
    index: Optional[order_by] = None


class amongusvr_matches_bool_exp(BaseModel):
    and_: Optional[List["amongusvr_matches_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["amongusvr_matches_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["amongusvr_matches_bool_exp"]] = Field(alias="_or", default=None)
    amongusvr_map: Optional["amongusvr_maps_bool_exp"] = None
    amongusvr_map_id: Optional["uuid_comparison_exp"] = None
    amongusvr_match_players: Optional["amongusvr_match_players_bool_exp"] = None
    amongusvr_match_players_aggregate: Optional[
        "amongusvr_match_players_aggregate_bool_exp"
    ] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    end_time: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    index: Optional["Int_comparison_exp"] = None
    is_aborted: Optional["Boolean_comparison_exp"] = None
    program: Optional["programs_bool_exp"] = None
    program_id: Optional["uuid_comparison_exp"] = None
    start_time: Optional["timestamptz_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class amongusvr_matches_max_order_by(BaseModel):
    amongusvr_map_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    program_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongusvr_matches_min_order_by(BaseModel):
    amongusvr_map_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    program_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongusvr_matches_order_by(BaseModel):
    amongusvr_map: Optional["amongusvr_maps_order_by"] = None
    amongusvr_map_id: Optional[order_by] = None
    amongusvr_match_players_aggregate: Optional[
        "amongusvr_match_players_aggregate_order_by"
    ] = None
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    is_aborted: Optional[order_by] = None
    program: Optional["programs_order_by"] = None
    program_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class amongusvr_matches_stddev_order_by(BaseModel):
    index: Optional[order_by] = None


class amongusvr_matches_stddev_pop_order_by(BaseModel):
    index: Optional[order_by] = None


class amongusvr_matches_stddev_samp_order_by(BaseModel):
    index: Optional[order_by] = None


class amongusvr_matches_stream_cursor_input(BaseModel):
    initial_value: "amongusvr_matches_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class amongusvr_matches_stream_cursor_value_input(BaseModel):
    amongusvr_map_id: Optional[Any] = None
    created_at: Optional[Any] = None
    end_time: Optional[Any] = None
    id: Optional[Any] = None
    index: Optional[int] = None
    is_aborted: Optional[bool] = None
    program_id: Optional[Any] = None
    start_time: Optional[Any] = None
    updated_at: Optional[Any] = None


class amongusvr_matches_sum_order_by(BaseModel):
    index: Optional[order_by] = None


class amongusvr_matches_var_pop_order_by(BaseModel):
    index: Optional[order_by] = None


class amongusvr_matches_var_samp_order_by(BaseModel):
    index: Optional[order_by] = None


class amongusvr_matches_variance_order_by(BaseModel):
    index: Optional[order_by] = None


class fallguys_custom_round_twitter_announcements_aggregate_bool_exp(BaseModel):
    bool_and: Optional[
        "fallguys_custom_round_twitter_announcements_aggregate_bool_exp_bool_and"
    ] = None
    bool_or: Optional[
        "fallguys_custom_round_twitter_announcements_aggregate_bool_exp_bool_or"
    ] = None
    count: Optional[
        "fallguys_custom_round_twitter_announcements_aggregate_bool_exp_count"
    ] = None


class fallguys_custom_round_twitter_announcements_aggregate_bool_exp_bool_and(
    BaseModel
):
    arguments: fallguys_custom_round_twitter_announcements_select_column_fallguys_custom_round_twitter_announcements_aggregate_bool_exp_bool_and_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["fallguys_custom_round_twitter_announcements_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class fallguys_custom_round_twitter_announcements_aggregate_bool_exp_bool_or(BaseModel):
    arguments: fallguys_custom_round_twitter_announcements_select_column_fallguys_custom_round_twitter_announcements_aggregate_bool_exp_bool_or_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["fallguys_custom_round_twitter_announcements_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class fallguys_custom_round_twitter_announcements_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[
        List[fallguys_custom_round_twitter_announcements_select_column]
    ] = None
    distinct: Optional[bool] = None
    filter: Optional["fallguys_custom_round_twitter_announcements_bool_exp"] = None
    predicate: "Int_comparison_exp"


class fallguys_custom_round_twitter_announcements_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["fallguys_custom_round_twitter_announcements_max_order_by"] = None
    min: Optional["fallguys_custom_round_twitter_announcements_min_order_by"] = None


class fallguys_custom_round_twitter_announcements_bool_exp(BaseModel):
    and_: Optional[
        List["fallguys_custom_round_twitter_announcements_bool_exp"]
    ] = Field(alias="_and", default=None)
    not_: Optional["fallguys_custom_round_twitter_announcements_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["fallguys_custom_round_twitter_announcements_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    fallguys_custom_round: Optional["fallguys_custom_rounds_bool_exp"] = None
    fallguys_custom_round_id: Optional["uuid_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    is_agent_tweet: Optional["Boolean_comparison_exp"] = None
    twitter_tweet: Optional["twitter_tweets_bool_exp"] = None
    twitter_tweet_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class fallguys_custom_round_twitter_announcements_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    fallguys_custom_round_id: Optional[order_by] = None
    id: Optional[order_by] = None
    twitter_tweet_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class fallguys_custom_round_twitter_announcements_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    fallguys_custom_round_id: Optional[order_by] = None
    id: Optional[order_by] = None
    twitter_tweet_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class fallguys_custom_round_twitter_announcements_order_by(BaseModel):
    created_at: Optional[order_by] = None
    fallguys_custom_round: Optional["fallguys_custom_rounds_order_by"] = None
    fallguys_custom_round_id: Optional[order_by] = None
    id: Optional[order_by] = None
    is_agent_tweet: Optional[order_by] = None
    twitter_tweet: Optional["twitter_tweets_order_by"] = None
    twitter_tweet_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class fallguys_custom_round_twitter_announcements_stream_cursor_input(BaseModel):
    initial_value: "fallguys_custom_round_twitter_announcements_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class fallguys_custom_round_twitter_announcements_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    fallguys_custom_round_id: Optional[Any] = None
    id: Optional[Any] = None
    is_agent_tweet: Optional[bool] = None
    twitter_tweet_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class fallguys_custom_rounds_aggregate_bool_exp(BaseModel):
    count: Optional["fallguys_custom_rounds_aggregate_bool_exp_count"] = None


class fallguys_custom_rounds_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[fallguys_custom_rounds_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["fallguys_custom_rounds_bool_exp"] = None
    predicate: "Int_comparison_exp"


class fallguys_custom_rounds_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["fallguys_custom_rounds_max_order_by"] = None
    min: Optional["fallguys_custom_rounds_min_order_by"] = None


class fallguys_custom_rounds_bool_exp(BaseModel):
    and_: Optional[List["fallguys_custom_rounds_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["fallguys_custom_rounds_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["fallguys_custom_rounds_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    fallguys_custom_round_twitter_announcements: Optional[
        "fallguys_custom_round_twitter_announcements_bool_exp"
    ] = None
    fallguys_custom_round_twitter_announcements_aggregate: Optional[
        "fallguys_custom_round_twitter_announcements_aggregate_bool_exp"
    ] = None
    fallguys_match_rounds: Optional["fallguys_match_rounds_bool_exp"] = None
    fallguys_match_rounds_aggregate: Optional[
        "fallguys_match_rounds_aggregate_bool_exp"
    ] = None
    id: Optional["uuid_comparison_exp"] = None
    in_game_creator_name: Optional["String_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    person: Optional["persons_bool_exp"] = None
    person_id: Optional["uuid_comparison_exp"] = None
    share_code: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class fallguys_custom_rounds_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    in_game_creator_name: Optional[order_by] = None
    name: Optional[order_by] = None
    person_id: Optional[order_by] = None
    share_code: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class fallguys_custom_rounds_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    in_game_creator_name: Optional[order_by] = None
    name: Optional[order_by] = None
    person_id: Optional[order_by] = None
    share_code: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class fallguys_custom_rounds_order_by(BaseModel):
    created_at: Optional[order_by] = None
    fallguys_custom_round_twitter_announcements_aggregate: Optional[
        "fallguys_custom_round_twitter_announcements_aggregate_order_by"
    ] = None
    fallguys_match_rounds_aggregate: Optional[
        "fallguys_match_rounds_aggregate_order_by"
    ] = None
    id: Optional[order_by] = None
    in_game_creator_name: Optional[order_by] = None
    name: Optional[order_by] = None
    person: Optional["persons_order_by"] = None
    person_id: Optional[order_by] = None
    share_code: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class fallguys_custom_rounds_stream_cursor_input(BaseModel):
    initial_value: "fallguys_custom_rounds_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class fallguys_custom_rounds_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    in_game_creator_name: Optional[str] = None
    name: Optional[str] = None
    person_id: Optional[Any] = None
    share_code: Optional[str] = None
    updated_at: Optional[Any] = None


class fallguys_match_rounds_aggregate_bool_exp(BaseModel):
    bool_and: Optional["fallguys_match_rounds_aggregate_bool_exp_bool_and"] = None
    bool_or: Optional["fallguys_match_rounds_aggregate_bool_exp_bool_or"] = None
    count: Optional["fallguys_match_rounds_aggregate_bool_exp_count"] = None


class fallguys_match_rounds_aggregate_bool_exp_bool_and(BaseModel):
    arguments: fallguys_match_rounds_select_column_fallguys_match_rounds_aggregate_bool_exp_bool_and_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["fallguys_match_rounds_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class fallguys_match_rounds_aggregate_bool_exp_bool_or(BaseModel):
    arguments: fallguys_match_rounds_select_column_fallguys_match_rounds_aggregate_bool_exp_bool_or_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["fallguys_match_rounds_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class fallguys_match_rounds_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[fallguys_match_rounds_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["fallguys_match_rounds_bool_exp"] = None
    predicate: "Int_comparison_exp"


class fallguys_match_rounds_aggregate_order_by(BaseModel):
    avg: Optional["fallguys_match_rounds_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["fallguys_match_rounds_max_order_by"] = None
    min: Optional["fallguys_match_rounds_min_order_by"] = None
    stddev: Optional["fallguys_match_rounds_stddev_order_by"] = None
    stddev_pop: Optional["fallguys_match_rounds_stddev_pop_order_by"] = None
    stddev_samp: Optional["fallguys_match_rounds_stddev_samp_order_by"] = None
    sum: Optional["fallguys_match_rounds_sum_order_by"] = None
    var_pop: Optional["fallguys_match_rounds_var_pop_order_by"] = None
    var_samp: Optional["fallguys_match_rounds_var_samp_order_by"] = None
    variance: Optional["fallguys_match_rounds_variance_order_by"] = None


class fallguys_match_rounds_avg_order_by(BaseModel):
    index: Optional[order_by] = None


class fallguys_match_rounds_bool_exp(BaseModel):
    and_: Optional[List["fallguys_match_rounds_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["fallguys_match_rounds_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["fallguys_match_rounds_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    end_time: Optional["timestamptz_comparison_exp"] = None
    fallguys_custom_round: Optional["fallguys_custom_rounds_bool_exp"] = None
    fallguys_custom_round_id: Optional["uuid_comparison_exp"] = None
    fallguys_match: Optional["fallguys_matches_bool_exp"] = None
    fallguys_match_id: Optional["uuid_comparison_exp"] = None
    fallguys_round: Optional["fallguys_rounds_bool_exp"] = None
    fallguys_round_id: Optional["uuid_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    index: Optional["Int_comparison_exp"] = None
    is_aborted: Optional["Boolean_comparison_exp"] = None
    start_time: Optional["timestamptz_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class fallguys_match_rounds_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    fallguys_custom_round_id: Optional[order_by] = None
    fallguys_match_id: Optional[order_by] = None
    fallguys_round_id: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class fallguys_match_rounds_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    fallguys_custom_round_id: Optional[order_by] = None
    fallguys_match_id: Optional[order_by] = None
    fallguys_round_id: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class fallguys_match_rounds_order_by(BaseModel):
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    fallguys_custom_round: Optional["fallguys_custom_rounds_order_by"] = None
    fallguys_custom_round_id: Optional[order_by] = None
    fallguys_match: Optional["fallguys_matches_order_by"] = None
    fallguys_match_id: Optional[order_by] = None
    fallguys_round: Optional["fallguys_rounds_order_by"] = None
    fallguys_round_id: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    is_aborted: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class fallguys_match_rounds_stddev_order_by(BaseModel):
    index: Optional[order_by] = None


class fallguys_match_rounds_stddev_pop_order_by(BaseModel):
    index: Optional[order_by] = None


class fallguys_match_rounds_stddev_samp_order_by(BaseModel):
    index: Optional[order_by] = None


class fallguys_match_rounds_stream_cursor_input(BaseModel):
    initial_value: "fallguys_match_rounds_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class fallguys_match_rounds_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    end_time: Optional[Any] = None
    fallguys_custom_round_id: Optional[Any] = None
    fallguys_match_id: Optional[Any] = None
    fallguys_round_id: Optional[Any] = None
    id: Optional[Any] = None
    index: Optional[int] = None
    is_aborted: Optional[bool] = None
    start_time: Optional[Any] = None
    updated_at: Optional[Any] = None


class fallguys_match_rounds_sum_order_by(BaseModel):
    index: Optional[order_by] = None


class fallguys_match_rounds_var_pop_order_by(BaseModel):
    index: Optional[order_by] = None


class fallguys_match_rounds_var_samp_order_by(BaseModel):
    index: Optional[order_by] = None


class fallguys_match_rounds_variance_order_by(BaseModel):
    index: Optional[order_by] = None


class fallguys_matches_aggregate_bool_exp(BaseModel):
    bool_and: Optional["fallguys_matches_aggregate_bool_exp_bool_and"] = None
    bool_or: Optional["fallguys_matches_aggregate_bool_exp_bool_or"] = None
    count: Optional["fallguys_matches_aggregate_bool_exp_count"] = None


class fallguys_matches_aggregate_bool_exp_bool_and(BaseModel):
    arguments: fallguys_matches_select_column_fallguys_matches_aggregate_bool_exp_bool_and_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["fallguys_matches_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class fallguys_matches_aggregate_bool_exp_bool_or(BaseModel):
    arguments: fallguys_matches_select_column_fallguys_matches_aggregate_bool_exp_bool_or_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["fallguys_matches_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class fallguys_matches_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[fallguys_matches_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["fallguys_matches_bool_exp"] = None
    predicate: "Int_comparison_exp"


class fallguys_matches_aggregate_order_by(BaseModel):
    avg: Optional["fallguys_matches_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["fallguys_matches_max_order_by"] = None
    min: Optional["fallguys_matches_min_order_by"] = None
    stddev: Optional["fallguys_matches_stddev_order_by"] = None
    stddev_pop: Optional["fallguys_matches_stddev_pop_order_by"] = None
    stddev_samp: Optional["fallguys_matches_stddev_samp_order_by"] = None
    sum: Optional["fallguys_matches_sum_order_by"] = None
    var_pop: Optional["fallguys_matches_var_pop_order_by"] = None
    var_samp: Optional["fallguys_matches_var_samp_order_by"] = None
    variance: Optional["fallguys_matches_variance_order_by"] = None


class fallguys_matches_avg_order_by(BaseModel):
    index: Optional[order_by] = None


class fallguys_matches_bool_exp(BaseModel):
    and_: Optional[List["fallguys_matches_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["fallguys_matches_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["fallguys_matches_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    end_time: Optional["timestamptz_comparison_exp"] = None
    fallguys_match_rounds: Optional["fallguys_match_rounds_bool_exp"] = None
    fallguys_match_rounds_aggregate: Optional[
        "fallguys_match_rounds_aggregate_bool_exp"
    ] = None
    id: Optional["uuid_comparison_exp"] = None
    index: Optional["Int_comparison_exp"] = None
    is_aborted: Optional["Boolean_comparison_exp"] = None
    program: Optional["programs_bool_exp"] = None
    program_id: Optional["uuid_comparison_exp"] = None
    start_time: Optional["timestamptz_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class fallguys_matches_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    program_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class fallguys_matches_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    program_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class fallguys_matches_order_by(BaseModel):
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    fallguys_match_rounds_aggregate: Optional[
        "fallguys_match_rounds_aggregate_order_by"
    ] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    is_aborted: Optional[order_by] = None
    program: Optional["programs_order_by"] = None
    program_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class fallguys_matches_stddev_order_by(BaseModel):
    index: Optional[order_by] = None


class fallguys_matches_stddev_pop_order_by(BaseModel):
    index: Optional[order_by] = None


class fallguys_matches_stddev_samp_order_by(BaseModel):
    index: Optional[order_by] = None


class fallguys_matches_stream_cursor_input(BaseModel):
    initial_value: "fallguys_matches_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class fallguys_matches_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    end_time: Optional[Any] = None
    id: Optional[Any] = None
    index: Optional[int] = None
    is_aborted: Optional[bool] = None
    program_id: Optional[Any] = None
    start_time: Optional[Any] = None
    updated_at: Optional[Any] = None


class fallguys_matches_sum_order_by(BaseModel):
    index: Optional[order_by] = None


class fallguys_matches_var_pop_order_by(BaseModel):
    index: Optional[order_by] = None


class fallguys_matches_var_samp_order_by(BaseModel):
    index: Optional[order_by] = None


class fallguys_matches_variance_order_by(BaseModel):
    index: Optional[order_by] = None


class fallguys_rounds_bool_exp(BaseModel):
    and_: Optional[List["fallguys_rounds_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["fallguys_rounds_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["fallguys_rounds_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    fallguys_match_rounds: Optional["fallguys_match_rounds_bool_exp"] = None
    fallguys_match_rounds_aggregate: Optional[
        "fallguys_match_rounds_aggregate_bool_exp"
    ] = None
    id: Optional["uuid_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class fallguys_rounds_order_by(BaseModel):
    created_at: Optional[order_by] = None
    fallguys_match_rounds_aggregate: Optional[
        "fallguys_match_rounds_aggregate_order_by"
    ] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class fallguys_rounds_stream_cursor_input(BaseModel):
    initial_value: "fallguys_rounds_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class fallguys_rounds_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    updated_at: Optional[Any] = None


class fediverse_accounts_bool_exp(BaseModel):
    and_: Optional[List["fediverse_accounts_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["fediverse_accounts_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["fediverse_accounts_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    fediverse_acct: Optional["String_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class fediverse_accounts_order_by(BaseModel):
    created_at: Optional[order_by] = None
    fediverse_acct: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class fediverse_accounts_stream_cursor_input(BaseModel):
    initial_value: "fediverse_accounts_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class fediverse_accounts_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    fediverse_acct: Optional[str] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    updated_at: Optional[Any] = None


class games_bool_exp(BaseModel):
    and_: Optional[List["games_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["games_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["games_bool_exp"]] = Field(alias="_or", default=None)
    apple_app_store_url: Optional["String_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    epic_games_url: Optional["String_comparison_exp"] = None
    google_play_store_url: Optional["String_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    nintendo_switch_url: Optional["String_comparison_exp"] = None
    playstation_url: Optional["String_comparison_exp"] = None
    steam_url: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    website_url: Optional["String_comparison_exp"] = None


class games_order_by(BaseModel):
    apple_app_store_url: Optional[order_by] = None
    created_at: Optional[order_by] = None
    epic_games_url: Optional[order_by] = None
    google_play_store_url: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    nintendo_switch_url: Optional[order_by] = None
    playstation_url: Optional[order_by] = None
    steam_url: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    website_url: Optional[order_by] = None


class games_stream_cursor_input(BaseModel):
    initial_value: "games_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class games_stream_cursor_value_input(BaseModel):
    apple_app_store_url: Optional[str] = None
    created_at: Optional[Any] = None
    epic_games_url: Optional[str] = None
    google_play_store_url: Optional[str] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    nintendo_switch_url: Optional[str] = None
    playstation_url: Optional[str] = None
    steam_url: Optional[str] = None
    updated_at: Optional[Any] = None
    website_url: Optional[str] = None


class mariokart8deluxe_battle_courses_bool_exp(BaseModel):
    and_: Optional[List["mariokart8deluxe_battle_courses_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["mariokart8deluxe_battle_courses_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["mariokart8deluxe_battle_courses_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    index: Optional["Int_comparison_exp"] = None
    mariokart8deluxe_battle_matches: Optional[
        "mariokart8deluxe_battle_matches_bool_exp"
    ] = None
    mariokart8deluxe_battle_matches_aggregate: Optional[
        "mariokart8deluxe_battle_matches_aggregate_bool_exp"
    ] = None
    mariokart8deluxe_console: Optional["mariokart8deluxe_consoles_bool_exp"] = None
    mariokart8deluxe_console_id: Optional["uuid_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class mariokart8deluxe_battle_courses_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    mariokart8deluxe_battle_matches_aggregate: Optional[
        "mariokart8deluxe_battle_matches_aggregate_order_by"
    ] = None
    mariokart8deluxe_console: Optional["mariokart8deluxe_consoles_order_by"] = None
    mariokart8deluxe_console_id: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class mariokart8deluxe_battle_courses_stream_cursor_input(BaseModel):
    initial_value: "mariokart8deluxe_battle_courses_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class mariokart8deluxe_battle_courses_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    index: Optional[int] = None
    mariokart8deluxe_console_id: Optional[Any] = None
    name: Optional[str] = None
    updated_at: Optional[Any] = None


class mariokart8deluxe_battle_match_players_aggregate_bool_exp(BaseModel):
    count: Optional[
        "mariokart8deluxe_battle_match_players_aggregate_bool_exp_count"
    ] = None


class mariokart8deluxe_battle_match_players_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[
        List[mariokart8deluxe_battle_match_players_select_column]
    ] = None
    distinct: Optional[bool] = None
    filter: Optional["mariokart8deluxe_battle_match_players_bool_exp"] = None
    predicate: "Int_comparison_exp"


class mariokart8deluxe_battle_match_players_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["mariokart8deluxe_battle_match_players_max_order_by"] = None
    min: Optional["mariokart8deluxe_battle_match_players_min_order_by"] = None


class mariokart8deluxe_battle_match_players_bool_exp(BaseModel):
    and_: Optional[List["mariokart8deluxe_battle_match_players_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["mariokart8deluxe_battle_match_players_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["mariokart8deluxe_battle_match_players_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    mariokart8deluxe_battle_match: Optional[
        "mariokart8deluxe_battle_matches_bool_exp"
    ] = None
    mariokart8deluxe_battle_match_id: Optional["uuid_comparison_exp"] = None
    nickname: Optional["String_comparison_exp"] = None
    person: Optional["persons_bool_exp"] = None
    person_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class mariokart8deluxe_battle_match_players_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    mariokart8deluxe_battle_match_id: Optional[order_by] = None
    nickname: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class mariokart8deluxe_battle_match_players_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    mariokart8deluxe_battle_match_id: Optional[order_by] = None
    nickname: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class mariokart8deluxe_battle_match_players_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    mariokart8deluxe_battle_match: Optional[
        "mariokart8deluxe_battle_matches_order_by"
    ] = None
    mariokart8deluxe_battle_match_id: Optional[order_by] = None
    nickname: Optional[order_by] = None
    person: Optional["persons_order_by"] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class mariokart8deluxe_battle_match_players_stream_cursor_input(BaseModel):
    initial_value: "mariokart8deluxe_battle_match_players_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class mariokart8deluxe_battle_match_players_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    mariokart8deluxe_battle_match_id: Optional[Any] = None
    nickname: Optional[str] = None
    person_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class mariokart8deluxe_battle_matches_aggregate_bool_exp(BaseModel):
    bool_and: Optional[
        "mariokart8deluxe_battle_matches_aggregate_bool_exp_bool_and"
    ] = None
    bool_or: Optional[
        "mariokart8deluxe_battle_matches_aggregate_bool_exp_bool_or"
    ] = None
    count: Optional["mariokart8deluxe_battle_matches_aggregate_bool_exp_count"] = None


class mariokart8deluxe_battle_matches_aggregate_bool_exp_bool_and(BaseModel):
    arguments: mariokart8deluxe_battle_matches_select_column_mariokart8deluxe_battle_matches_aggregate_bool_exp_bool_and_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["mariokart8deluxe_battle_matches_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class mariokart8deluxe_battle_matches_aggregate_bool_exp_bool_or(BaseModel):
    arguments: mariokart8deluxe_battle_matches_select_column_mariokart8deluxe_battle_matches_aggregate_bool_exp_bool_or_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["mariokart8deluxe_battle_matches_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class mariokart8deluxe_battle_matches_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[mariokart8deluxe_battle_matches_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["mariokart8deluxe_battle_matches_bool_exp"] = None
    predicate: "Int_comparison_exp"


class mariokart8deluxe_battle_matches_aggregate_order_by(BaseModel):
    avg: Optional["mariokart8deluxe_battle_matches_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["mariokart8deluxe_battle_matches_max_order_by"] = None
    min: Optional["mariokart8deluxe_battle_matches_min_order_by"] = None
    stddev: Optional["mariokart8deluxe_battle_matches_stddev_order_by"] = None
    stddev_pop: Optional["mariokart8deluxe_battle_matches_stddev_pop_order_by"] = None
    stddev_samp: Optional["mariokart8deluxe_battle_matches_stddev_samp_order_by"] = None
    sum: Optional["mariokart8deluxe_battle_matches_sum_order_by"] = None
    var_pop: Optional["mariokart8deluxe_battle_matches_var_pop_order_by"] = None
    var_samp: Optional["mariokart8deluxe_battle_matches_var_samp_order_by"] = None
    variance: Optional["mariokart8deluxe_battle_matches_variance_order_by"] = None


class mariokart8deluxe_battle_matches_avg_order_by(BaseModel):
    index: Optional[order_by] = None


class mariokart8deluxe_battle_matches_bool_exp(BaseModel):
    and_: Optional[List["mariokart8deluxe_battle_matches_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["mariokart8deluxe_battle_matches_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["mariokart8deluxe_battle_matches_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    end_time: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    index: Optional["Int_comparison_exp"] = None
    is_aborted: Optional["Boolean_comparison_exp"] = None
    mariokart8deluxe_battle_course: Optional[
        "mariokart8deluxe_battle_courses_bool_exp"
    ] = None
    mariokart8deluxe_battle_course_id: Optional["uuid_comparison_exp"] = None
    mariokart8deluxe_battle_match_players: Optional[
        "mariokart8deluxe_battle_match_players_bool_exp"
    ] = None
    mariokart8deluxe_battle_match_players_aggregate: Optional[
        "mariokart8deluxe_battle_match_players_aggregate_bool_exp"
    ] = None
    mariokart8deluxe_battle_rule: Optional[
        "mariokart8deluxe_battle_rules_bool_exp"
    ] = None
    mariokart8deluxe_battle_rule_id: Optional["uuid_comparison_exp"] = None
    program: Optional["programs_bool_exp"] = None
    program_id: Optional["uuid_comparison_exp"] = None
    start_time: Optional["timestamptz_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class mariokart8deluxe_battle_matches_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    mariokart8deluxe_battle_course_id: Optional[order_by] = None
    mariokart8deluxe_battle_rule_id: Optional[order_by] = None
    program_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class mariokart8deluxe_battle_matches_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    mariokart8deluxe_battle_course_id: Optional[order_by] = None
    mariokart8deluxe_battle_rule_id: Optional[order_by] = None
    program_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class mariokart8deluxe_battle_matches_order_by(BaseModel):
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    is_aborted: Optional[order_by] = None
    mariokart8deluxe_battle_course: Optional[
        "mariokart8deluxe_battle_courses_order_by"
    ] = None
    mariokart8deluxe_battle_course_id: Optional[order_by] = None
    mariokart8deluxe_battle_match_players_aggregate: Optional[
        "mariokart8deluxe_battle_match_players_aggregate_order_by"
    ] = None
    mariokart8deluxe_battle_rule: Optional[
        "mariokart8deluxe_battle_rules_order_by"
    ] = None
    mariokart8deluxe_battle_rule_id: Optional[order_by] = None
    program: Optional["programs_order_by"] = None
    program_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class mariokart8deluxe_battle_matches_stddev_order_by(BaseModel):
    index: Optional[order_by] = None


class mariokart8deluxe_battle_matches_stddev_pop_order_by(BaseModel):
    index: Optional[order_by] = None


class mariokart8deluxe_battle_matches_stddev_samp_order_by(BaseModel):
    index: Optional[order_by] = None


class mariokart8deluxe_battle_matches_stream_cursor_input(BaseModel):
    initial_value: "mariokart8deluxe_battle_matches_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class mariokart8deluxe_battle_matches_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    end_time: Optional[Any] = None
    id: Optional[Any] = None
    index: Optional[int] = None
    is_aborted: Optional[bool] = None
    mariokart8deluxe_battle_course_id: Optional[Any] = None
    mariokart8deluxe_battle_rule_id: Optional[Any] = None
    program_id: Optional[Any] = None
    start_time: Optional[Any] = None
    updated_at: Optional[Any] = None


class mariokart8deluxe_battle_matches_sum_order_by(BaseModel):
    index: Optional[order_by] = None


class mariokart8deluxe_battle_matches_var_pop_order_by(BaseModel):
    index: Optional[order_by] = None


class mariokart8deluxe_battle_matches_var_samp_order_by(BaseModel):
    index: Optional[order_by] = None


class mariokart8deluxe_battle_matches_variance_order_by(BaseModel):
    index: Optional[order_by] = None


class mariokart8deluxe_battle_rules_bool_exp(BaseModel):
    and_: Optional[List["mariokart8deluxe_battle_rules_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["mariokart8deluxe_battle_rules_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["mariokart8deluxe_battle_rules_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    index: Optional["Int_comparison_exp"] = None
    mariokart8deluxe_battle_matches: Optional[
        "mariokart8deluxe_battle_matches_bool_exp"
    ] = None
    mariokart8deluxe_battle_matches_aggregate: Optional[
        "mariokart8deluxe_battle_matches_aggregate_bool_exp"
    ] = None
    name: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class mariokart8deluxe_battle_rules_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    mariokart8deluxe_battle_matches_aggregate: Optional[
        "mariokart8deluxe_battle_matches_aggregate_order_by"
    ] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class mariokart8deluxe_battle_rules_stream_cursor_input(BaseModel):
    initial_value: "mariokart8deluxe_battle_rules_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class mariokart8deluxe_battle_rules_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    index: Optional[int] = None
    name: Optional[str] = None
    updated_at: Optional[Any] = None


class mariokart8deluxe_consoles_bool_exp(BaseModel):
    and_: Optional[List["mariokart8deluxe_consoles_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["mariokart8deluxe_consoles_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["mariokart8deluxe_consoles_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    mariokart8deluxe_courses: Optional["mariokart8deluxe_courses_bool_exp"] = None
    mariokart8deluxe_courses_aggregate: Optional[
        "mariokart8deluxe_courses_aggregate_bool_exp"
    ] = None
    name: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class mariokart8deluxe_consoles_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    mariokart8deluxe_courses_aggregate: Optional[
        "mariokart8deluxe_courses_aggregate_order_by"
    ] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class mariokart8deluxe_consoles_stream_cursor_input(BaseModel):
    initial_value: "mariokart8deluxe_consoles_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class mariokart8deluxe_consoles_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    updated_at: Optional[Any] = None


class mariokart8deluxe_courses_aggregate_bool_exp(BaseModel):
    count: Optional["mariokart8deluxe_courses_aggregate_bool_exp_count"] = None


class mariokart8deluxe_courses_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[mariokart8deluxe_courses_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["mariokart8deluxe_courses_bool_exp"] = None
    predicate: "Int_comparison_exp"


class mariokart8deluxe_courses_aggregate_order_by(BaseModel):
    avg: Optional["mariokart8deluxe_courses_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["mariokart8deluxe_courses_max_order_by"] = None
    min: Optional["mariokart8deluxe_courses_min_order_by"] = None
    stddev: Optional["mariokart8deluxe_courses_stddev_order_by"] = None
    stddev_pop: Optional["mariokart8deluxe_courses_stddev_pop_order_by"] = None
    stddev_samp: Optional["mariokart8deluxe_courses_stddev_samp_order_by"] = None
    sum: Optional["mariokart8deluxe_courses_sum_order_by"] = None
    var_pop: Optional["mariokart8deluxe_courses_var_pop_order_by"] = None
    var_samp: Optional["mariokart8deluxe_courses_var_samp_order_by"] = None
    variance: Optional["mariokart8deluxe_courses_variance_order_by"] = None


class mariokart8deluxe_courses_avg_order_by(BaseModel):
    in_cup_index: Optional[order_by] = None


class mariokart8deluxe_courses_bool_exp(BaseModel):
    and_: Optional[List["mariokart8deluxe_courses_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["mariokart8deluxe_courses_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["mariokart8deluxe_courses_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    in_cup_index: Optional["Int_comparison_exp"] = None
    mariokart8deluxe_console: Optional["mariokart8deluxe_consoles_bool_exp"] = None
    mariokart8deluxe_console_id: Optional["uuid_comparison_exp"] = None
    mariokart8deluxe_cup: Optional["mariokart8deluxe_cups_bool_exp"] = None
    mariokart8deluxe_cup_id: Optional["uuid_comparison_exp"] = None
    mariokart8deluxe_races: Optional["mariokart8deluxe_races_bool_exp"] = None
    mariokart8deluxe_races_aggregate: Optional[
        "mariokart8deluxe_races_aggregate_bool_exp"
    ] = None
    name: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class mariokart8deluxe_courses_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    in_cup_index: Optional[order_by] = None
    mariokart8deluxe_console_id: Optional[order_by] = None
    mariokart8deluxe_cup_id: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class mariokart8deluxe_courses_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    in_cup_index: Optional[order_by] = None
    mariokart8deluxe_console_id: Optional[order_by] = None
    mariokart8deluxe_cup_id: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class mariokart8deluxe_courses_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    in_cup_index: Optional[order_by] = None
    mariokart8deluxe_console: Optional["mariokart8deluxe_consoles_order_by"] = None
    mariokart8deluxe_console_id: Optional[order_by] = None
    mariokart8deluxe_cup: Optional["mariokart8deluxe_cups_order_by"] = None
    mariokart8deluxe_cup_id: Optional[order_by] = None
    mariokart8deluxe_races_aggregate: Optional[
        "mariokart8deluxe_races_aggregate_order_by"
    ] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class mariokart8deluxe_courses_stddev_order_by(BaseModel):
    in_cup_index: Optional[order_by] = None


class mariokart8deluxe_courses_stddev_pop_order_by(BaseModel):
    in_cup_index: Optional[order_by] = None


class mariokart8deluxe_courses_stddev_samp_order_by(BaseModel):
    in_cup_index: Optional[order_by] = None


class mariokart8deluxe_courses_stream_cursor_input(BaseModel):
    initial_value: "mariokart8deluxe_courses_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class mariokart8deluxe_courses_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    in_cup_index: Optional[int] = None
    mariokart8deluxe_console_id: Optional[Any] = None
    mariokart8deluxe_cup_id: Optional[Any] = None
    name: Optional[str] = None
    updated_at: Optional[Any] = None


class mariokart8deluxe_courses_sum_order_by(BaseModel):
    in_cup_index: Optional[order_by] = None


class mariokart8deluxe_courses_var_pop_order_by(BaseModel):
    in_cup_index: Optional[order_by] = None


class mariokart8deluxe_courses_var_samp_order_by(BaseModel):
    in_cup_index: Optional[order_by] = None


class mariokart8deluxe_courses_variance_order_by(BaseModel):
    in_cup_index: Optional[order_by] = None


class mariokart8deluxe_cups_bool_exp(BaseModel):
    and_: Optional[List["mariokart8deluxe_cups_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["mariokart8deluxe_cups_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["mariokart8deluxe_cups_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    index: Optional["Int_comparison_exp"] = None
    mariokart8deluxe_courses: Optional["mariokart8deluxe_courses_bool_exp"] = None
    mariokart8deluxe_courses_aggregate: Optional[
        "mariokart8deluxe_courses_aggregate_bool_exp"
    ] = None
    name: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class mariokart8deluxe_cups_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    mariokart8deluxe_courses_aggregate: Optional[
        "mariokart8deluxe_courses_aggregate_order_by"
    ] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class mariokart8deluxe_cups_stream_cursor_input(BaseModel):
    initial_value: "mariokart8deluxe_cups_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class mariokart8deluxe_cups_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    index: Optional[int] = None
    name: Optional[str] = None
    updated_at: Optional[Any] = None


class mariokart8deluxe_race_players_aggregate_bool_exp(BaseModel):
    count: Optional["mariokart8deluxe_race_players_aggregate_bool_exp_count"] = None


class mariokart8deluxe_race_players_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[mariokart8deluxe_race_players_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["mariokart8deluxe_race_players_bool_exp"] = None
    predicate: "Int_comparison_exp"


class mariokart8deluxe_race_players_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["mariokart8deluxe_race_players_max_order_by"] = None
    min: Optional["mariokart8deluxe_race_players_min_order_by"] = None


class mariokart8deluxe_race_players_bool_exp(BaseModel):
    and_: Optional[List["mariokart8deluxe_race_players_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["mariokart8deluxe_race_players_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["mariokart8deluxe_race_players_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    mariokart8deluxe_race: Optional["mariokart8deluxe_races_bool_exp"] = None
    mariokart8deluxe_race_id: Optional["uuid_comparison_exp"] = None
    nickname: Optional["String_comparison_exp"] = None
    person: Optional["persons_bool_exp"] = None
    person_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class mariokart8deluxe_race_players_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    mariokart8deluxe_race_id: Optional[order_by] = None
    nickname: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class mariokart8deluxe_race_players_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    mariokart8deluxe_race_id: Optional[order_by] = None
    nickname: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class mariokart8deluxe_race_players_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    mariokart8deluxe_race: Optional["mariokart8deluxe_races_order_by"] = None
    mariokart8deluxe_race_id: Optional[order_by] = None
    nickname: Optional[order_by] = None
    person: Optional["persons_order_by"] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class mariokart8deluxe_race_players_stream_cursor_input(BaseModel):
    initial_value: "mariokart8deluxe_race_players_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class mariokart8deluxe_race_players_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    mariokart8deluxe_race_id: Optional[Any] = None
    nickname: Optional[str] = None
    person_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class mariokart8deluxe_race_rules_bool_exp(BaseModel):
    and_: Optional[List["mariokart8deluxe_race_rules_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["mariokart8deluxe_race_rules_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["mariokart8deluxe_race_rules_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    index: Optional["Int_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class mariokart8deluxe_race_rules_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class mariokart8deluxe_race_rules_stream_cursor_input(BaseModel):
    initial_value: "mariokart8deluxe_race_rules_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class mariokart8deluxe_race_rules_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    index: Optional[int] = None
    name: Optional[str] = None
    updated_at: Optional[Any] = None


class mariokart8deluxe_races_aggregate_bool_exp(BaseModel):
    bool_and: Optional["mariokart8deluxe_races_aggregate_bool_exp_bool_and"] = None
    bool_or: Optional["mariokart8deluxe_races_aggregate_bool_exp_bool_or"] = None
    count: Optional["mariokart8deluxe_races_aggregate_bool_exp_count"] = None


class mariokart8deluxe_races_aggregate_bool_exp_bool_and(BaseModel):
    arguments: mariokart8deluxe_races_select_column_mariokart8deluxe_races_aggregate_bool_exp_bool_and_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["mariokart8deluxe_races_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class mariokart8deluxe_races_aggregate_bool_exp_bool_or(BaseModel):
    arguments: mariokart8deluxe_races_select_column_mariokart8deluxe_races_aggregate_bool_exp_bool_or_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["mariokart8deluxe_races_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class mariokart8deluxe_races_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[mariokart8deluxe_races_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["mariokart8deluxe_races_bool_exp"] = None
    predicate: "Int_comparison_exp"


class mariokart8deluxe_races_aggregate_order_by(BaseModel):
    avg: Optional["mariokart8deluxe_races_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["mariokart8deluxe_races_max_order_by"] = None
    min: Optional["mariokart8deluxe_races_min_order_by"] = None
    stddev: Optional["mariokart8deluxe_races_stddev_order_by"] = None
    stddev_pop: Optional["mariokart8deluxe_races_stddev_pop_order_by"] = None
    stddev_samp: Optional["mariokart8deluxe_races_stddev_samp_order_by"] = None
    sum: Optional["mariokart8deluxe_races_sum_order_by"] = None
    var_pop: Optional["mariokart8deluxe_races_var_pop_order_by"] = None
    var_samp: Optional["mariokart8deluxe_races_var_samp_order_by"] = None
    variance: Optional["mariokart8deluxe_races_variance_order_by"] = None


class mariokart8deluxe_races_avg_order_by(BaseModel):
    index: Optional[order_by] = None


class mariokart8deluxe_races_bool_exp(BaseModel):
    and_: Optional[List["mariokart8deluxe_races_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["mariokart8deluxe_races_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["mariokart8deluxe_races_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    end_time: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    index: Optional["Int_comparison_exp"] = None
    is_aborted: Optional["Boolean_comparison_exp"] = None
    mariokart8deluxe_course: Optional["mariokart8deluxe_courses_bool_exp"] = None
    mariokart8deluxe_course_id: Optional["uuid_comparison_exp"] = None
    mariokart8deluxe_race_players: Optional[
        "mariokart8deluxe_race_players_bool_exp"
    ] = None
    mariokart8deluxe_race_players_aggregate: Optional[
        "mariokart8deluxe_race_players_aggregate_bool_exp"
    ] = None
    mariokart8deluxe_race_rule: Optional["mariokart8deluxe_race_rules_bool_exp"] = None
    mariokart8deluxe_race_rule_id: Optional["uuid_comparison_exp"] = None
    program: Optional["programs_bool_exp"] = None
    program_id: Optional["uuid_comparison_exp"] = None
    start_time: Optional["timestamptz_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class mariokart8deluxe_races_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    mariokart8deluxe_course_id: Optional[order_by] = None
    mariokart8deluxe_race_rule_id: Optional[order_by] = None
    program_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class mariokart8deluxe_races_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    mariokart8deluxe_course_id: Optional[order_by] = None
    mariokart8deluxe_race_rule_id: Optional[order_by] = None
    program_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class mariokart8deluxe_races_order_by(BaseModel):
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    is_aborted: Optional[order_by] = None
    mariokart8deluxe_course: Optional["mariokart8deluxe_courses_order_by"] = None
    mariokart8deluxe_course_id: Optional[order_by] = None
    mariokart8deluxe_race_players_aggregate: Optional[
        "mariokart8deluxe_race_players_aggregate_order_by"
    ] = None
    mariokart8deluxe_race_rule: Optional["mariokart8deluxe_race_rules_order_by"] = None
    mariokart8deluxe_race_rule_id: Optional[order_by] = None
    program: Optional["programs_order_by"] = None
    program_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class mariokart8deluxe_races_stddev_order_by(BaseModel):
    index: Optional[order_by] = None


class mariokart8deluxe_races_stddev_pop_order_by(BaseModel):
    index: Optional[order_by] = None


class mariokart8deluxe_races_stddev_samp_order_by(BaseModel):
    index: Optional[order_by] = None


class mariokart8deluxe_races_stream_cursor_input(BaseModel):
    initial_value: "mariokart8deluxe_races_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class mariokart8deluxe_races_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    end_time: Optional[Any] = None
    id: Optional[Any] = None
    index: Optional[int] = None
    is_aborted: Optional[bool] = None
    mariokart8deluxe_course_id: Optional[Any] = None
    mariokart8deluxe_race_rule_id: Optional[Any] = None
    program_id: Optional[Any] = None
    start_time: Optional[Any] = None
    updated_at: Optional[Any] = None


class mariokart8deluxe_races_sum_order_by(BaseModel):
    index: Optional[order_by] = None


class mariokart8deluxe_races_var_pop_order_by(BaseModel):
    index: Optional[order_by] = None


class mariokart8deluxe_races_var_samp_order_by(BaseModel):
    index: Optional[order_by] = None


class mariokart8deluxe_races_variance_order_by(BaseModel):
    index: Optional[order_by] = None


class niconico_accounts_bool_exp(BaseModel):
    and_: Optional[List["niconico_accounts_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["niconico_accounts_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["niconico_accounts_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    remote_niconico_account_id: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class niconico_accounts_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    remote_niconico_account_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class niconico_accounts_stream_cursor_input(BaseModel):
    initial_value: "niconico_accounts_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class niconico_accounts_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    remote_niconico_account_id: Optional[str] = None
    updated_at: Optional[Any] = None


class niconico_channels_bool_exp(BaseModel):
    and_: Optional[List["niconico_channels_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["niconico_channels_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["niconico_channels_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    person_niconico_channels: Optional["person_niconico_channels_bool_exp"] = None
    person_niconico_channels_aggregate: Optional[
        "person_niconico_channels_aggregate_bool_exp"
    ] = None
    remote_niconico_channel_id: Optional["String_comparison_exp"] = None
    screen_name: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class niconico_channels_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    person_niconico_channels_aggregate: Optional[
        "person_niconico_channels_aggregate_order_by"
    ] = None
    remote_niconico_channel_id: Optional[order_by] = None
    screen_name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class niconico_channels_stream_cursor_input(BaseModel):
    initial_value: "niconico_channels_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class niconico_channels_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    remote_niconico_channel_id: Optional[str] = None
    screen_name: Optional[str] = None
    updated_at: Optional[Any] = None


class niconico_communities_bool_exp(BaseModel):
    and_: Optional[List["niconico_communities_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["niconico_communities_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["niconico_communities_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    remote_niconico_community_id: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class niconico_communities_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    remote_niconico_community_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class niconico_communities_stream_cursor_input(BaseModel):
    initial_value: "niconico_communities_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class niconico_communities_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    remote_niconico_community_id: Optional[str] = None
    updated_at: Optional[Any] = None


class niconico_plus_channels_bool_exp(BaseModel):
    and_: Optional[List["niconico_plus_channels_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["niconico_plus_channels_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["niconico_plus_channels_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    person_niconico_plus_channels: Optional[
        "person_niconico_plus_channels_bool_exp"
    ] = None
    person_niconico_plus_channels_aggregate: Optional[
        "person_niconico_plus_channels_aggregate_bool_exp"
    ] = None
    remote_niconico_plus_channel_id: Optional["String_comparison_exp"] = None
    screen_name: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class niconico_plus_channels_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    person_niconico_plus_channels_aggregate: Optional[
        "person_niconico_plus_channels_aggregate_order_by"
    ] = None
    remote_niconico_plus_channel_id: Optional[order_by] = None
    screen_name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class niconico_plus_channels_stream_cursor_input(BaseModel):
    initial_value: "niconico_plus_channels_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class niconico_plus_channels_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    remote_niconico_plus_channel_id: Optional[str] = None
    screen_name: Optional[str] = None
    updated_at: Optional[Any] = None


class niconico_videos_bool_exp(BaseModel):
    and_: Optional[List["niconico_videos_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["niconico_videos_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["niconico_videos_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    niconico_account: Optional["niconico_accounts_bool_exp"] = None
    niconico_account_id: Optional["uuid_comparison_exp"] = None
    program_niconico_videos: Optional["program_niconico_videos_bool_exp"] = None
    program_niconico_videos_aggregate: Optional[
        "program_niconico_videos_aggregate_bool_exp"
    ] = None
    project_niconico_videos: Optional["project_niconico_videos_bool_exp"] = None
    project_niconico_videos_aggregate: Optional[
        "project_niconico_videos_aggregate_bool_exp"
    ] = None
    remote_niconico_content_id: Optional["String_comparison_exp"] = None
    start_time: Optional["timestamptz_comparison_exp"] = None
    thumbnail_url: Optional["String_comparison_exp"] = None
    title: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class niconico_videos_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    niconico_account: Optional["niconico_accounts_order_by"] = None
    niconico_account_id: Optional[order_by] = None
    program_niconico_videos_aggregate: Optional[
        "program_niconico_videos_aggregate_order_by"
    ] = None
    project_niconico_videos_aggregate: Optional[
        "project_niconico_videos_aggregate_order_by"
    ] = None
    remote_niconico_content_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    thumbnail_url: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class niconico_videos_stream_cursor_input(BaseModel):
    initial_value: "niconico_videos_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class niconico_videos_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    niconico_account_id: Optional[Any] = None
    remote_niconico_content_id: Optional[str] = None
    start_time: Optional[Any] = None
    thumbnail_url: Optional[str] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class person_fediverse_accounts_aggregate_bool_exp(BaseModel):
    count: Optional["person_fediverse_accounts_aggregate_bool_exp_count"] = None


class person_fediverse_accounts_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[person_fediverse_accounts_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["person_fediverse_accounts_bool_exp"] = None
    predicate: "Int_comparison_exp"


class person_fediverse_accounts_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["person_fediverse_accounts_max_order_by"] = None
    min: Optional["person_fediverse_accounts_min_order_by"] = None


class person_fediverse_accounts_bool_exp(BaseModel):
    and_: Optional[List["person_fediverse_accounts_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["person_fediverse_accounts_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["person_fediverse_accounts_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    fediverse_account: Optional["fediverse_accounts_bool_exp"] = None
    fediverse_account_id: Optional["uuid_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    person: Optional["persons_bool_exp"] = None
    person_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class person_fediverse_accounts_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    fediverse_account_id: Optional[order_by] = None
    id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class person_fediverse_accounts_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    fediverse_account_id: Optional[order_by] = None
    id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class person_fediverse_accounts_order_by(BaseModel):
    created_at: Optional[order_by] = None
    fediverse_account: Optional["fediverse_accounts_order_by"] = None
    fediverse_account_id: Optional[order_by] = None
    id: Optional[order_by] = None
    person: Optional["persons_order_by"] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class person_fediverse_accounts_stream_cursor_input(BaseModel):
    initial_value: "person_fediverse_accounts_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class person_fediverse_accounts_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    fediverse_account_id: Optional[Any] = None
    id: Optional[Any] = None
    person_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class person_niconico_accounts_aggregate_bool_exp(BaseModel):
    count: Optional["person_niconico_accounts_aggregate_bool_exp_count"] = None


class person_niconico_accounts_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[person_niconico_accounts_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["person_niconico_accounts_bool_exp"] = None
    predicate: "Int_comparison_exp"


class person_niconico_accounts_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["person_niconico_accounts_max_order_by"] = None
    min: Optional["person_niconico_accounts_min_order_by"] = None


class person_niconico_accounts_bool_exp(BaseModel):
    and_: Optional[List["person_niconico_accounts_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["person_niconico_accounts_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["person_niconico_accounts_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    niconico_account: Optional["niconico_accounts_bool_exp"] = None
    niconico_account_id: Optional["uuid_comparison_exp"] = None
    person: Optional["persons_bool_exp"] = None
    person_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class person_niconico_accounts_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    niconico_account_id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class person_niconico_accounts_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    niconico_account_id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class person_niconico_accounts_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    niconico_account: Optional["niconico_accounts_order_by"] = None
    niconico_account_id: Optional[order_by] = None
    person: Optional["persons_order_by"] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class person_niconico_accounts_stream_cursor_input(BaseModel):
    initial_value: "person_niconico_accounts_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class person_niconico_accounts_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    niconico_account_id: Optional[Any] = None
    person_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class person_niconico_channels_aggregate_bool_exp(BaseModel):
    count: Optional["person_niconico_channels_aggregate_bool_exp_count"] = None


class person_niconico_channels_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[person_niconico_channels_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["person_niconico_channels_bool_exp"] = None
    predicate: "Int_comparison_exp"


class person_niconico_channels_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["person_niconico_channels_max_order_by"] = None
    min: Optional["person_niconico_channels_min_order_by"] = None


class person_niconico_channels_bool_exp(BaseModel):
    and_: Optional[List["person_niconico_channels_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["person_niconico_channels_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["person_niconico_channels_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    niconico_channel: Optional["niconico_channels_bool_exp"] = None
    niconico_channel_id: Optional["uuid_comparison_exp"] = None
    person: Optional["persons_bool_exp"] = None
    person_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class person_niconico_channels_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    niconico_channel_id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class person_niconico_channels_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    niconico_channel_id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class person_niconico_channels_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    niconico_channel: Optional["niconico_channels_order_by"] = None
    niconico_channel_id: Optional[order_by] = None
    person: Optional["persons_order_by"] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class person_niconico_channels_stream_cursor_input(BaseModel):
    initial_value: "person_niconico_channels_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class person_niconico_channels_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    niconico_channel_id: Optional[Any] = None
    person_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class person_niconico_communities_aggregate_bool_exp(BaseModel):
    count: Optional["person_niconico_communities_aggregate_bool_exp_count"] = None


class person_niconico_communities_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[person_niconico_communities_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["person_niconico_communities_bool_exp"] = None
    predicate: "Int_comparison_exp"


class person_niconico_communities_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["person_niconico_communities_max_order_by"] = None
    min: Optional["person_niconico_communities_min_order_by"] = None


class person_niconico_communities_bool_exp(BaseModel):
    and_: Optional[List["person_niconico_communities_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["person_niconico_communities_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["person_niconico_communities_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    niconico_community: Optional["niconico_communities_bool_exp"] = None
    niconico_community_id: Optional["uuid_comparison_exp"] = None
    person: Optional["persons_bool_exp"] = None
    person_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class person_niconico_communities_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    niconico_community_id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class person_niconico_communities_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    niconico_community_id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class person_niconico_communities_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    niconico_community: Optional["niconico_communities_order_by"] = None
    niconico_community_id: Optional[order_by] = None
    person: Optional["persons_order_by"] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class person_niconico_communities_stream_cursor_input(BaseModel):
    initial_value: "person_niconico_communities_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class person_niconico_communities_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    niconico_community_id: Optional[Any] = None
    person_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class person_niconico_plus_channels_aggregate_bool_exp(BaseModel):
    count: Optional["person_niconico_plus_channels_aggregate_bool_exp_count"] = None


class person_niconico_plus_channels_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[person_niconico_plus_channels_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["person_niconico_plus_channels_bool_exp"] = None
    predicate: "Int_comparison_exp"


class person_niconico_plus_channels_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["person_niconico_plus_channels_max_order_by"] = None
    min: Optional["person_niconico_plus_channels_min_order_by"] = None


class person_niconico_plus_channels_bool_exp(BaseModel):
    and_: Optional[List["person_niconico_plus_channels_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["person_niconico_plus_channels_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["person_niconico_plus_channels_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    niconico_plus_channel: Optional["niconico_plus_channels_bool_exp"] = None
    niconico_plus_channel_id: Optional["uuid_comparison_exp"] = None
    person: Optional["persons_bool_exp"] = None
    person_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class person_niconico_plus_channels_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    niconico_plus_channel_id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class person_niconico_plus_channels_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    niconico_plus_channel_id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class person_niconico_plus_channels_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    niconico_plus_channel: Optional["niconico_plus_channels_order_by"] = None
    niconico_plus_channel_id: Optional[order_by] = None
    person: Optional["persons_order_by"] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class person_niconico_plus_channels_stream_cursor_input(BaseModel):
    initial_value: "person_niconico_plus_channels_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class person_niconico_plus_channels_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    niconico_plus_channel_id: Optional[Any] = None
    person_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class person_twitter_accounts_aggregate_bool_exp(BaseModel):
    count: Optional["person_twitter_accounts_aggregate_bool_exp_count"] = None


class person_twitter_accounts_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[person_twitter_accounts_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["person_twitter_accounts_bool_exp"] = None
    predicate: "Int_comparison_exp"


class person_twitter_accounts_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["person_twitter_accounts_max_order_by"] = None
    min: Optional["person_twitter_accounts_min_order_by"] = None


class person_twitter_accounts_bool_exp(BaseModel):
    and_: Optional[List["person_twitter_accounts_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["person_twitter_accounts_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["person_twitter_accounts_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    person: Optional["persons_bool_exp"] = None
    person_id: Optional["uuid_comparison_exp"] = None
    twitter_account: Optional["twitter_accounts_bool_exp"] = None
    twitter_account_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class person_twitter_accounts_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    twitter_account_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class person_twitter_accounts_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    twitter_account_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class person_twitter_accounts_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    person: Optional["persons_order_by"] = None
    person_id: Optional[order_by] = None
    twitter_account: Optional["twitter_accounts_order_by"] = None
    twitter_account_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class person_twitter_accounts_stream_cursor_input(BaseModel):
    initial_value: "person_twitter_accounts_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class person_twitter_accounts_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    person_id: Optional[Any] = None
    twitter_account_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class person_youtube_channels_aggregate_bool_exp(BaseModel):
    count: Optional["person_youtube_channels_aggregate_bool_exp_count"] = None


class person_youtube_channels_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[person_youtube_channels_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["person_youtube_channels_bool_exp"] = None
    predicate: "Int_comparison_exp"


class person_youtube_channels_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["person_youtube_channels_max_order_by"] = None
    min: Optional["person_youtube_channels_min_order_by"] = None


class person_youtube_channels_bool_exp(BaseModel):
    and_: Optional[List["person_youtube_channels_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["person_youtube_channels_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["person_youtube_channels_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    person: Optional["persons_bool_exp"] = None
    person_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    youtube_channel: Optional["youtube_channels_bool_exp"] = None
    youtube_channel_id: Optional["uuid_comparison_exp"] = None


class person_youtube_channels_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    youtube_channel_id: Optional[order_by] = None


class person_youtube_channels_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    youtube_channel_id: Optional[order_by] = None


class person_youtube_channels_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    person: Optional["persons_order_by"] = None
    person_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    youtube_channel: Optional["youtube_channels_order_by"] = None
    youtube_channel_id: Optional[order_by] = None


class person_youtube_channels_stream_cursor_input(BaseModel):
    initial_value: "person_youtube_channels_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class person_youtube_channels_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    person_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    youtube_channel_id: Optional[Any] = None


class persons_bool_exp(BaseModel):
    and_: Optional[List["persons_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["persons_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["persons_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    fallguys_custom_rounds: Optional["fallguys_custom_rounds_bool_exp"] = None
    fallguys_custom_rounds_aggregate: Optional[
        "fallguys_custom_rounds_aggregate_bool_exp"
    ] = None
    id: Optional["uuid_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    person_fediverse_accounts: Optional["person_fediverse_accounts_bool_exp"] = None
    person_fediverse_accounts_aggregate: Optional[
        "person_fediverse_accounts_aggregate_bool_exp"
    ] = None
    person_niconico_accounts: Optional["person_niconico_accounts_bool_exp"] = None
    person_niconico_accounts_aggregate: Optional[
        "person_niconico_accounts_aggregate_bool_exp"
    ] = None
    person_niconico_channels: Optional["person_niconico_channels_bool_exp"] = None
    person_niconico_channels_aggregate: Optional[
        "person_niconico_channels_aggregate_bool_exp"
    ] = None
    person_niconico_communities: Optional["person_niconico_communities_bool_exp"] = None
    person_niconico_communities_aggregate: Optional[
        "person_niconico_communities_aggregate_bool_exp"
    ] = None
    person_niconico_plus_channels: Optional[
        "person_niconico_plus_channels_bool_exp"
    ] = None
    person_niconico_plus_channels_aggregate: Optional[
        "person_niconico_plus_channels_aggregate_bool_exp"
    ] = None
    person_twitter_accounts: Optional["person_twitter_accounts_bool_exp"] = None
    person_twitter_accounts_aggregate: Optional[
        "person_twitter_accounts_aggregate_bool_exp"
    ] = None
    person_youtube_channels: Optional["person_youtube_channels_bool_exp"] = None
    person_youtube_channels_aggregate: Optional[
        "person_youtube_channels_aggregate_bool_exp"
    ] = None
    program_persons: Optional["program_persons_bool_exp"] = None
    program_persons_aggregate: Optional["program_persons_aggregate_bool_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class persons_order_by(BaseModel):
    created_at: Optional[order_by] = None
    fallguys_custom_rounds_aggregate: Optional[
        "fallguys_custom_rounds_aggregate_order_by"
    ] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    person_fediverse_accounts_aggregate: Optional[
        "person_fediverse_accounts_aggregate_order_by"
    ] = None
    person_niconico_accounts_aggregate: Optional[
        "person_niconico_accounts_aggregate_order_by"
    ] = None
    person_niconico_channels_aggregate: Optional[
        "person_niconico_channels_aggregate_order_by"
    ] = None
    person_niconico_communities_aggregate: Optional[
        "person_niconico_communities_aggregate_order_by"
    ] = None
    person_niconico_plus_channels_aggregate: Optional[
        "person_niconico_plus_channels_aggregate_order_by"
    ] = None
    person_twitter_accounts_aggregate: Optional[
        "person_twitter_accounts_aggregate_order_by"
    ] = None
    person_youtube_channels_aggregate: Optional[
        "person_youtube_channels_aggregate_order_by"
    ] = None
    program_persons_aggregate: Optional["program_persons_aggregate_order_by"] = None
    updated_at: Optional[order_by] = None


class persons_stream_cursor_input(BaseModel):
    initial_value: "persons_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class persons_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    updated_at: Optional[Any] = None


class program_amongus_maps_aggregate_bool_exp(BaseModel):
    count: Optional["program_amongus_maps_aggregate_bool_exp_count"] = None


class program_amongus_maps_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[program_amongus_maps_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["program_amongus_maps_bool_exp"] = None
    predicate: "Int_comparison_exp"


class program_amongus_maps_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["program_amongus_maps_max_order_by"] = None
    min: Optional["program_amongus_maps_min_order_by"] = None


class program_amongus_maps_bool_exp(BaseModel):
    and_: Optional[List["program_amongus_maps_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["program_amongus_maps_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["program_amongus_maps_bool_exp"]] = Field(
        alias="_or", default=None
    )
    amongus_map: Optional["amongus_maps_bool_exp"] = None
    amongus_map_id: Optional["uuid_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    program: Optional["programs_bool_exp"] = None
    program_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class program_amongus_maps_max_order_by(BaseModel):
    amongus_map_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    program_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class program_amongus_maps_min_order_by(BaseModel):
    amongus_map_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    program_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class program_amongus_maps_order_by(BaseModel):
    amongus_map: Optional["amongus_maps_order_by"] = None
    amongus_map_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    program: Optional["programs_order_by"] = None
    program_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class program_amongus_maps_stream_cursor_input(BaseModel):
    initial_value: "program_amongus_maps_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class program_amongus_maps_stream_cursor_value_input(BaseModel):
    amongus_map_id: Optional[Any] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    program_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class program_amongus_mods_aggregate_bool_exp(BaseModel):
    count: Optional["program_amongus_mods_aggregate_bool_exp_count"] = None


class program_amongus_mods_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[program_amongus_mods_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["program_amongus_mods_bool_exp"] = None
    predicate: "Int_comparison_exp"


class program_amongus_mods_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["program_amongus_mods_max_order_by"] = None
    min: Optional["program_amongus_mods_min_order_by"] = None


class program_amongus_mods_bool_exp(BaseModel):
    and_: Optional[List["program_amongus_mods_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["program_amongus_mods_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["program_amongus_mods_bool_exp"]] = Field(
        alias="_or", default=None
    )
    amongus_mod: Optional["amongus_mods_bool_exp"] = None
    amongus_mod_id: Optional["uuid_comparison_exp"] = None
    amongus_mod_version: Optional["amongus_mod_versions_bool_exp"] = None
    amongus_mod_version_id: Optional["uuid_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    program: Optional["programs_bool_exp"] = None
    program_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class program_amongus_mods_max_order_by(BaseModel):
    amongus_mod_id: Optional[order_by] = None
    amongus_mod_version_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    program_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class program_amongus_mods_min_order_by(BaseModel):
    amongus_mod_id: Optional[order_by] = None
    amongus_mod_version_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    program_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class program_amongus_mods_order_by(BaseModel):
    amongus_mod: Optional["amongus_mods_order_by"] = None
    amongus_mod_id: Optional[order_by] = None
    amongus_mod_version: Optional["amongus_mod_versions_order_by"] = None
    amongus_mod_version_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    program: Optional["programs_order_by"] = None
    program_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class program_amongus_mods_stream_cursor_input(BaseModel):
    initial_value: "program_amongus_mods_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class program_amongus_mods_stream_cursor_value_input(BaseModel):
    amongus_mod_id: Optional[Any] = None
    amongus_mod_version_id: Optional[Any] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    program_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class program_amongus_vanilla_versions_aggregate_bool_exp(BaseModel):
    count: Optional["program_amongus_vanilla_versions_aggregate_bool_exp_count"] = None


class program_amongus_vanilla_versions_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[program_amongus_vanilla_versions_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["program_amongus_vanilla_versions_bool_exp"] = None
    predicate: "Int_comparison_exp"


class program_amongus_vanilla_versions_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["program_amongus_vanilla_versions_max_order_by"] = None
    min: Optional["program_amongus_vanilla_versions_min_order_by"] = None


class program_amongus_vanilla_versions_bool_exp(BaseModel):
    and_: Optional[List["program_amongus_vanilla_versions_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["program_amongus_vanilla_versions_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["program_amongus_vanilla_versions_bool_exp"]] = Field(
        alias="_or", default=None
    )
    amongus_vanilla_version_id: Optional["uuid_comparison_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    program: Optional["programs_bool_exp"] = None
    program_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class program_amongus_vanilla_versions_max_order_by(BaseModel):
    amongus_vanilla_version_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    program_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class program_amongus_vanilla_versions_min_order_by(BaseModel):
    amongus_vanilla_version_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    program_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class program_amongus_vanilla_versions_order_by(BaseModel):
    amongus_vanilla_version_id: Optional[order_by] = None
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    program: Optional["programs_order_by"] = None
    program_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class program_amongus_vanilla_versions_stream_cursor_input(BaseModel):
    initial_value: "program_amongus_vanilla_versions_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class program_amongus_vanilla_versions_stream_cursor_value_input(BaseModel):
    amongus_vanilla_version_id: Optional[Any] = None
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    program_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class program_live_archives_aggregate_bool_exp(BaseModel):
    count: Optional["program_live_archives_aggregate_bool_exp_count"] = None


class program_live_archives_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[program_live_archives_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["program_live_archives_bool_exp"] = None
    predicate: "Int_comparison_exp"


class program_live_archives_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["program_live_archives_max_order_by"] = None
    min: Optional["program_live_archives_min_order_by"] = None


class program_live_archives_bool_exp(BaseModel):
    and_: Optional[List["program_live_archives_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["program_live_archives_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["program_live_archives_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    end_time: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    person: Optional["persons_bool_exp"] = None
    person_id: Optional["uuid_comparison_exp"] = None
    program: Optional["programs_bool_exp"] = None
    program_id: Optional["uuid_comparison_exp"] = None
    start_time: Optional["timestamptz_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    youtube_live: Optional["youtube_lives_bool_exp"] = None
    youtube_live_id: Optional["uuid_comparison_exp"] = None
    youtube_video: Optional["youtube_videos_bool_exp"] = None
    youtube_video_id: Optional["uuid_comparison_exp"] = None


class program_live_archives_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    program_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    youtube_live_id: Optional[order_by] = None
    youtube_video_id: Optional[order_by] = None


class program_live_archives_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    program_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    youtube_live_id: Optional[order_by] = None
    youtube_video_id: Optional[order_by] = None


class program_live_archives_order_by(BaseModel):
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    person: Optional["persons_order_by"] = None
    person_id: Optional[order_by] = None
    program: Optional["programs_order_by"] = None
    program_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    youtube_live: Optional["youtube_lives_order_by"] = None
    youtube_live_id: Optional[order_by] = None
    youtube_video: Optional["youtube_videos_order_by"] = None
    youtube_video_id: Optional[order_by] = None


class program_live_archives_stream_cursor_input(BaseModel):
    initial_value: "program_live_archives_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class program_live_archives_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    end_time: Optional[Any] = None
    id: Optional[Any] = None
    person_id: Optional[Any] = None
    program_id: Optional[Any] = None
    start_time: Optional[Any] = None
    updated_at: Optional[Any] = None
    youtube_live_id: Optional[Any] = None
    youtube_video_id: Optional[Any] = None


class program_niconico_videos_aggregate_bool_exp(BaseModel):
    count: Optional["program_niconico_videos_aggregate_bool_exp_count"] = None


class program_niconico_videos_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[program_niconico_videos_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["program_niconico_videos_bool_exp"] = None
    predicate: "Int_comparison_exp"


class program_niconico_videos_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["program_niconico_videos_max_order_by"] = None
    min: Optional["program_niconico_videos_min_order_by"] = None


class program_niconico_videos_bool_exp(BaseModel):
    and_: Optional[List["program_niconico_videos_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["program_niconico_videos_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["program_niconico_videos_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    niconico_video: Optional["niconico_videos_bool_exp"] = None
    niconico_video_id: Optional["uuid_comparison_exp"] = None
    person: Optional["persons_bool_exp"] = None
    person_id: Optional["uuid_comparison_exp"] = None
    program: Optional["programs_bool_exp"] = None
    program_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class program_niconico_videos_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    niconico_video_id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    program_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class program_niconico_videos_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    niconico_video_id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    program_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class program_niconico_videos_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    niconico_video: Optional["niconico_videos_order_by"] = None
    niconico_video_id: Optional[order_by] = None
    person: Optional["persons_order_by"] = None
    person_id: Optional[order_by] = None
    program: Optional["programs_order_by"] = None
    program_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class program_niconico_videos_stream_cursor_input(BaseModel):
    initial_value: "program_niconico_videos_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class program_niconico_videos_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    niconico_video_id: Optional[Any] = None
    person_id: Optional[Any] = None
    program_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class program_persons_aggregate_bool_exp(BaseModel):
    bool_and: Optional["program_persons_aggregate_bool_exp_bool_and"] = None
    bool_or: Optional["program_persons_aggregate_bool_exp_bool_or"] = None
    count: Optional["program_persons_aggregate_bool_exp_count"] = None


class program_persons_aggregate_bool_exp_bool_and(BaseModel):
    arguments: program_persons_select_column_program_persons_aggregate_bool_exp_bool_and_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["program_persons_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class program_persons_aggregate_bool_exp_bool_or(BaseModel):
    arguments: program_persons_select_column_program_persons_aggregate_bool_exp_bool_or_arguments_columns
    distinct: Optional[bool] = None
    filter: Optional["program_persons_bool_exp"] = None
    predicate: "Boolean_comparison_exp"


class program_persons_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[program_persons_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["program_persons_bool_exp"] = None
    predicate: "Int_comparison_exp"


class program_persons_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["program_persons_max_order_by"] = None
    min: Optional["program_persons_min_order_by"] = None


class program_persons_bool_exp(BaseModel):
    and_: Optional[List["program_persons_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["program_persons_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["program_persons_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    is_absent: Optional["Boolean_comparison_exp"] = None
    person: Optional["persons_bool_exp"] = None
    person_id: Optional["uuid_comparison_exp"] = None
    program: Optional["programs_bool_exp"] = None
    program_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class program_persons_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    program_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class program_persons_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    program_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class program_persons_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    is_absent: Optional[order_by] = None
    person: Optional["persons_order_by"] = None
    person_id: Optional[order_by] = None
    program: Optional["programs_order_by"] = None
    program_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class program_persons_stream_cursor_input(BaseModel):
    initial_value: "program_persons_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class program_persons_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    is_absent: Optional[bool] = None
    person_id: Optional[Any] = None
    program_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class program_projects_aggregate_bool_exp(BaseModel):
    count: Optional["program_projects_aggregate_bool_exp_count"] = None


class program_projects_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[program_projects_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["program_projects_bool_exp"] = None
    predicate: "Int_comparison_exp"


class program_projects_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["program_projects_max_order_by"] = None
    min: Optional["program_projects_min_order_by"] = None


class program_projects_bool_exp(BaseModel):
    and_: Optional[List["program_projects_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["program_projects_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["program_projects_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    program: Optional["programs_bool_exp"] = None
    program_id: Optional["uuid_comparison_exp"] = None
    project: Optional["projects_bool_exp"] = None
    project_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class program_projects_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    program_id: Optional[order_by] = None
    project_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class program_projects_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    program_id: Optional[order_by] = None
    project_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class program_projects_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    program: Optional["programs_order_by"] = None
    program_id: Optional[order_by] = None
    project: Optional["projects_order_by"] = None
    project_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class program_projects_stream_cursor_input(BaseModel):
    initial_value: "program_projects_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class program_projects_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    program_id: Optional[Any] = None
    project_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class program_twitter_announcements_aggregate_bool_exp(BaseModel):
    count: Optional["program_twitter_announcements_aggregate_bool_exp_count"] = None


class program_twitter_announcements_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[program_twitter_announcements_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["program_twitter_announcements_bool_exp"] = None
    predicate: "Int_comparison_exp"


class program_twitter_announcements_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["program_twitter_announcements_max_order_by"] = None
    min: Optional["program_twitter_announcements_min_order_by"] = None


class program_twitter_announcements_bool_exp(BaseModel):
    and_: Optional[List["program_twitter_announcements_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["program_twitter_announcements_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["program_twitter_announcements_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    person: Optional["persons_bool_exp"] = None
    person_id: Optional["uuid_comparison_exp"] = None
    program: Optional["programs_bool_exp"] = None
    program_id: Optional["uuid_comparison_exp"] = None
    twitter_tweet: Optional["twitter_tweets_bool_exp"] = None
    twitter_tweet_id: Optional["uuid_comparison_exp"] = None
    twitter_tweet_image: Optional["twitter_tweet_images_bool_exp"] = None
    twitter_tweet_image_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class program_twitter_announcements_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    program_id: Optional[order_by] = None
    twitter_tweet_id: Optional[order_by] = None
    twitter_tweet_image_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class program_twitter_announcements_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    person_id: Optional[order_by] = None
    program_id: Optional[order_by] = None
    twitter_tweet_id: Optional[order_by] = None
    twitter_tweet_image_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class program_twitter_announcements_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    person: Optional["persons_order_by"] = None
    person_id: Optional[order_by] = None
    program: Optional["programs_order_by"] = None
    program_id: Optional[order_by] = None
    twitter_tweet: Optional["twitter_tweets_order_by"] = None
    twitter_tweet_id: Optional[order_by] = None
    twitter_tweet_image: Optional["twitter_tweet_images_order_by"] = None
    twitter_tweet_image_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class program_twitter_announcements_stream_cursor_input(BaseModel):
    initial_value: "program_twitter_announcements_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class program_twitter_announcements_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    person_id: Optional[Any] = None
    program_id: Optional[Any] = None
    twitter_tweet_id: Optional[Any] = None
    twitter_tweet_image_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class programs_bool_exp(BaseModel):
    and_: Optional[List["programs_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["programs_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["programs_bool_exp"]] = Field(alias="_or", default=None)
    amongus_matches: Optional["amongus_matches_bool_exp"] = None
    amongus_matches_aggregate: Optional["amongus_matches_aggregate_bool_exp"] = None
    amongusvr_matches: Optional["amongusvr_matches_bool_exp"] = None
    amongusvr_matches_aggregate: Optional["amongusvr_matches_aggregate_bool_exp"] = None
    created_at: Optional["timestamptz_comparison_exp"] = None
    end_time: Optional["timestamptz_comparison_exp"] = None
    fallguys_matches: Optional["fallguys_matches_bool_exp"] = None
    fallguys_matches_aggregate: Optional["fallguys_matches_aggregate_bool_exp"] = None
    game: Optional["games_bool_exp"] = None
    game_id: Optional["uuid_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    mariokart8deluxe_battle_matches: Optional[
        "mariokart8deluxe_battle_matches_bool_exp"
    ] = None
    mariokart8deluxe_battle_matches_aggregate: Optional[
        "mariokart8deluxe_battle_matches_aggregate_bool_exp"
    ] = None
    mariokart8deluxe_races: Optional["mariokart8deluxe_races_bool_exp"] = None
    mariokart8deluxe_races_aggregate: Optional[
        "mariokart8deluxe_races_aggregate_bool_exp"
    ] = None
    program_amongus_maps: Optional["program_amongus_maps_bool_exp"] = None
    program_amongus_maps_aggregate: Optional[
        "program_amongus_maps_aggregate_bool_exp"
    ] = None
    program_amongus_mods: Optional["program_amongus_mods_bool_exp"] = None
    program_amongus_mods_aggregate: Optional[
        "program_amongus_mods_aggregate_bool_exp"
    ] = None
    program_amongus_vanilla_versions: Optional[
        "program_amongus_vanilla_versions_bool_exp"
    ] = None
    program_amongus_vanilla_versions_aggregate: Optional[
        "program_amongus_vanilla_versions_aggregate_bool_exp"
    ] = None
    program_live_archives: Optional["program_live_archives_bool_exp"] = None
    program_live_archives_aggregate: Optional[
        "program_live_archives_aggregate_bool_exp"
    ] = None
    program_niconico_videos: Optional["program_niconico_videos_bool_exp"] = None
    program_niconico_videos_aggregate: Optional[
        "program_niconico_videos_aggregate_bool_exp"
    ] = None
    program_persons: Optional["program_persons_bool_exp"] = None
    program_persons_aggregate: Optional["program_persons_aggregate_bool_exp"] = None
    program_projects: Optional["program_projects_bool_exp"] = None
    program_projects_aggregate: Optional["program_projects_aggregate_bool_exp"] = None
    program_twitter_announcements: Optional[
        "program_twitter_announcements_bool_exp"
    ] = None
    program_twitter_announcements_aggregate: Optional[
        "program_twitter_announcements_aggregate_bool_exp"
    ] = None
    start_time: Optional["timestamptz_comparison_exp"] = None
    title: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class programs_order_by(BaseModel):
    amongus_matches_aggregate: Optional["amongus_matches_aggregate_order_by"] = None
    amongusvr_matches_aggregate: Optional["amongusvr_matches_aggregate_order_by"] = None
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    fallguys_matches_aggregate: Optional["fallguys_matches_aggregate_order_by"] = None
    game: Optional["games_order_by"] = None
    game_id: Optional[order_by] = None
    id: Optional[order_by] = None
    mariokart8deluxe_battle_matches_aggregate: Optional[
        "mariokart8deluxe_battle_matches_aggregate_order_by"
    ] = None
    mariokart8deluxe_races_aggregate: Optional[
        "mariokart8deluxe_races_aggregate_order_by"
    ] = None
    program_amongus_maps_aggregate: Optional[
        "program_amongus_maps_aggregate_order_by"
    ] = None
    program_amongus_mods_aggregate: Optional[
        "program_amongus_mods_aggregate_order_by"
    ] = None
    program_amongus_vanilla_versions_aggregate: Optional[
        "program_amongus_vanilla_versions_aggregate_order_by"
    ] = None
    program_live_archives_aggregate: Optional[
        "program_live_archives_aggregate_order_by"
    ] = None
    program_niconico_videos_aggregate: Optional[
        "program_niconico_videos_aggregate_order_by"
    ] = None
    program_persons_aggregate: Optional["program_persons_aggregate_order_by"] = None
    program_projects_aggregate: Optional["program_projects_aggregate_order_by"] = None
    program_twitter_announcements_aggregate: Optional[
        "program_twitter_announcements_aggregate_order_by"
    ] = None
    start_time: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class programs_stream_cursor_input(BaseModel):
    initial_value: "programs_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class programs_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    end_time: Optional[Any] = None
    game_id: Optional[Any] = None
    id: Optional[Any] = None
    start_time: Optional[Any] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None


class project_niconico_videos_aggregate_bool_exp(BaseModel):
    count: Optional["project_niconico_videos_aggregate_bool_exp_count"] = None


class project_niconico_videos_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[project_niconico_videos_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["project_niconico_videos_bool_exp"] = None
    predicate: "Int_comparison_exp"


class project_niconico_videos_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["project_niconico_videos_max_order_by"] = None
    min: Optional["project_niconico_videos_min_order_by"] = None


class project_niconico_videos_bool_exp(BaseModel):
    and_: Optional[List["project_niconico_videos_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["project_niconico_videos_bool_exp"] = Field(
        alias="_not", default=None
    )
    or_: Optional[List["project_niconico_videos_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    niconico_video_id: Optional["uuid_comparison_exp"] = None
    project_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class project_niconico_videos_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    niconico_video_id: Optional[order_by] = None
    project_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class project_niconico_videos_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    niconico_video_id: Optional[order_by] = None
    project_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class project_niconico_videos_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    niconico_video_id: Optional[order_by] = None
    project_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class project_niconico_videos_stream_cursor_input(BaseModel):
    initial_value: "project_niconico_videos_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class project_niconico_videos_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    niconico_video_id: Optional[Any] = None
    project_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class projects_bool_exp(BaseModel):
    and_: Optional[List["projects_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["projects_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["projects_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    program_projects: Optional["program_projects_bool_exp"] = None
    program_projects_aggregate: Optional["program_projects_aggregate_bool_exp"] = None
    start_time: Optional["timestamptz_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class projects_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    program_projects_aggregate: Optional["program_projects_aggregate_order_by"] = None
    start_time: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class projects_stream_cursor_input(BaseModel):
    initial_value: "projects_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class projects_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    start_time: Optional[Any] = None
    updated_at: Optional[Any] = None


class timestamptz_comparison_exp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


class twitter_accounts_bool_exp(BaseModel):
    and_: Optional[List["twitter_accounts_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["twitter_accounts_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["twitter_accounts_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    remote_twitter_user_id: Optional["String_comparison_exp"] = None
    twitter_screen_name: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class twitter_accounts_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    remote_twitter_user_id: Optional[order_by] = None
    twitter_screen_name: Optional[order_by] = None
    updated_at: Optional[order_by] = None


class twitter_accounts_stream_cursor_input(BaseModel):
    initial_value: "twitter_accounts_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class twitter_accounts_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    remote_twitter_user_id: Optional[str] = None
    twitter_screen_name: Optional[str] = None
    updated_at: Optional[Any] = None


class twitter_tweet_images_aggregate_bool_exp(BaseModel):
    count: Optional["twitter_tweet_images_aggregate_bool_exp_count"] = None


class twitter_tweet_images_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[twitter_tweet_images_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["twitter_tweet_images_bool_exp"] = None
    predicate: "Int_comparison_exp"


class twitter_tweet_images_aggregate_order_by(BaseModel):
    avg: Optional["twitter_tweet_images_avg_order_by"] = None
    count: Optional[order_by] = None
    max: Optional["twitter_tweet_images_max_order_by"] = None
    min: Optional["twitter_tweet_images_min_order_by"] = None
    stddev: Optional["twitter_tweet_images_stddev_order_by"] = None
    stddev_pop: Optional["twitter_tweet_images_stddev_pop_order_by"] = None
    stddev_samp: Optional["twitter_tweet_images_stddev_samp_order_by"] = None
    sum: Optional["twitter_tweet_images_sum_order_by"] = None
    var_pop: Optional["twitter_tweet_images_var_pop_order_by"] = None
    var_samp: Optional["twitter_tweet_images_var_samp_order_by"] = None
    variance: Optional["twitter_tweet_images_variance_order_by"] = None


class twitter_tweet_images_avg_order_by(BaseModel):
    index: Optional[order_by] = None


class twitter_tweet_images_bool_exp(BaseModel):
    and_: Optional[List["twitter_tweet_images_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["twitter_tweet_images_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["twitter_tweet_images_bool_exp"]] = Field(
        alias="_or", default=None
    )
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    index: Optional["Int_comparison_exp"] = None
    twitter_tweet_id: Optional["uuid_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    url: Optional["String_comparison_exp"] = None


class twitter_tweet_images_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    twitter_tweet_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    url: Optional[order_by] = None


class twitter_tweet_images_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    twitter_tweet_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    url: Optional[order_by] = None


class twitter_tweet_images_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    index: Optional[order_by] = None
    twitter_tweet_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    url: Optional[order_by] = None


class twitter_tweet_images_stddev_order_by(BaseModel):
    index: Optional[order_by] = None


class twitter_tweet_images_stddev_pop_order_by(BaseModel):
    index: Optional[order_by] = None


class twitter_tweet_images_stddev_samp_order_by(BaseModel):
    index: Optional[order_by] = None


class twitter_tweet_images_stream_cursor_input(BaseModel):
    initial_value: "twitter_tweet_images_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class twitter_tweet_images_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    index: Optional[int] = None
    twitter_tweet_id: Optional[Any] = None
    updated_at: Optional[Any] = None
    url: Optional[str] = None


class twitter_tweet_images_sum_order_by(BaseModel):
    index: Optional[order_by] = None


class twitter_tweet_images_var_pop_order_by(BaseModel):
    index: Optional[order_by] = None


class twitter_tweet_images_var_samp_order_by(BaseModel):
    index: Optional[order_by] = None


class twitter_tweet_images_variance_order_by(BaseModel):
    index: Optional[order_by] = None


class twitter_tweets_bool_exp(BaseModel):
    and_: Optional[List["twitter_tweets_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["twitter_tweets_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["twitter_tweets_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    remote_tweet_id: Optional["String_comparison_exp"] = None
    tweet_embed_html: Optional["String_comparison_exp"] = None
    tweet_time: Optional["timestamptz_comparison_exp"] = None
    twitter_account: Optional["twitter_accounts_bool_exp"] = None
    twitter_account_id: Optional["uuid_comparison_exp"] = None
    twitter_tweet_images: Optional["twitter_tweet_images_bool_exp"] = None
    twitter_tweet_images_aggregate: Optional[
        "twitter_tweet_images_aggregate_bool_exp"
    ] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None


class twitter_tweets_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    remote_tweet_id: Optional[order_by] = None
    tweet_embed_html: Optional[order_by] = None
    tweet_time: Optional[order_by] = None
    twitter_account: Optional["twitter_accounts_order_by"] = None
    twitter_account_id: Optional[order_by] = None
    twitter_tweet_images_aggregate: Optional[
        "twitter_tweet_images_aggregate_order_by"
    ] = None
    updated_at: Optional[order_by] = None


class twitter_tweets_stream_cursor_input(BaseModel):
    initial_value: "twitter_tweets_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class twitter_tweets_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    remote_tweet_id: Optional[str] = None
    tweet_embed_html: Optional[str] = None
    tweet_time: Optional[Any] = None
    twitter_account_id: Optional[Any] = None
    updated_at: Optional[Any] = None


class uuid_comparison_exp(BaseModel):
    eq: Optional[Any] = Field(alias="_eq", default=None)
    gt: Optional[Any] = Field(alias="_gt", default=None)
    gte: Optional[Any] = Field(alias="_gte", default=None)
    in_: Optional[List[Any]] = Field(alias="_in", default=None)
    is_null: Optional[bool] = Field(alias="_is_null", default=None)
    lt: Optional[Any] = Field(alias="_lt", default=None)
    lte: Optional[Any] = Field(alias="_lte", default=None)
    neq: Optional[Any] = Field(alias="_neq", default=None)
    nin: Optional[List[Any]] = Field(alias="_nin", default=None)


class youtube_channels_bool_exp(BaseModel):
    and_: Optional[List["youtube_channels_bool_exp"]] = Field(
        alias="_and", default=None
    )
    not_: Optional["youtube_channels_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["youtube_channels_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    name: Optional["String_comparison_exp"] = None
    person_youtube_channels: Optional["person_youtube_channels_bool_exp"] = None
    person_youtube_channels_aggregate: Optional[
        "person_youtube_channels_aggregate_bool_exp"
    ] = None
    remote_youtube_channel_id: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    youtube_channel_handle: Optional["String_comparison_exp"] = None
    youtube_lives: Optional["youtube_lives_bool_exp"] = None
    youtube_lives_aggregate: Optional["youtube_lives_aggregate_bool_exp"] = None


class youtube_channels_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    name: Optional[order_by] = None
    person_youtube_channels_aggregate: Optional[
        "person_youtube_channels_aggregate_order_by"
    ] = None
    remote_youtube_channel_id: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    youtube_channel_handle: Optional[order_by] = None
    youtube_lives_aggregate: Optional["youtube_lives_aggregate_order_by"] = None


class youtube_channels_stream_cursor_input(BaseModel):
    initial_value: "youtube_channels_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class youtube_channels_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    name: Optional[str] = None
    remote_youtube_channel_id: Optional[str] = None
    updated_at: Optional[Any] = None
    youtube_channel_handle: Optional[str] = None


class youtube_lives_aggregate_bool_exp(BaseModel):
    count: Optional["youtube_lives_aggregate_bool_exp_count"] = None


class youtube_lives_aggregate_bool_exp_count(BaseModel):
    arguments: Optional[List[youtube_lives_select_column]] = None
    distinct: Optional[bool] = None
    filter: Optional["youtube_lives_bool_exp"] = None
    predicate: "Int_comparison_exp"


class youtube_lives_aggregate_order_by(BaseModel):
    count: Optional[order_by] = None
    max: Optional["youtube_lives_max_order_by"] = None
    min: Optional["youtube_lives_min_order_by"] = None


class youtube_lives_bool_exp(BaseModel):
    and_: Optional[List["youtube_lives_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["youtube_lives_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["youtube_lives_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    end_time: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    remote_youtube_video_id: Optional["String_comparison_exp"] = None
    start_time: Optional["timestamptz_comparison_exp"] = None
    title: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    youtube_channel: Optional["youtube_channels_bool_exp"] = None
    youtube_channel_id: Optional["uuid_comparison_exp"] = None


class youtube_lives_max_order_by(BaseModel):
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    remote_youtube_video_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    youtube_channel_id: Optional[order_by] = None


class youtube_lives_min_order_by(BaseModel):
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    remote_youtube_video_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    youtube_channel_id: Optional[order_by] = None


class youtube_lives_order_by(BaseModel):
    created_at: Optional[order_by] = None
    end_time: Optional[order_by] = None
    id: Optional[order_by] = None
    remote_youtube_video_id: Optional[order_by] = None
    start_time: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    youtube_channel: Optional["youtube_channels_order_by"] = None
    youtube_channel_id: Optional[order_by] = None


class youtube_lives_stream_cursor_input(BaseModel):
    initial_value: "youtube_lives_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class youtube_lives_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    end_time: Optional[Any] = None
    id: Optional[Any] = None
    remote_youtube_video_id: Optional[str] = None
    start_time: Optional[Any] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None
    youtube_channel_id: Optional[Any] = None


class youtube_videos_bool_exp(BaseModel):
    and_: Optional[List["youtube_videos_bool_exp"]] = Field(alias="_and", default=None)
    not_: Optional["youtube_videos_bool_exp"] = Field(alias="_not", default=None)
    or_: Optional[List["youtube_videos_bool_exp"]] = Field(alias="_or", default=None)
    created_at: Optional["timestamptz_comparison_exp"] = None
    id: Optional["uuid_comparison_exp"] = None
    is_premiere: Optional["Boolean_comparison_exp"] = None
    post_time: Optional["timestamptz_comparison_exp"] = None
    program_live_archives: Optional["program_live_archives_bool_exp"] = None
    program_live_archives_aggregate: Optional[
        "program_live_archives_aggregate_bool_exp"
    ] = None
    remote_youtube_video_id: Optional["String_comparison_exp"] = None
    title: Optional["String_comparison_exp"] = None
    updated_at: Optional["timestamptz_comparison_exp"] = None
    youtube_channel: Optional["youtube_channels_bool_exp"] = None
    youtube_channel_id: Optional["uuid_comparison_exp"] = None


class youtube_videos_order_by(BaseModel):
    created_at: Optional[order_by] = None
    id: Optional[order_by] = None
    is_premiere: Optional[order_by] = None
    post_time: Optional[order_by] = None
    program_live_archives_aggregate: Optional[
        "program_live_archives_aggregate_order_by"
    ] = None
    remote_youtube_video_id: Optional[order_by] = None
    title: Optional[order_by] = None
    updated_at: Optional[order_by] = None
    youtube_channel: Optional["youtube_channels_order_by"] = None
    youtube_channel_id: Optional[order_by] = None


class youtube_videos_stream_cursor_input(BaseModel):
    initial_value: "youtube_videos_stream_cursor_value_input"
    ordering: Optional[cursor_ordering] = None


class youtube_videos_stream_cursor_value_input(BaseModel):
    created_at: Optional[Any] = None
    id: Optional[Any] = None
    is_premiere: Optional[bool] = None
    post_time: Optional[Any] = None
    remote_youtube_video_id: Optional[str] = None
    title: Optional[str] = None
    updated_at: Optional[Any] = None
    youtube_channel_id: Optional[Any] = None


Boolean_comparison_exp.model_rebuild()
Int_comparison_exp.model_rebuild()
String_comparison_exp.model_rebuild()
amongus_maps_aggregate_bool_exp.model_rebuild()
amongus_maps_aggregate_bool_exp_bool_and.model_rebuild()
amongus_maps_aggregate_bool_exp_bool_or.model_rebuild()
amongus_maps_aggregate_bool_exp_count.model_rebuild()
amongus_maps_aggregate_order_by.model_rebuild()
amongus_maps_bool_exp.model_rebuild()
amongus_maps_max_order_by.model_rebuild()
amongus_maps_min_order_by.model_rebuild()
amongus_maps_order_by.model_rebuild()
amongus_maps_stream_cursor_input.model_rebuild()
amongus_maps_stream_cursor_value_input.model_rebuild()
amongus_match_mods_bool_exp.model_rebuild()
amongus_match_mods_order_by.model_rebuild()
amongus_match_mods_stream_cursor_input.model_rebuild()
amongus_match_mods_stream_cursor_value_input.model_rebuild()
amongus_match_player_result_roles_aggregate_bool_exp.model_rebuild()
amongus_match_player_result_roles_aggregate_bool_exp_count.model_rebuild()
amongus_match_player_result_roles_aggregate_order_by.model_rebuild()
amongus_match_player_result_roles_avg_order_by.model_rebuild()
amongus_match_player_result_roles_bool_exp.model_rebuild()
amongus_match_player_result_roles_max_order_by.model_rebuild()
amongus_match_player_result_roles_min_order_by.model_rebuild()
amongus_match_player_result_roles_order_by.model_rebuild()
amongus_match_player_result_roles_stddev_order_by.model_rebuild()
amongus_match_player_result_roles_stddev_pop_order_by.model_rebuild()
amongus_match_player_result_roles_stddev_samp_order_by.model_rebuild()
amongus_match_player_result_roles_stream_cursor_input.model_rebuild()
amongus_match_player_result_roles_stream_cursor_value_input.model_rebuild()
amongus_match_player_result_roles_sum_order_by.model_rebuild()
amongus_match_player_result_roles_var_pop_order_by.model_rebuild()
amongus_match_player_result_roles_var_samp_order_by.model_rebuild()
amongus_match_player_result_roles_variance_order_by.model_rebuild()
amongus_match_players_aggregate_bool_exp.model_rebuild()
amongus_match_players_aggregate_bool_exp_count.model_rebuild()
amongus_match_players_aggregate_order_by.model_rebuild()
amongus_match_players_bool_exp.model_rebuild()
amongus_match_players_max_order_by.model_rebuild()
amongus_match_players_min_order_by.model_rebuild()
amongus_match_players_order_by.model_rebuild()
amongus_match_players_stream_cursor_input.model_rebuild()
amongus_match_players_stream_cursor_value_input.model_rebuild()
amongus_matches_aggregate_bool_exp.model_rebuild()
amongus_matches_aggregate_bool_exp_bool_and.model_rebuild()
amongus_matches_aggregate_bool_exp_bool_or.model_rebuild()
amongus_matches_aggregate_bool_exp_count.model_rebuild()
amongus_matches_aggregate_order_by.model_rebuild()
amongus_matches_avg_order_by.model_rebuild()
amongus_matches_bool_exp.model_rebuild()
amongus_matches_max_order_by.model_rebuild()
amongus_matches_min_order_by.model_rebuild()
amongus_matches_order_by.model_rebuild()
amongus_matches_stddev_order_by.model_rebuild()
amongus_matches_stddev_pop_order_by.model_rebuild()
amongus_matches_stddev_samp_order_by.model_rebuild()
amongus_matches_stream_cursor_input.model_rebuild()
amongus_matches_stream_cursor_value_input.model_rebuild()
amongus_matches_sum_order_by.model_rebuild()
amongus_matches_var_pop_order_by.model_rebuild()
amongus_matches_var_samp_order_by.model_rebuild()
amongus_matches_variance_order_by.model_rebuild()
amongus_mod_versions_aggregate_bool_exp.model_rebuild()
amongus_mod_versions_aggregate_bool_exp_count.model_rebuild()
amongus_mod_versions_aggregate_order_by.model_rebuild()
amongus_mod_versions_bool_exp.model_rebuild()
amongus_mod_versions_max_order_by.model_rebuild()
amongus_mod_versions_min_order_by.model_rebuild()
amongus_mod_versions_order_by.model_rebuild()
amongus_mod_versions_stream_cursor_input.model_rebuild()
amongus_mod_versions_stream_cursor_value_input.model_rebuild()
amongus_mods_bool_exp.model_rebuild()
amongus_mods_order_by.model_rebuild()
amongus_mods_stream_cursor_input.model_rebuild()
amongus_mods_stream_cursor_value_input.model_rebuild()
amongus_roles_aggregate_bool_exp.model_rebuild()
amongus_roles_aggregate_bool_exp_bool_and.model_rebuild()
amongus_roles_aggregate_bool_exp_bool_or.model_rebuild()
amongus_roles_aggregate_bool_exp_count.model_rebuild()
amongus_roles_aggregate_order_by.model_rebuild()
amongus_roles_avg_order_by.model_rebuild()
amongus_roles_bool_exp.model_rebuild()
amongus_roles_max_order_by.model_rebuild()
amongus_roles_min_order_by.model_rebuild()
amongus_roles_order_by.model_rebuild()
amongus_roles_stddev_order_by.model_rebuild()
amongus_roles_stddev_pop_order_by.model_rebuild()
amongus_roles_stddev_samp_order_by.model_rebuild()
amongus_roles_stream_cursor_input.model_rebuild()
amongus_roles_stream_cursor_value_input.model_rebuild()
amongus_roles_sum_order_by.model_rebuild()
amongus_roles_var_pop_order_by.model_rebuild()
amongus_roles_var_samp_order_by.model_rebuild()
amongus_roles_variance_order_by.model_rebuild()
amongusvr_maps_bool_exp.model_rebuild()
amongusvr_maps_order_by.model_rebuild()
amongusvr_maps_stream_cursor_input.model_rebuild()
amongusvr_maps_stream_cursor_value_input.model_rebuild()
amongusvr_match_players_aggregate_bool_exp.model_rebuild()
amongusvr_match_players_aggregate_bool_exp_count.model_rebuild()
amongusvr_match_players_aggregate_order_by.model_rebuild()
amongusvr_match_players_bool_exp.model_rebuild()
amongusvr_match_players_max_order_by.model_rebuild()
amongusvr_match_players_min_order_by.model_rebuild()
amongusvr_match_players_order_by.model_rebuild()
amongusvr_match_players_stream_cursor_input.model_rebuild()
amongusvr_match_players_stream_cursor_value_input.model_rebuild()
amongusvr_matches_aggregate_bool_exp.model_rebuild()
amongusvr_matches_aggregate_bool_exp_bool_and.model_rebuild()
amongusvr_matches_aggregate_bool_exp_bool_or.model_rebuild()
amongusvr_matches_aggregate_bool_exp_count.model_rebuild()
amongusvr_matches_aggregate_order_by.model_rebuild()
amongusvr_matches_avg_order_by.model_rebuild()
amongusvr_matches_bool_exp.model_rebuild()
amongusvr_matches_max_order_by.model_rebuild()
amongusvr_matches_min_order_by.model_rebuild()
amongusvr_matches_order_by.model_rebuild()
amongusvr_matches_stddev_order_by.model_rebuild()
amongusvr_matches_stddev_pop_order_by.model_rebuild()
amongusvr_matches_stddev_samp_order_by.model_rebuild()
amongusvr_matches_stream_cursor_input.model_rebuild()
amongusvr_matches_stream_cursor_value_input.model_rebuild()
amongusvr_matches_sum_order_by.model_rebuild()
amongusvr_matches_var_pop_order_by.model_rebuild()
amongusvr_matches_var_samp_order_by.model_rebuild()
amongusvr_matches_variance_order_by.model_rebuild()
fallguys_custom_round_twitter_announcements_aggregate_bool_exp.model_rebuild()
fallguys_custom_round_twitter_announcements_aggregate_bool_exp_bool_and.model_rebuild()
fallguys_custom_round_twitter_announcements_aggregate_bool_exp_bool_or.model_rebuild()
fallguys_custom_round_twitter_announcements_aggregate_bool_exp_count.model_rebuild()
fallguys_custom_round_twitter_announcements_aggregate_order_by.model_rebuild()
fallguys_custom_round_twitter_announcements_bool_exp.model_rebuild()
fallguys_custom_round_twitter_announcements_max_order_by.model_rebuild()
fallguys_custom_round_twitter_announcements_min_order_by.model_rebuild()
fallguys_custom_round_twitter_announcements_order_by.model_rebuild()
fallguys_custom_round_twitter_announcements_stream_cursor_input.model_rebuild()
fallguys_custom_round_twitter_announcements_stream_cursor_value_input.model_rebuild()
fallguys_custom_rounds_aggregate_bool_exp.model_rebuild()
fallguys_custom_rounds_aggregate_bool_exp_count.model_rebuild()
fallguys_custom_rounds_aggregate_order_by.model_rebuild()
fallguys_custom_rounds_bool_exp.model_rebuild()
fallguys_custom_rounds_max_order_by.model_rebuild()
fallguys_custom_rounds_min_order_by.model_rebuild()
fallguys_custom_rounds_order_by.model_rebuild()
fallguys_custom_rounds_stream_cursor_input.model_rebuild()
fallguys_custom_rounds_stream_cursor_value_input.model_rebuild()
fallguys_match_rounds_aggregate_bool_exp.model_rebuild()
fallguys_match_rounds_aggregate_bool_exp_bool_and.model_rebuild()
fallguys_match_rounds_aggregate_bool_exp_bool_or.model_rebuild()
fallguys_match_rounds_aggregate_bool_exp_count.model_rebuild()
fallguys_match_rounds_aggregate_order_by.model_rebuild()
fallguys_match_rounds_avg_order_by.model_rebuild()
fallguys_match_rounds_bool_exp.model_rebuild()
fallguys_match_rounds_max_order_by.model_rebuild()
fallguys_match_rounds_min_order_by.model_rebuild()
fallguys_match_rounds_order_by.model_rebuild()
fallguys_match_rounds_stddev_order_by.model_rebuild()
fallguys_match_rounds_stddev_pop_order_by.model_rebuild()
fallguys_match_rounds_stddev_samp_order_by.model_rebuild()
fallguys_match_rounds_stream_cursor_input.model_rebuild()
fallguys_match_rounds_stream_cursor_value_input.model_rebuild()
fallguys_match_rounds_sum_order_by.model_rebuild()
fallguys_match_rounds_var_pop_order_by.model_rebuild()
fallguys_match_rounds_var_samp_order_by.model_rebuild()
fallguys_match_rounds_variance_order_by.model_rebuild()
fallguys_matches_aggregate_bool_exp.model_rebuild()
fallguys_matches_aggregate_bool_exp_bool_and.model_rebuild()
fallguys_matches_aggregate_bool_exp_bool_or.model_rebuild()
fallguys_matches_aggregate_bool_exp_count.model_rebuild()
fallguys_matches_aggregate_order_by.model_rebuild()
fallguys_matches_avg_order_by.model_rebuild()
fallguys_matches_bool_exp.model_rebuild()
fallguys_matches_max_order_by.model_rebuild()
fallguys_matches_min_order_by.model_rebuild()
fallguys_matches_order_by.model_rebuild()
fallguys_matches_stddev_order_by.model_rebuild()
fallguys_matches_stddev_pop_order_by.model_rebuild()
fallguys_matches_stddev_samp_order_by.model_rebuild()
fallguys_matches_stream_cursor_input.model_rebuild()
fallguys_matches_stream_cursor_value_input.model_rebuild()
fallguys_matches_sum_order_by.model_rebuild()
fallguys_matches_var_pop_order_by.model_rebuild()
fallguys_matches_var_samp_order_by.model_rebuild()
fallguys_matches_variance_order_by.model_rebuild()
fallguys_rounds_bool_exp.model_rebuild()
fallguys_rounds_order_by.model_rebuild()
fallguys_rounds_stream_cursor_input.model_rebuild()
fallguys_rounds_stream_cursor_value_input.model_rebuild()
fediverse_accounts_bool_exp.model_rebuild()
fediverse_accounts_order_by.model_rebuild()
fediverse_accounts_stream_cursor_input.model_rebuild()
fediverse_accounts_stream_cursor_value_input.model_rebuild()
games_bool_exp.model_rebuild()
games_order_by.model_rebuild()
games_stream_cursor_input.model_rebuild()
games_stream_cursor_value_input.model_rebuild()
mariokart8deluxe_battle_courses_bool_exp.model_rebuild()
mariokart8deluxe_battle_courses_order_by.model_rebuild()
mariokart8deluxe_battle_courses_stream_cursor_input.model_rebuild()
mariokart8deluxe_battle_courses_stream_cursor_value_input.model_rebuild()
mariokart8deluxe_battle_match_players_aggregate_bool_exp.model_rebuild()
mariokart8deluxe_battle_match_players_aggregate_bool_exp_count.model_rebuild()
mariokart8deluxe_battle_match_players_aggregate_order_by.model_rebuild()
mariokart8deluxe_battle_match_players_bool_exp.model_rebuild()
mariokart8deluxe_battle_match_players_max_order_by.model_rebuild()
mariokart8deluxe_battle_match_players_min_order_by.model_rebuild()
mariokart8deluxe_battle_match_players_order_by.model_rebuild()
mariokart8deluxe_battle_match_players_stream_cursor_input.model_rebuild()
mariokart8deluxe_battle_match_players_stream_cursor_value_input.model_rebuild()
mariokart8deluxe_battle_matches_aggregate_bool_exp.model_rebuild()
mariokart8deluxe_battle_matches_aggregate_bool_exp_bool_and.model_rebuild()
mariokart8deluxe_battle_matches_aggregate_bool_exp_bool_or.model_rebuild()
mariokart8deluxe_battle_matches_aggregate_bool_exp_count.model_rebuild()
mariokart8deluxe_battle_matches_aggregate_order_by.model_rebuild()
mariokart8deluxe_battle_matches_avg_order_by.model_rebuild()
mariokart8deluxe_battle_matches_bool_exp.model_rebuild()
mariokart8deluxe_battle_matches_max_order_by.model_rebuild()
mariokart8deluxe_battle_matches_min_order_by.model_rebuild()
mariokart8deluxe_battle_matches_order_by.model_rebuild()
mariokart8deluxe_battle_matches_stddev_order_by.model_rebuild()
mariokart8deluxe_battle_matches_stddev_pop_order_by.model_rebuild()
mariokart8deluxe_battle_matches_stddev_samp_order_by.model_rebuild()
mariokart8deluxe_battle_matches_stream_cursor_input.model_rebuild()
mariokart8deluxe_battle_matches_stream_cursor_value_input.model_rebuild()
mariokart8deluxe_battle_matches_sum_order_by.model_rebuild()
mariokart8deluxe_battle_matches_var_pop_order_by.model_rebuild()
mariokart8deluxe_battle_matches_var_samp_order_by.model_rebuild()
mariokart8deluxe_battle_matches_variance_order_by.model_rebuild()
mariokart8deluxe_battle_rules_bool_exp.model_rebuild()
mariokart8deluxe_battle_rules_order_by.model_rebuild()
mariokart8deluxe_battle_rules_stream_cursor_input.model_rebuild()
mariokart8deluxe_battle_rules_stream_cursor_value_input.model_rebuild()
mariokart8deluxe_consoles_bool_exp.model_rebuild()
mariokart8deluxe_consoles_order_by.model_rebuild()
mariokart8deluxe_consoles_stream_cursor_input.model_rebuild()
mariokart8deluxe_consoles_stream_cursor_value_input.model_rebuild()
mariokart8deluxe_courses_aggregate_bool_exp.model_rebuild()
mariokart8deluxe_courses_aggregate_bool_exp_count.model_rebuild()
mariokart8deluxe_courses_aggregate_order_by.model_rebuild()
mariokart8deluxe_courses_avg_order_by.model_rebuild()
mariokart8deluxe_courses_bool_exp.model_rebuild()
mariokart8deluxe_courses_max_order_by.model_rebuild()
mariokart8deluxe_courses_min_order_by.model_rebuild()
mariokart8deluxe_courses_order_by.model_rebuild()
mariokart8deluxe_courses_stddev_order_by.model_rebuild()
mariokart8deluxe_courses_stddev_pop_order_by.model_rebuild()
mariokart8deluxe_courses_stddev_samp_order_by.model_rebuild()
mariokart8deluxe_courses_stream_cursor_input.model_rebuild()
mariokart8deluxe_courses_stream_cursor_value_input.model_rebuild()
mariokart8deluxe_courses_sum_order_by.model_rebuild()
mariokart8deluxe_courses_var_pop_order_by.model_rebuild()
mariokart8deluxe_courses_var_samp_order_by.model_rebuild()
mariokart8deluxe_courses_variance_order_by.model_rebuild()
mariokart8deluxe_cups_bool_exp.model_rebuild()
mariokart8deluxe_cups_order_by.model_rebuild()
mariokart8deluxe_cups_stream_cursor_input.model_rebuild()
mariokart8deluxe_cups_stream_cursor_value_input.model_rebuild()
mariokart8deluxe_race_players_aggregate_bool_exp.model_rebuild()
mariokart8deluxe_race_players_aggregate_bool_exp_count.model_rebuild()
mariokart8deluxe_race_players_aggregate_order_by.model_rebuild()
mariokart8deluxe_race_players_bool_exp.model_rebuild()
mariokart8deluxe_race_players_max_order_by.model_rebuild()
mariokart8deluxe_race_players_min_order_by.model_rebuild()
mariokart8deluxe_race_players_order_by.model_rebuild()
mariokart8deluxe_race_players_stream_cursor_input.model_rebuild()
mariokart8deluxe_race_players_stream_cursor_value_input.model_rebuild()
mariokart8deluxe_race_rules_bool_exp.model_rebuild()
mariokart8deluxe_race_rules_order_by.model_rebuild()
mariokart8deluxe_race_rules_stream_cursor_input.model_rebuild()
mariokart8deluxe_race_rules_stream_cursor_value_input.model_rebuild()
mariokart8deluxe_races_aggregate_bool_exp.model_rebuild()
mariokart8deluxe_races_aggregate_bool_exp_bool_and.model_rebuild()
mariokart8deluxe_races_aggregate_bool_exp_bool_or.model_rebuild()
mariokart8deluxe_races_aggregate_bool_exp_count.model_rebuild()
mariokart8deluxe_races_aggregate_order_by.model_rebuild()
mariokart8deluxe_races_avg_order_by.model_rebuild()
mariokart8deluxe_races_bool_exp.model_rebuild()
mariokart8deluxe_races_max_order_by.model_rebuild()
mariokart8deluxe_races_min_order_by.model_rebuild()
mariokart8deluxe_races_order_by.model_rebuild()
mariokart8deluxe_races_stddev_order_by.model_rebuild()
mariokart8deluxe_races_stddev_pop_order_by.model_rebuild()
mariokart8deluxe_races_stddev_samp_order_by.model_rebuild()
mariokart8deluxe_races_stream_cursor_input.model_rebuild()
mariokart8deluxe_races_stream_cursor_value_input.model_rebuild()
mariokart8deluxe_races_sum_order_by.model_rebuild()
mariokart8deluxe_races_var_pop_order_by.model_rebuild()
mariokart8deluxe_races_var_samp_order_by.model_rebuild()
mariokart8deluxe_races_variance_order_by.model_rebuild()
niconico_accounts_bool_exp.model_rebuild()
niconico_accounts_order_by.model_rebuild()
niconico_accounts_stream_cursor_input.model_rebuild()
niconico_accounts_stream_cursor_value_input.model_rebuild()
niconico_channels_bool_exp.model_rebuild()
niconico_channels_order_by.model_rebuild()
niconico_channels_stream_cursor_input.model_rebuild()
niconico_channels_stream_cursor_value_input.model_rebuild()
niconico_communities_bool_exp.model_rebuild()
niconico_communities_order_by.model_rebuild()
niconico_communities_stream_cursor_input.model_rebuild()
niconico_communities_stream_cursor_value_input.model_rebuild()
niconico_plus_channels_bool_exp.model_rebuild()
niconico_plus_channels_order_by.model_rebuild()
niconico_plus_channels_stream_cursor_input.model_rebuild()
niconico_plus_channels_stream_cursor_value_input.model_rebuild()
niconico_videos_bool_exp.model_rebuild()
niconico_videos_order_by.model_rebuild()
niconico_videos_stream_cursor_input.model_rebuild()
niconico_videos_stream_cursor_value_input.model_rebuild()
person_fediverse_accounts_aggregate_bool_exp.model_rebuild()
person_fediverse_accounts_aggregate_bool_exp_count.model_rebuild()
person_fediverse_accounts_aggregate_order_by.model_rebuild()
person_fediverse_accounts_bool_exp.model_rebuild()
person_fediverse_accounts_max_order_by.model_rebuild()
person_fediverse_accounts_min_order_by.model_rebuild()
person_fediverse_accounts_order_by.model_rebuild()
person_fediverse_accounts_stream_cursor_input.model_rebuild()
person_fediverse_accounts_stream_cursor_value_input.model_rebuild()
person_niconico_accounts_aggregate_bool_exp.model_rebuild()
person_niconico_accounts_aggregate_bool_exp_count.model_rebuild()
person_niconico_accounts_aggregate_order_by.model_rebuild()
person_niconico_accounts_bool_exp.model_rebuild()
person_niconico_accounts_max_order_by.model_rebuild()
person_niconico_accounts_min_order_by.model_rebuild()
person_niconico_accounts_order_by.model_rebuild()
person_niconico_accounts_stream_cursor_input.model_rebuild()
person_niconico_accounts_stream_cursor_value_input.model_rebuild()
person_niconico_channels_aggregate_bool_exp.model_rebuild()
person_niconico_channels_aggregate_bool_exp_count.model_rebuild()
person_niconico_channels_aggregate_order_by.model_rebuild()
person_niconico_channels_bool_exp.model_rebuild()
person_niconico_channels_max_order_by.model_rebuild()
person_niconico_channels_min_order_by.model_rebuild()
person_niconico_channels_order_by.model_rebuild()
person_niconico_channels_stream_cursor_input.model_rebuild()
person_niconico_channels_stream_cursor_value_input.model_rebuild()
person_niconico_communities_aggregate_bool_exp.model_rebuild()
person_niconico_communities_aggregate_bool_exp_count.model_rebuild()
person_niconico_communities_aggregate_order_by.model_rebuild()
person_niconico_communities_bool_exp.model_rebuild()
person_niconico_communities_max_order_by.model_rebuild()
person_niconico_communities_min_order_by.model_rebuild()
person_niconico_communities_order_by.model_rebuild()
person_niconico_communities_stream_cursor_input.model_rebuild()
person_niconico_communities_stream_cursor_value_input.model_rebuild()
person_niconico_plus_channels_aggregate_bool_exp.model_rebuild()
person_niconico_plus_channels_aggregate_bool_exp_count.model_rebuild()
person_niconico_plus_channels_aggregate_order_by.model_rebuild()
person_niconico_plus_channels_bool_exp.model_rebuild()
person_niconico_plus_channels_max_order_by.model_rebuild()
person_niconico_plus_channels_min_order_by.model_rebuild()
person_niconico_plus_channels_order_by.model_rebuild()
person_niconico_plus_channels_stream_cursor_input.model_rebuild()
person_niconico_plus_channels_stream_cursor_value_input.model_rebuild()
person_twitter_accounts_aggregate_bool_exp.model_rebuild()
person_twitter_accounts_aggregate_bool_exp_count.model_rebuild()
person_twitter_accounts_aggregate_order_by.model_rebuild()
person_twitter_accounts_bool_exp.model_rebuild()
person_twitter_accounts_max_order_by.model_rebuild()
person_twitter_accounts_min_order_by.model_rebuild()
person_twitter_accounts_order_by.model_rebuild()
person_twitter_accounts_stream_cursor_input.model_rebuild()
person_twitter_accounts_stream_cursor_value_input.model_rebuild()
person_youtube_channels_aggregate_bool_exp.model_rebuild()
person_youtube_channels_aggregate_bool_exp_count.model_rebuild()
person_youtube_channels_aggregate_order_by.model_rebuild()
person_youtube_channels_bool_exp.model_rebuild()
person_youtube_channels_max_order_by.model_rebuild()
person_youtube_channels_min_order_by.model_rebuild()
person_youtube_channels_order_by.model_rebuild()
person_youtube_channels_stream_cursor_input.model_rebuild()
person_youtube_channels_stream_cursor_value_input.model_rebuild()
persons_bool_exp.model_rebuild()
persons_order_by.model_rebuild()
persons_stream_cursor_input.model_rebuild()
persons_stream_cursor_value_input.model_rebuild()
program_amongus_maps_aggregate_bool_exp.model_rebuild()
program_amongus_maps_aggregate_bool_exp_count.model_rebuild()
program_amongus_maps_aggregate_order_by.model_rebuild()
program_amongus_maps_bool_exp.model_rebuild()
program_amongus_maps_max_order_by.model_rebuild()
program_amongus_maps_min_order_by.model_rebuild()
program_amongus_maps_order_by.model_rebuild()
program_amongus_maps_stream_cursor_input.model_rebuild()
program_amongus_maps_stream_cursor_value_input.model_rebuild()
program_amongus_mods_aggregate_bool_exp.model_rebuild()
program_amongus_mods_aggregate_bool_exp_count.model_rebuild()
program_amongus_mods_aggregate_order_by.model_rebuild()
program_amongus_mods_bool_exp.model_rebuild()
program_amongus_mods_max_order_by.model_rebuild()
program_amongus_mods_min_order_by.model_rebuild()
program_amongus_mods_order_by.model_rebuild()
program_amongus_mods_stream_cursor_input.model_rebuild()
program_amongus_mods_stream_cursor_value_input.model_rebuild()
program_amongus_vanilla_versions_aggregate_bool_exp.model_rebuild()
program_amongus_vanilla_versions_aggregate_bool_exp_count.model_rebuild()
program_amongus_vanilla_versions_aggregate_order_by.model_rebuild()
program_amongus_vanilla_versions_bool_exp.model_rebuild()
program_amongus_vanilla_versions_max_order_by.model_rebuild()
program_amongus_vanilla_versions_min_order_by.model_rebuild()
program_amongus_vanilla_versions_order_by.model_rebuild()
program_amongus_vanilla_versions_stream_cursor_input.model_rebuild()
program_amongus_vanilla_versions_stream_cursor_value_input.model_rebuild()
program_live_archives_aggregate_bool_exp.model_rebuild()
program_live_archives_aggregate_bool_exp_count.model_rebuild()
program_live_archives_aggregate_order_by.model_rebuild()
program_live_archives_bool_exp.model_rebuild()
program_live_archives_max_order_by.model_rebuild()
program_live_archives_min_order_by.model_rebuild()
program_live_archives_order_by.model_rebuild()
program_live_archives_stream_cursor_input.model_rebuild()
program_live_archives_stream_cursor_value_input.model_rebuild()
program_niconico_videos_aggregate_bool_exp.model_rebuild()
program_niconico_videos_aggregate_bool_exp_count.model_rebuild()
program_niconico_videos_aggregate_order_by.model_rebuild()
program_niconico_videos_bool_exp.model_rebuild()
program_niconico_videos_max_order_by.model_rebuild()
program_niconico_videos_min_order_by.model_rebuild()
program_niconico_videos_order_by.model_rebuild()
program_niconico_videos_stream_cursor_input.model_rebuild()
program_niconico_videos_stream_cursor_value_input.model_rebuild()
program_persons_aggregate_bool_exp.model_rebuild()
program_persons_aggregate_bool_exp_bool_and.model_rebuild()
program_persons_aggregate_bool_exp_bool_or.model_rebuild()
program_persons_aggregate_bool_exp_count.model_rebuild()
program_persons_aggregate_order_by.model_rebuild()
program_persons_bool_exp.model_rebuild()
program_persons_max_order_by.model_rebuild()
program_persons_min_order_by.model_rebuild()
program_persons_order_by.model_rebuild()
program_persons_stream_cursor_input.model_rebuild()
program_persons_stream_cursor_value_input.model_rebuild()
program_projects_aggregate_bool_exp.model_rebuild()
program_projects_aggregate_bool_exp_count.model_rebuild()
program_projects_aggregate_order_by.model_rebuild()
program_projects_bool_exp.model_rebuild()
program_projects_max_order_by.model_rebuild()
program_projects_min_order_by.model_rebuild()
program_projects_order_by.model_rebuild()
program_projects_stream_cursor_input.model_rebuild()
program_projects_stream_cursor_value_input.model_rebuild()
program_twitter_announcements_aggregate_bool_exp.model_rebuild()
program_twitter_announcements_aggregate_bool_exp_count.model_rebuild()
program_twitter_announcements_aggregate_order_by.model_rebuild()
program_twitter_announcements_bool_exp.model_rebuild()
program_twitter_announcements_max_order_by.model_rebuild()
program_twitter_announcements_min_order_by.model_rebuild()
program_twitter_announcements_order_by.model_rebuild()
program_twitter_announcements_stream_cursor_input.model_rebuild()
program_twitter_announcements_stream_cursor_value_input.model_rebuild()
programs_bool_exp.model_rebuild()
programs_order_by.model_rebuild()
programs_stream_cursor_input.model_rebuild()
programs_stream_cursor_value_input.model_rebuild()
project_niconico_videos_aggregate_bool_exp.model_rebuild()
project_niconico_videos_aggregate_bool_exp_count.model_rebuild()
project_niconico_videos_aggregate_order_by.model_rebuild()
project_niconico_videos_bool_exp.model_rebuild()
project_niconico_videos_max_order_by.model_rebuild()
project_niconico_videos_min_order_by.model_rebuild()
project_niconico_videos_order_by.model_rebuild()
project_niconico_videos_stream_cursor_input.model_rebuild()
project_niconico_videos_stream_cursor_value_input.model_rebuild()
projects_bool_exp.model_rebuild()
projects_order_by.model_rebuild()
projects_stream_cursor_input.model_rebuild()
projects_stream_cursor_value_input.model_rebuild()
timestamptz_comparison_exp.model_rebuild()
twitter_accounts_bool_exp.model_rebuild()
twitter_accounts_order_by.model_rebuild()
twitter_accounts_stream_cursor_input.model_rebuild()
twitter_accounts_stream_cursor_value_input.model_rebuild()
twitter_tweet_images_aggregate_bool_exp.model_rebuild()
twitter_tweet_images_aggregate_bool_exp_count.model_rebuild()
twitter_tweet_images_aggregate_order_by.model_rebuild()
twitter_tweet_images_avg_order_by.model_rebuild()
twitter_tweet_images_bool_exp.model_rebuild()
twitter_tweet_images_max_order_by.model_rebuild()
twitter_tweet_images_min_order_by.model_rebuild()
twitter_tweet_images_order_by.model_rebuild()
twitter_tweet_images_stddev_order_by.model_rebuild()
twitter_tweet_images_stddev_pop_order_by.model_rebuild()
twitter_tweet_images_stddev_samp_order_by.model_rebuild()
twitter_tweet_images_stream_cursor_input.model_rebuild()
twitter_tweet_images_stream_cursor_value_input.model_rebuild()
twitter_tweet_images_sum_order_by.model_rebuild()
twitter_tweet_images_var_pop_order_by.model_rebuild()
twitter_tweet_images_var_samp_order_by.model_rebuild()
twitter_tweet_images_variance_order_by.model_rebuild()
twitter_tweets_bool_exp.model_rebuild()
twitter_tweets_order_by.model_rebuild()
twitter_tweets_stream_cursor_input.model_rebuild()
twitter_tweets_stream_cursor_value_input.model_rebuild()
uuid_comparison_exp.model_rebuild()
youtube_channels_bool_exp.model_rebuild()
youtube_channels_order_by.model_rebuild()
youtube_channels_stream_cursor_input.model_rebuild()
youtube_channels_stream_cursor_value_input.model_rebuild()
youtube_lives_aggregate_bool_exp.model_rebuild()
youtube_lives_aggregate_bool_exp_count.model_rebuild()
youtube_lives_aggregate_order_by.model_rebuild()
youtube_lives_bool_exp.model_rebuild()
youtube_lives_max_order_by.model_rebuild()
youtube_lives_min_order_by.model_rebuild()
youtube_lives_order_by.model_rebuild()
youtube_lives_stream_cursor_input.model_rebuild()
youtube_lives_stream_cursor_value_input.model_rebuild()
youtube_videos_bool_exp.model_rebuild()
youtube_videos_order_by.model_rebuild()
youtube_videos_stream_cursor_input.model_rebuild()
youtube_videos_stream_cursor_value_input.model_rebuild()
